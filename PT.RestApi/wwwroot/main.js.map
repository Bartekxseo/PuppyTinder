{"version":3,"file":"main.js","mappings":"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":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/api/api-configuration.ts","./src/app/api/api.module.ts","./src/app/api/base-service.ts","./src/app/api/services.ts","./src/app/api/services/administration.service.ts","./src/app/api/services/machine.service.ts","./src/app/api/services/plc-message.service.ts","./src/app/api/services/reason.service.ts","./src/app/api/services/status.service.ts","./src/app/api/services/weather-forecast.service.ts","./src/app/api/services/work-order.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/areas/machine/form-machine-status-card-list/form-machine-status-card-list.component.ts","./src/app/areas/machine/form-machine-status-card-list/form-machine-status-card-list.component.html","./src/app/areas/machine/machine-routing.module.ts","./src/app/areas/machine/machine-select-admin-panel-dialog/machine-select-admin-panel-dialog.component.ts","./src/app/areas/machine/machine-select-admin-panel-dialog/machine-select-admin-panel-dialog.component.html","./src/app/areas/machine/machine-select/machine-select-grid-configurations.ts","./src/app/areas/machine/machine-select/machine-select.component.ts","./src/app/areas/machine/machine-select/machine-select.component.html","./src/app/areas/machine/machine-status-list/machine-status-list.component.ts","./src/app/areas/machine/machine-status-list/machine-status-list.component.html","./src/app/areas/machine/machine-status-reason-form/machine-status-reason-form.component.ts","./src/app/areas/machine/machine-status-reason-form/machine-status-reason-form.component.html","./src/app/areas/machine/machine-status-work-order-form/machine-status-work-order-form.component.ts","./src/app/areas/machine/machine-status-work-order-form/machine-status-work-order-form.component.html","./src/app/areas/machine/machine-status-work-order-form/select-work-order-panel-dialog/select-work-order-panel-dialog.component.ts","./src/app/areas/machine/machine-status-work-order-form/select-work-order-panel-dialog/select-work-order-panel-dialog.component.html","./src/app/areas/machine/machine-status-worker-form/machine-status-worker-form.component.ts","./src/app/areas/machine/machine-status-worker-form/machine-status-worker-form.component.html","./src/app/areas/machine/machine.module.ts","./src/app/common/components/dsr-app-logo-button/dsr-app-logo-button.component.ts","./src/app/common/components/dsr-app-logo-button/dsr-app-logo-button.component.html","./src/app/common/interceptors/loader-interceptor.service.ts","./src/app/common/PT-common.module.ts","./src/app/common/services/display-configuration.service.ts","./src/app/common/services/focus-refresh.service.ts","./src/app/common/services/loader.service.ts","./src/app/common/services/operator-authentication.service.ts","./src/app/common/services/sfc-navigator.service.ts","./src/app/common/utils/color-helper.ts","./src/app/layout/layout.module.ts","./src/app/layout/layout/layout.component.ts","./src/app/layout/layout/layout.component.html","./src/app/layout/loading-overlay/loading-overlay.component.ts","./src/app/layout/loading-overlay/loading-overlay.component.html","./src/app/layout/loading-overlay/loading-overlay.ref.ts","./src/app/layout/loading-overlay/loading-overlay.service.ts","./src/app/layout/navbar/navbar.component.ts","./src/app/layout/navbar/navbar.component.html","./src/environments/environment.ts","./src/main.ts","./node_modules/moment/locale|sync|/^/.*$"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","/* tslint:disable */\nimport { Injectable } from '@angular/core';\n\n/**\n * Global configuration for Api services\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiConfiguration {\n  rootUrl: string = '';\n}\n\nexport interface ApiConfigurationInterface {\n  rootUrl?: string;\n}\n","/* tslint:disable */\r\nimport { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ApiConfiguration, ApiConfigurationInterface } from './api-configuration';\r\n\r\nimport { AdministrationService } from './services/administration.service';\r\nimport { MachineService } from './services/machine.service';\r\nimport { PlcMessageService } from './services/plc-message.service';\r\nimport { ReasonService } from './services/reason.service';\r\nimport { StatusService } from './services/status.service';\r\nimport { WeatherForecastService } from './services/weather-forecast.service';\r\nimport { WorkOrderService } from './services/work-order.service';\r\n\r\n/**\r\n * Provider for all Api services, plus ApiConfiguration\r\n */\r\n@NgModule({\r\n  imports: [\r\n    HttpClientModule\r\n  ],\r\n  exports: [\r\n    HttpClientModule\r\n  ],\r\n  declarations: [],\r\n  providers: [\r\n    ApiConfiguration,\r\n    AdministrationService,\r\n    MachineService,\r\n    PlcMessageService,\r\n    ReasonService,\r\n    StatusService,\r\n    WeatherForecastService,\r\n    WorkOrderService\r\n  ],\r\n})\r\nexport class ApiModule {\r\n  static forRoot(customParams: ApiConfigurationInterface): ModuleWithProviders<ApiModule> {\r\n    return {\r\n      ngModule: ApiModule,\r\n      providers: [\r\n        {\r\n          provide: ApiConfiguration,\r\n          useValue: {rootUrl: customParams.rootUrl}\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}\r\n","/* tslint:disable */\nimport { HttpClient, HttpParameterCodec, HttpParams } from '@angular/common/http';\nimport { ApiConfiguration } from './api-configuration';\n\n/**\n * Custom parameter codec to correctly handle the plus sign in parameter\n * values. See https://github.com/angular/angular/issues/18261\n */\nclass ParameterCodec implements HttpParameterCodec {\n  encodeKey(key: string): string {\n    return encodeURIComponent(key);\n  }\n\n  encodeValue(value: string): string {\n    return encodeURIComponent(value);\n  }\n\n  decodeKey(key: string): string {\n    return decodeURIComponent(key);\n  }\n\n  decodeValue(value: string): string {\n    return decodeURIComponent(value);\n  }\n}\nconst PARAMETER_CODEC = new ParameterCodec();\n\n/**\n * Base class for API services\n */\nexport class BaseService {\n  constructor(\n    protected config: ApiConfiguration,\n    protected http: HttpClient\n  ) {\n  }\n\n  private _rootUrl: string = '';\n\n  /**\n   * Returns the root url for API operations. If not set directly in this\n   * service, will fallback to ApiConfiguration.rootUrl.\n   */\n  get rootUrl(): string {\n    return this._rootUrl || this.config.rootUrl;\n  }\n\n  /**\n   * Sets the root URL for API operations in this service.\n   */\n  set rootUrl(rootUrl: string) {\n    this._rootUrl = rootUrl;\n  }\n\n  /**\n   * Creates a new `HttpParams` with the correct codec\n   */\n  protected newParams(): HttpParams {\n    return new HttpParams({\n      encoder: PARAMETER_CODEC\n    });\n  }\n}\n","export { AdministrationService } from './services/administration.service';\r\nexport { MachineService } from './services/machine.service';\r\nexport { PlcMessageService } from './services/plc-message.service';\r\nexport { ReasonService } from './services/reason.service';\r\nexport { StatusService } from './services/status.service';\r\nexport { WeatherForecastService } from './services/weather-forecast.service';\r\nexport { WorkOrderService } from './services/work-order.service';\r\n","/* tslint:disable */\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpRequest, HttpResponse, HttpHeaders } from '@angular/common/http';\r\nimport { BaseService as __BaseService } from '../base-service';\r\nimport { ApiConfiguration as __Configuration } from '../api-configuration';\r\nimport { StrictHttpResponse as __StrictHttpResponse } from '../strict-http-response';\r\nimport { Observable as __Observable } from 'rxjs';\r\nimport { map as __map, filter as __filter } from 'rxjs/operators';\r\n\r\nimport { WorkerLoginResult } from '../models/worker-login-result';\r\nimport { WorkerDTOs } from '../models/worker-dtos';\r\nimport { WorkerViewModel } from '../models/worker-view-model';\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nclass AdministrationService extends __BaseService {\r\n  static readonly postApiAdministrationLoginWorkerPath = '/api/Administration/LoginWorker';\r\n  static readonly getApiAdministrationGetCurrentTenantHeaderPath = '/api/Administration/GetCurrentTenantHeader';\r\n  static readonly getApiAdministrationWorkersPath = '/api/Administration/Workers';\r\n  static readonly getApiAdministrationGetWorkersCountPath = '/api/Administration/GetWorkersCount';\r\n  static readonly postApiAdministrationAddOrUpdatePath = '/api/Administration/addOrUpdate';\r\n  static readonly getApiAdministrationGetWorkerPath = '/api/Administration/GetWorker';\r\n  static readonly deleteApiAdministrationDeleteIdPath = '/api/Administration/delete/{id}';\r\n\r\n  constructor(\r\n    config: __Configuration,\r\n    http: HttpClient\r\n  ) {\r\n    super(config, http);\r\n  }\r\n\r\n  /**\r\n   * @param workerLoginCode undefined\r\n   * @return Success\r\n   */\r\n  postApiAdministrationLoginWorkerResponse(workerLoginCode?: string): __Observable<__StrictHttpResponse<WorkerLoginResult>> {\r\n    let __params = this.newParams();\r\n    let __headers = new HttpHeaders();\r\n    let __body: any = null;\r\n    if (workerLoginCode != null) __params = __params.set('workerLoginCode', workerLoginCode.toString());\r\n    let req = new HttpRequest<any>(\r\n      'POST',\r\n      this.rootUrl + `/api/Administration/LoginWorker`,\r\n      __body,\r\n      {\r\n        headers: __headers,\r\n        params: __params,\r\n        responseType: 'json'\r\n      });\r\n\r\n    return this.http.request<any>(req).pipe(\r\n      __filter(_r => _r instanceof HttpResponse),\r\n      __map((_r) => {\r\n        return _r as __StrictHttpResponse<WorkerLoginResult>;\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * @param workerLoginCode undefined\r\n   * @return Success\r\n   */\r\n  postApiAdministrationLoginWorker(workerLoginCode?: string): __Observable<WorkerLoginResult> {\r\n    return this.postApiAdministrationLoginWorkerResponse(workerLoginCode).pipe(\r\n      __map(_r => _r.body as WorkerLoginResult)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getApiAdministrationGetCurrentTenantHeaderResponse(): __Observable<__StrictHttpResponse<string>> {\r\n    let __params = this.newParams();\r\n    let __headers = new HttpHeaders();\r\n    let __body: any = null;\r\n    let req = new HttpRequest<any>(\r\n      'GET',\r\n      this.rootUrl + `/api/Administration/GetCurrentTenantHeader`,\r\n      __body,\r\n      {\r\n        headers: __headers,\r\n        params: __params,\r\n        responseType: 'text'\r\n      });\r\n\r\n    return this.http.request<any>(req).pipe(\r\n      __filter(_r => _r instanceof HttpResponse),\r\n      __map((_r) => {\r\n        return _r as __StrictHttpResponse<string>;\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * @return Success\r\n   */\r\n  getApiAdministrationGetCurrentTenantHeader(): __Observable<string> {\r\n    return this.getApiAdministrationGetCurrentTenantHeaderResponse().pipe(\r\n      __map(_r => _r.body as string)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param options undefined\r\n   * @return Success\r\n   */\r\n  getApiAdministrationWorkersResponse(options?: any): __Observable<__StrictHttpResponse<Array<WorkerDTOs>>> {\r\n    let __params = this.newParams();\r\n    let __headers = new HttpHeaders();\r\n    let __body: any = null;\r\n    if (options != null) __params = __params.set('options', options.toString());\r\n    let req = new HttpRequest<any>(\r\n      'GET',\r\n      this.rootUrl + `/api/Administration/Workers`,\r\n      __body,\r\n      {\r\n        headers: __headers,\r\n        params: __params,\r\n        responseType: 'json'\r\n      });\r\n\r\n    return this.http.request<any>(req).pipe(\r\n      __filter(_r => _r instanceof HttpResponse),\r\n      __map((_r) => {\r\n        return _r as __StrictHttpResponse<Array<WorkerDTOs>>;\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * @param options undefined\r\n   * @return Success\r\n   */\r\n  getApiAdministrationWorkers(options?: any): __Observable<Array<WorkerDTOs>> {\r\n    return this.getApiAdministrationWorkersResponse(options).pipe(\r\n      __map(_r => _r.body as Array<WorkerDTOs>)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param options undefined\r\n   * @return Success\r\n   */\r\n  getApiAdministrationGetWorkersCountResponse(options?: any): __Observable<__StrictHttpResponse<number>> {\r\n    let __params = this.newParams();\r\n    let __headers = new HttpHeaders();\r\n    let __body: any = null;\r\n    if (options != null) __params = __params.set('options', options.toString());\r\n    let req = new HttpRequest<any>(\r\n      'GET',\r\n      this.rootUrl + `/api/Administration/GetWorkersCount`,\r\n      __body,\r\n      {\r\n        headers: __headers,\r\n        params: __params,\r\n        responseType: 'text'\r\n      });\r\n\r\n    return this.http.request<any>(req).pipe(\r\n      __filter(_r => _r instanceof HttpResponse),\r\n      __map((_r) => {\r\n        return (_r as HttpResponse<any>).clone({ body: parseFloat((_r as HttpResponse<any>).body as string) }) as __StrictHttpResponse<number>\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * @param options undefined\r\n   * @return Success\r\n   */\r\n  getApiAdministrationGetWorkersCount(options?: any): __Observable<number> {\r\n    return this.getApiAdministrationGetWorkersCountResponse(options).pipe(\r\n      __map(_r => _r.body as number)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param body undefined\r\n   */\r\n  postApiAdministrationAddOrUpdateResponse(body?: WorkerViewModel): __Observable<__StrictHttpResponse<null>> {\r\n    let __params = this.newParams();\r\n    let __headers = new HttpHeaders();\r\n    let __body: any = null;\r\n    __body = body;\r\n    let req = new HttpRequest<any>(\r\n      'POST',\r\n      this.rootUrl + `/api/Administration/addOrUpdate`,\r\n      __body,\r\n      {\r\n        headers: __headers,\r\n        params: __params,\r\n        responseType: 'json'\r\n      });\r\n\r\n    return this.http.request<any>(req).pipe(\r\n      __filter(_r => _r instanceof HttpResponse),\r\n      __map((_r) => {\r\n        return _r as __StrictHttpResponse<null>;\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * @param body undefined\r\n   */\r\n  postApiAdministrationAddOrUpdate(body?: WorkerViewModel): __Observable<null> {\r\n    return this.postApiAdministrationAddOrUpdateResponse(body).pipe(\r\n      __map(_r => _r.body as null)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param id undefined\r\n   * @return Success\r\n   */\r\n  getApiAdministrationGetWorkerResponse(id?: number): __Observable<__StrictHttpResponse<WorkerViewModel>> {\r\n    let __params = this.newParams();\r\n    let __headers = new HttpHeaders();\r\n    let __body: any = null;\r\n    if (id != null) __params = __params.set('id', id.toString());\r\n    let req = new HttpRequest<any>(\r\n      'GET',\r\n      this.rootUrl + `/api/Administration/GetWorker`,\r\n      __body,\r\n      {\r\n        headers: __headers,\r\n        params: __params,\r\n        responseType: 'json'\r\n      });\r\n\r\n    return this.http.request<any>(req).pipe(\r\n      __filter(_r => _r instanceof HttpResponse),\r\n      __map((_r) => {\r\n        return _r as __StrictHttpResponse<WorkerViewModel>;\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * @param id undefined\r\n   * @return Success\r\n   */\r\n  getApiAdministrationGetWorker(id?: number): __Observable<WorkerViewModel> {\r\n    return this.getApiAdministrationGetWorkerResponse(id).pipe(\r\n      __map(_r => _r.body as WorkerViewModel)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param id undefined\r\n   */\r\n  deleteApiAdministrationDeleteIdResponse(id: number): __Observable<__StrictHttpResponse<null>> {\r\n    let __params = this.newParams();\r\n    let __headers = new HttpHeaders();\r\n    let __body: any = null;\r\n\r\n    let req = new HttpRequest<any>(\r\n      'DELETE',\r\n      this.rootUrl + `/api/Administration/delete/${encodeURIComponent(id)}`,\r\n      __body,\r\n      {\r\n        headers: __headers,\r\n        params: __params,\r\n        responseType: 'json'\r\n      });\r\n\r\n    return this.http.request<any>(req).pipe(\r\n      __filter(_r => _r instanceof HttpResponse),\r\n      __map((_r) => {\r\n        return _r as __StrictHttpResponse<null>;\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * @param id undefined\r\n   */\r\n  deleteApiAdministrationDeleteId(id: number): __Observable<null> {\r\n    return this.deleteApiAdministrationDeleteIdResponse(id).pipe(\r\n      __map(_r => _r.body as null)\r\n    );\r\n  }\r\n}\r\n\r\nmodule AdministrationService {\r\n}\r\n\r\nexport { AdministrationService }\r\n","/* tslint:disable */\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpRequest, HttpResponse, HttpHeaders } from '@angular/common/http';\r\nimport { BaseService as __BaseService } from '../base-service';\r\nimport { ApiConfiguration as __Configuration } from '../api-configuration';\r\nimport { StrictHttpResponse as __StrictHttpResponse } from '../strict-http-response';\r\nimport { Observable as __Observable } from 'rxjs';\r\nimport { map as __map, filter as __filter } from 'rxjs/operators';\r\n\r\nimport { MachineDTOs } from '../models/machine-dtos';\r\nimport { SelectListItemViewModel } from '../models/select-list-item-view-model';\r\nimport { MachineActivityDTOs } from '../models/machine-activity-dtos';\r\nimport { GetMachineActivityViewModel } from '../models/get-machine-activity-view-model';\r\nimport { DictionaryItemViewModel } from '../models/dictionary-item-view-model';\r\nimport { SetStatusReasonModel } from '../models/set-status-reason-model';\r\nimport { WorkOnRoutingsDTOs } from '../models/work-on-routings-dtos';\r\nimport { AssignWorkOnRoutingsResult } from '../models/assign-work-on-routings-result';\r\nimport { AssignWorkOnRoutingsViewModel } from '../models/assign-work-on-routings-view-model';\r\nimport { WorkerPTViewModel } from '../models/worker-PT-view-model';\r\nimport { AssignWorkersModel } from '../models/assign-workers-model';\r\nimport { MachineDisplayConfiguration } from '../models/machine-display-configuration';\r\nimport { MachineProductionMethod1 } from '../models/machine-production-method-1';\r\nimport { MachineViewModel } from '../models/machine-view-model';\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nclass MachineService extends __BaseService {\r\n  static readonly GetMachinePath = '/api/Machine/{machineId}';\r\n  static readonly postApiMachinePath = '/api/Machine';\r\n  static readonly getApiMachinePath = '/api/Machine';\r\n  static readonly postApiMachineGetMachineActivityPath = '/api/Machine/GetMachineActivity';\r\n  static readonly postApiMachineGetStatusReasonsPath = '/api/Machine/GetStatusReasons';\r\n  static readonly postApiMachineSetStatusReasonPath = '/api/Machine/SetStatusReason';\r\n  static readonly postApiMachineValidateWorkOnRoutingPath = '/api/Machine/ValidateWorkOnRouting';\r\n  static readonly postApiMachineAssignWorkOrderPath = '/api/Machine/AssignWorkOrder';\r\n  static readonly postApiMachineValidateWorkerPath = '/api/Machine/ValidateWorker';\r\n  static readonly postApiMachineAssignWorkerPath = '/api/Machine/AssignWorker';\r\n  static readonly postApiMachineAssignWorkerToCurrentActivityPath = '/api/Machine/AssignWorkerToCurrentActivity';\r\n  static readonly getApiMachineGetOpenAttachmentPath = '/api/Machine/GetOpenAttachment';\r\n  static readonly postApiMachineGetMachineDisplayConfigurationPath = '/api/Machine/GetMachineDisplayConfiguration';\r\n  static readonly postApiMachineGetMachineProductionMethod1Path = '/api/Machine/GetMachineProductionMethod1';\r\n  static readonly postApiMachineCreateNewMachineActivityPath = '/api/Machine/CreateNewMachineActivity';\r\n  static readonly getApiMachineMachinesPath = '/api/Machine/Machines';\r\n  static readonly getApiMachineGetMachinesCountPath = '/api/Machine/GetMachinesCount';\r\n  static readonly postApiMachineAddOrUpdatePath = '/api/Machine/addOrUpdate';\r\n  static readonly getApiMachineGetMachinePath = '/api/Machine/GetMachine';\r\n  static readonly deleteApiMachineDeleteIdPath = '/api/Machine/delete/{id}';\r\n\r\n  constructor(\r\n    config: __Configuration,\r\n    http: HttpClient\r\n  ) {\r\n    super(config, http);\r\n  }\r\n\r\n  /**\r\n   * Pobieranie maszyny po jej Id\r\n   * @param machineId\r\n   * @return Success\r\n   */\r\n  GetMachineResponse(machineId: number): __Observable<__StrictHttpResponse<MachineDTOs>> {\r\n    let __params = this.newParams();\r\n    let __headers = new HttpHeaders();\r\n    let __body: any = null;\r\n\r\n    let req = new HttpRequest<any>(\r\n      'GET',\r\n      this.rootUrl + `/api/Machine/${encodeURIComponent(machineId)}`,\r\n      __body,\r\n      {\r\n        headers: __headers,\r\n        params: __params,\r\n        responseType: 'json'\r\n      });\r\n\r\n    return this.http.request<any>(req).pipe(\r\n      __filter(_r => _r instanceof HttpResponse),\r\n      __map((_r) => {\r\n        return _r as __StrictHttpResponse<MachineDTOs>;\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * Pobieranie maszyny po jej Id\r\n   * @param machineId\r\n   * @return Success\r\n   */\r\n  GetMachine(machineId: number): __Observable<MachineDTOs> {\r\n    return this.GetMachineResponse(machineId).pipe(\r\n      __map(_r => _r.body as MachineDTOs)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Pobranie listy maszyn\r\n   * @param body undefined\r\n   * @return Success\r\n   */\r\n  postApiMachineResponse(body?: Array<number>): __Observable<__StrictHttpResponse<Array<MachineDTOs>>> {\r\n    let __params = this.newParams();\r\n    let __headers = new HttpHeaders();\r\n    let __body: any = null;\r\n    __body = body;\r\n    let req = new HttpRequest<any>(\r\n      'POST',\r\n      this.rootUrl + `/api/Machine`,\r\n      __body,\r\n      {\r\n        headers: __headers,\r\n        params: __params,\r\n        responseType: 'json'\r\n      });\r\n\r\n    return this.http.request<any>(req).pipe(\r\n      __filter(_r => _r instanceof HttpResponse),\r\n      __map((_r) => {\r\n        return _r as __StrictHttpResponse<Array<MachineDTOs>>;\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * Pobranie listy maszyn\r\n   * @param body undefined\r\n   * @return Success\r\n   */\r\n  postApiMachine(body?: Array<number>): __Observable<Array<MachineDTOs>> {\r\n    return this.postApiMachineResponse(body).pipe(\r\n      __map(_r => _r.body as Array<MachineDTOs>)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getApiMachineResponse(): __Observable<__StrictHttpResponse<Array<SelectListItemViewModel>>> {\r\n    let __params = this.newParams();\r\n    let __headers = new HttpHeaders();\r\n    let __body: any = null;\r\n    let req = new HttpRequest<any>(\r\n      'GET',\r\n      this.rootUrl + `/api/Machine`,\r\n      __body,\r\n      {\r\n        headers: __headers,\r\n        params: __params,\r\n        responseType: 'json'\r\n      });\r\n\r\n    return this.http.request<any>(req).pipe(\r\n      __filter(_r => _r instanceof HttpResponse),\r\n      __map((_r) => {\r\n        return _r as __StrictHttpResponse<Array<SelectListItemViewModel>>;\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * @return Success\r\n   */\r\n  getApiMachine(): __Observable<Array<SelectListItemViewModel>> {\r\n    return this.getApiMachineResponse().pipe(\r\n      __map(_r => _r.body as Array<SelectListItemViewModel>)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Pobranie listy aktywności maszyny dla danego dnia i danego przedziału godzinowego (zmiany)\r\n   * @param body\r\n   * @return Success\r\n   */\r\n  postApiMachineGetMachineActivityResponse(body?: GetMachineActivityViewModel): __Observable<__StrictHttpResponse<Array<MachineActivityDTOs>>> {\r\n    let __params = this.newParams();\r\n    let __headers = new HttpHeaders();\r\n    let __body: any = null;\r\n    __body = body;\r\n    let req = new HttpRequest<any>(\r\n      'POST',\r\n      this.rootUrl + `/api/Machine/GetMachineActivity`,\r\n      __body,\r\n      {\r\n        headers: __headers,\r\n        params: __params,\r\n        responseType: 'json'\r\n      });\r\n\r\n    return this.http.request<any>(req).pipe(\r\n      __filter(_r => _r instanceof HttpResponse),\r\n      __map((_r) => {\r\n        return _r as __StrictHttpResponse<Array<MachineActivityDTOs>>;\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * Pobranie listy aktywności maszyny dla danego dnia i danego przedziału godzinowego (zmiany)\r\n   * @param body\r\n   * @return Success\r\n   */\r\n  postApiMachineGetMachineActivity(body?: GetMachineActivityViewModel): __Observable<Array<MachineActivityDTOs>> {\r\n    return this.postApiMachineGetMachineActivityResponse(body).pipe(\r\n      __map(_r => _r.body as Array<MachineActivityDTOs>)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Pobranie listy dostępnych statusów\r\n   * @param body undefined\r\n   * @return Success\r\n   */\r\n  postApiMachineGetStatusReasonsResponse(body?: Array<number>): __Observable<__StrictHttpResponse<Array<DictionaryItemViewModel>>> {\r\n    let __params = this.newParams();\r\n    let __headers = new HttpHeaders();\r\n    let __body: any = null;\r\n    __body = body;\r\n    let req = new HttpRequest<any>(\r\n      'POST',\r\n      this.rootUrl + `/api/Machine/GetStatusReasons`,\r\n      __body,\r\n      {\r\n        headers: __headers,\r\n        params: __params,\r\n        responseType: 'json'\r\n      });\r\n\r\n    return this.http.request<any>(req).pipe(\r\n      __filter(_r => _r instanceof HttpResponse),\r\n      __map((_r) => {\r\n        return _r as __StrictHttpResponse<Array<DictionaryItemViewModel>>;\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * Pobranie listy dostępnych statusów\r\n   * @param body undefined\r\n   * @return Success\r\n   */\r\n  postApiMachineGetStatusReasons(body?: Array<number>): __Observable<Array<DictionaryItemViewModel>> {\r\n    return this.postApiMachineGetStatusReasonsResponse(body).pipe(\r\n      __map(_r => _r.body as Array<DictionaryItemViewModel>)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Zapis zmian (przypisania szczegółowego statusu)\r\n   * @param body Lista identyfikatorów aktywności oraz Id powodu zmiany statusu\r\n   * @return Success\r\n   */\r\n  postApiMachineSetStatusReasonResponse(body?: SetStatusReasonModel): __Observable<__StrictHttpResponse<MachineActivityDTOs>> {\r\n    let __params = this.newParams();\r\n    let __headers = new HttpHeaders();\r\n    let __body: any = null;\r\n    __body = body;\r\n    let req = new HttpRequest<any>(\r\n      'POST',\r\n      this.rootUrl + `/api/Machine/SetStatusReason`,\r\n      __body,\r\n      {\r\n        headers: __headers,\r\n        params: __params,\r\n        responseType: 'json'\r\n      });\r\n\r\n    return this.http.request<any>(req).pipe(\r\n      __filter(_r => _r instanceof HttpResponse),\r\n      __map((_r) => {\r\n        return _r as __StrictHttpResponse<MachineActivityDTOs>;\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * Zapis zmian (przypisania szczegółowego statusu)\r\n   * @param body Lista identyfikatorów aktywności oraz Id powodu zmiany statusu\r\n   * @return Success\r\n   */\r\n  postApiMachineSetStatusReason(body?: SetStatusReasonModel): __Observable<MachineActivityDTOs> {\r\n    return this.postApiMachineSetStatusReasonResponse(body).pipe(\r\n      __map(_r => _r.body as MachineActivityDTOs)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Walidacja poprawności zeskanowanego kodu zlecenia\r\n   * @param WorkOrderCode Kod zlecenia z numerem operacji: {kodZlecenia}%{numerOperacji}\r\n   * @return Success\r\n   */\r\n  postApiMachineValidateWorkOnRoutingResponse(WorkOrderCode?: string): __Observable<__StrictHttpResponse<WorkOnRoutingsDTOs>> {\r\n    let __params = this.newParams();\r\n    let __headers = new HttpHeaders();\r\n    let __body: any = null;\r\n    if (WorkOrderCode != null) __params = __params.set('WorkOrderCode', WorkOrderCode.toString());\r\n    let req = new HttpRequest<any>(\r\n      'POST',\r\n      this.rootUrl + `/api/Machine/ValidateWorkOnRouting`,\r\n      __body,\r\n      {\r\n        headers: __headers,\r\n        params: __params,\r\n        responseType: 'json'\r\n      });\r\n\r\n    return this.http.request<any>(req).pipe(\r\n      __filter(_r => _r instanceof HttpResponse),\r\n      __map((_r) => {\r\n        return _r as __StrictHttpResponse<WorkOnRoutingsDTOs>;\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * Walidacja poprawności zeskanowanego kodu zlecenia\r\n   * @param WorkOrderCode Kod zlecenia z numerem operacji: {kodZlecenia}%{numerOperacji}\r\n   * @return Success\r\n   */\r\n  postApiMachineValidateWorkOnRouting(WorkOrderCode?: string): __Observable<WorkOnRoutingsDTOs> {\r\n    return this.postApiMachineValidateWorkOnRoutingResponse(WorkOrderCode).pipe(\r\n      __map(_r => _r.body as WorkOnRoutingsDTOs)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Zapis zmian (przypisania zleceń do aktywności)\r\n   * @param body\r\n   * @return Success\r\n   */\r\n  postApiMachineAssignWorkOrderResponse(body?: AssignWorkOnRoutingsViewModel): __Observable<__StrictHttpResponse<AssignWorkOnRoutingsResult>> {\r\n    let __params = this.newParams();\r\n    let __headers = new HttpHeaders();\r\n    let __body: any = null;\r\n    __body = body;\r\n    let req = new HttpRequest<any>(\r\n      'POST',\r\n      this.rootUrl + `/api/Machine/AssignWorkOrder`,\r\n      __body,\r\n      {\r\n        headers: __headers,\r\n        params: __params,\r\n        responseType: 'json'\r\n      });\r\n\r\n    return this.http.request<any>(req).pipe(\r\n      __filter(_r => _r instanceof HttpResponse),\r\n      __map((_r) => {\r\n        return _r as __StrictHttpResponse<AssignWorkOnRoutingsResult>;\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * Zapis zmian (przypisania zleceń do aktywności)\r\n   * @param body\r\n   * @return Success\r\n   */\r\n  postApiMachineAssignWorkOrder(body?: AssignWorkOnRoutingsViewModel): __Observable<AssignWorkOnRoutingsResult> {\r\n    return this.postApiMachineAssignWorkOrderResponse(body).pipe(\r\n      __map(_r => _r.body as AssignWorkOnRoutingsResult)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Walidacja poprawności zeskanowanego kodu pracownika\r\n   * @param WorkerCode Kod pracownika\r\n   * @return Success\r\n   */\r\n  postApiMachineValidateWorkerResponse(WorkerCode?: string): __Observable<__StrictHttpResponse<WorkerPTViewModel>> {\r\n    let __params = this.newParams();\r\n    let __headers = new HttpHeaders();\r\n    let __body: any = null;\r\n    if (WorkerCode != null) __params = __params.set('WorkerCode', WorkerCode.toString());\r\n    let req = new HttpRequest<any>(\r\n      'POST',\r\n      this.rootUrl + `/api/Machine/ValidateWorker`,\r\n      __body,\r\n      {\r\n        headers: __headers,\r\n        params: __params,\r\n        responseType: 'json'\r\n      });\r\n\r\n    return this.http.request<any>(req).pipe(\r\n      __filter(_r => _r instanceof HttpResponse),\r\n      __map((_r) => {\r\n        return _r as __StrictHttpResponse<WorkerPTViewModel>;\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * Walidacja poprawności zeskanowanego kodu pracownika\r\n   * @param WorkerCode Kod pracownika\r\n   * @return Success\r\n   */\r\n  postApiMachineValidateWorker(WorkerCode?: string): __Observable<WorkerPTViewModel> {\r\n    return this.postApiMachineValidateWorkerResponse(WorkerCode).pipe(\r\n      __map(_r => _r.body as WorkerPTViewModel)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Zapis zmian (przypisania pracowników aktywności)\r\n   * @param body\r\n   */\r\n  postApiMachineAssignWorkerResponse(body?: AssignWorkersModel): __Observable<__StrictHttpResponse<null>> {\r\n    let __params = this.newParams();\r\n    let __headers = new HttpHeaders();\r\n    let __body: any = null;\r\n    __body = body;\r\n    let req = new HttpRequest<any>(\r\n      'POST',\r\n      this.rootUrl + `/api/Machine/AssignWorker`,\r\n      __body,\r\n      {\r\n        headers: __headers,\r\n        params: __params,\r\n        responseType: 'json'\r\n      });\r\n\r\n    return this.http.request<any>(req).pipe(\r\n      __filter(_r => _r instanceof HttpResponse),\r\n      __map((_r) => {\r\n        return _r as __StrictHttpResponse<null>;\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * Zapis zmian (przypisania pracowników aktywności)\r\n   * @param body\r\n   */\r\n  postApiMachineAssignWorker(body?: AssignWorkersModel): __Observable<null> {\r\n    return this.postApiMachineAssignWorkerResponse(body).pipe(\r\n      __map(_r => _r.body as null)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Przypisanie parcownika do aktualnej aktywności maszyny\r\n   * @param params The `MachineService.PostApiMachineAssignWorkerToCurrentActivityParams` containing the following parameters:\r\n   *\r\n   * - `workerId`:\r\n   *\r\n   * - `machineId`:\r\n   *\r\n   * @return Success\r\n   */\r\n  postApiMachineAssignWorkerToCurrentActivityResponse(params: MachineService.PostApiMachineAssignWorkerToCurrentActivityParams): __Observable<__StrictHttpResponse<boolean>> {\r\n    let __params = this.newParams();\r\n    let __headers = new HttpHeaders();\r\n    let __body: any = null;\r\n    if (params.workerId != null) __params = __params.set('workerId', params.workerId.toString());\r\n    if (params.machineId != null) __params = __params.set('machineId', params.machineId.toString());\r\n    let req = new HttpRequest<any>(\r\n      'POST',\r\n      this.rootUrl + `/api/Machine/AssignWorkerToCurrentActivity`,\r\n      __body,\r\n      {\r\n        headers: __headers,\r\n        params: __params,\r\n        responseType: 'text'\r\n      });\r\n\r\n    return this.http.request<any>(req).pipe(\r\n      __filter(_r => _r instanceof HttpResponse),\r\n      __map((_r) => {\r\n        return (_r as HttpResponse<any>).clone({ body: (_r as HttpResponse<any>).body === 'true' }) as __StrictHttpResponse<boolean>\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * Przypisanie parcownika do aktualnej aktywności maszyny\r\n   * @param params The `MachineService.PostApiMachineAssignWorkerToCurrentActivityParams` containing the following parameters:\r\n   *\r\n   * - `workerId`:\r\n   *\r\n   * - `machineId`:\r\n   *\r\n   * @return Success\r\n   */\r\n  postApiMachineAssignWorkerToCurrentActivity(params: MachineService.PostApiMachineAssignWorkerToCurrentActivityParams): __Observable<boolean> {\r\n    return this.postApiMachineAssignWorkerToCurrentActivityResponse(params).pipe(\r\n      __map(_r => _r.body as boolean)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param machineId undefined\r\n   */\r\n  getApiMachineGetOpenAttachmentResponse(machineId?: number): __Observable<__StrictHttpResponse<null>> {\r\n    let __params = this.newParams();\r\n    let __headers = new HttpHeaders();\r\n    let __body: any = null;\r\n    if (machineId != null) __params = __params.set('machineId', machineId.toString());\r\n    let req = new HttpRequest<any>(\r\n      'GET',\r\n      this.rootUrl + `/api/Machine/GetOpenAttachment`,\r\n      __body,\r\n      {\r\n        headers: __headers,\r\n        params: __params,\r\n        responseType: 'json'\r\n      });\r\n\r\n    return this.http.request<any>(req).pipe(\r\n      __filter(_r => _r instanceof HttpResponse),\r\n      __map((_r) => {\r\n        return _r as __StrictHttpResponse<null>;\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * @param machineId undefined\r\n   */\r\n  getApiMachineGetOpenAttachment(machineId?: number): __Observable<null> {\r\n    return this.getApiMachineGetOpenAttachmentResponse(machineId).pipe(\r\n      __map(_r => _r.body as null)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param machineId undefined\r\n   * @return Success\r\n   */\r\n  postApiMachineGetMachineDisplayConfigurationResponse(machineId?: number): __Observable<__StrictHttpResponse<MachineDisplayConfiguration>> {\r\n    let __params = this.newParams();\r\n    let __headers = new HttpHeaders();\r\n    let __body: any = null;\r\n    if (machineId != null) __params = __params.set('machineId', machineId.toString());\r\n    let req = new HttpRequest<any>(\r\n      'POST',\r\n      this.rootUrl + `/api/Machine/GetMachineDisplayConfiguration`,\r\n      __body,\r\n      {\r\n        headers: __headers,\r\n        params: __params,\r\n        responseType: 'json'\r\n      });\r\n\r\n    return this.http.request<any>(req).pipe(\r\n      __filter(_r => _r instanceof HttpResponse),\r\n      __map((_r) => {\r\n        return _r as __StrictHttpResponse<MachineDisplayConfiguration>;\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * @param machineId undefined\r\n   * @return Success\r\n   */\r\n  postApiMachineGetMachineDisplayConfiguration(machineId?: number): __Observable<MachineDisplayConfiguration> {\r\n    return this.postApiMachineGetMachineDisplayConfigurationResponse(machineId).pipe(\r\n      __map(_r => _r.body as MachineDisplayConfiguration)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param machineId undefined\r\n   * @return Success\r\n   */\r\n  postApiMachineGetMachineProductionMethod1Response(machineId?: number): __Observable<__StrictHttpResponse<MachineProductionMethod1>> {\r\n    let __params = this.newParams();\r\n    let __headers = new HttpHeaders();\r\n    let __body: any = null;\r\n    if (machineId != null) __params = __params.set('machineId', machineId.toString());\r\n    let req = new HttpRequest<any>(\r\n      'POST',\r\n      this.rootUrl + `/api/Machine/GetMachineProductionMethod1`,\r\n      __body,\r\n      {\r\n        headers: __headers,\r\n        params: __params,\r\n        responseType: 'json'\r\n      });\r\n\r\n    return this.http.request<any>(req).pipe(\r\n      __filter(_r => _r instanceof HttpResponse),\r\n      __map((_r) => {\r\n        return _r as __StrictHttpResponse<MachineProductionMethod1>;\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * @param machineId undefined\r\n   * @return Success\r\n   */\r\n  postApiMachineGetMachineProductionMethod1(machineId?: number): __Observable<MachineProductionMethod1> {\r\n    return this.postApiMachineGetMachineProductionMethod1Response(machineId).pipe(\r\n      __map(_r => _r.body as MachineProductionMethod1)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param machineId undefined\r\n   */\r\n  postApiMachineCreateNewMachineActivityResponse(machineId?: number): __Observable<__StrictHttpResponse<null>> {\r\n    let __params = this.newParams();\r\n    let __headers = new HttpHeaders();\r\n    let __body: any = null;\r\n    if (machineId != null) __params = __params.set('machineId', machineId.toString());\r\n    let req = new HttpRequest<any>(\r\n      'POST',\r\n      this.rootUrl + `/api/Machine/CreateNewMachineActivity`,\r\n      __body,\r\n      {\r\n        headers: __headers,\r\n        params: __params,\r\n        responseType: 'json'\r\n      });\r\n\r\n    return this.http.request<any>(req).pipe(\r\n      __filter(_r => _r instanceof HttpResponse),\r\n      __map((_r) => {\r\n        return _r as __StrictHttpResponse<null>;\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * @param machineId undefined\r\n   */\r\n  postApiMachineCreateNewMachineActivity(machineId?: number): __Observable<null> {\r\n    return this.postApiMachineCreateNewMachineActivityResponse(machineId).pipe(\r\n      __map(_r => _r.body as null)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param options undefined\r\n   * @return Success\r\n   */\r\n  getApiMachineMachinesResponse(options?: any): __Observable<__StrictHttpResponse<Array<MachineDTOs>>> {\r\n    let __params = this.newParams();\r\n    let __headers = new HttpHeaders();\r\n    let __body: any = null;\r\n    if (options != null) __params = __params.set('options', options.toString());\r\n    let req = new HttpRequest<any>(\r\n      'GET',\r\n      this.rootUrl + `/api/Machine/Machines`,\r\n      __body,\r\n      {\r\n        headers: __headers,\r\n        params: __params,\r\n        responseType: 'json'\r\n      });\r\n\r\n    return this.http.request<any>(req).pipe(\r\n      __filter(_r => _r instanceof HttpResponse),\r\n      __map((_r) => {\r\n        return _r as __StrictHttpResponse<Array<MachineDTOs>>;\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * @param options undefined\r\n   * @return Success\r\n   */\r\n  getApiMachineMachines(options?: any): __Observable<Array<MachineDTOs>> {\r\n    return this.getApiMachineMachinesResponse(options).pipe(\r\n      __map(_r => _r.body as Array<MachineDTOs>)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param options undefined\r\n   * @return Success\r\n   */\r\n  getApiMachineGetMachinesCountResponse(options?: any): __Observable<__StrictHttpResponse<number>> {\r\n    let __params = this.newParams();\r\n    let __headers = new HttpHeaders();\r\n    let __body: any = null;\r\n    if (options != null) __params = __params.set('options', options.toString());\r\n    let req = new HttpRequest<any>(\r\n      'GET',\r\n      this.rootUrl + `/api/Machine/GetMachinesCount`,\r\n      __body,\r\n      {\r\n        headers: __headers,\r\n        params: __params,\r\n        responseType: 'text'\r\n      });\r\n\r\n    return this.http.request<any>(req).pipe(\r\n      __filter(_r => _r instanceof HttpResponse),\r\n      __map((_r) => {\r\n        return (_r as HttpResponse<any>).clone({ body: parseFloat((_r as HttpResponse<any>).body as string) }) as __StrictHttpResponse<number>\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * @param options undefined\r\n   * @return Success\r\n   */\r\n  getApiMachineGetMachinesCount(options?: any): __Observable<number> {\r\n    return this.getApiMachineGetMachinesCountResponse(options).pipe(\r\n      __map(_r => _r.body as number)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param body undefined\r\n   */\r\n  postApiMachineAddOrUpdateResponse(body?: MachineViewModel): __Observable<__StrictHttpResponse<null>> {\r\n    let __params = this.newParams();\r\n    let __headers = new HttpHeaders();\r\n    let __body: any = null;\r\n    __body = body;\r\n    let req = new HttpRequest<any>(\r\n      'POST',\r\n      this.rootUrl + `/api/Machine/addOrUpdate`,\r\n      __body,\r\n      {\r\n        headers: __headers,\r\n        params: __params,\r\n        responseType: 'json'\r\n      });\r\n\r\n    return this.http.request<any>(req).pipe(\r\n      __filter(_r => _r instanceof HttpResponse),\r\n      __map((_r) => {\r\n        return _r as __StrictHttpResponse<null>;\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * @param body undefined\r\n   */\r\n  postApiMachineAddOrUpdate(body?: MachineViewModel): __Observable<null> {\r\n    return this.postApiMachineAddOrUpdateResponse(body).pipe(\r\n      __map(_r => _r.body as null)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param id undefined\r\n   * @return Success\r\n   */\r\n  getApiMachineGetMachineResponse(id?: number): __Observable<__StrictHttpResponse<MachineViewModel>> {\r\n    let __params = this.newParams();\r\n    let __headers = new HttpHeaders();\r\n    let __body: any = null;\r\n    if (id != null) __params = __params.set('id', id.toString());\r\n    let req = new HttpRequest<any>(\r\n      'GET',\r\n      this.rootUrl + `/api/Machine/GetMachine`,\r\n      __body,\r\n      {\r\n        headers: __headers,\r\n        params: __params,\r\n        responseType: 'json'\r\n      });\r\n\r\n    return this.http.request<any>(req).pipe(\r\n      __filter(_r => _r instanceof HttpResponse),\r\n      __map((_r) => {\r\n        return _r as __StrictHttpResponse<MachineViewModel>;\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * @param id undefined\r\n   * @return Success\r\n   */\r\n  getApiMachineGetMachine(id?: number): __Observable<MachineViewModel> {\r\n    return this.getApiMachineGetMachineResponse(id).pipe(\r\n      __map(_r => _r.body as MachineViewModel)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param id undefined\r\n   */\r\n  deleteApiMachineDeleteIdResponse(id: number): __Observable<__StrictHttpResponse<null>> {\r\n    let __params = this.newParams();\r\n    let __headers = new HttpHeaders();\r\n    let __body: any = null;\r\n\r\n    let req = new HttpRequest<any>(\r\n      'DELETE',\r\n      this.rootUrl + `/api/Machine/delete/${encodeURIComponent(id)}`,\r\n      __body,\r\n      {\r\n        headers: __headers,\r\n        params: __params,\r\n        responseType: 'json'\r\n      });\r\n\r\n    return this.http.request<any>(req).pipe(\r\n      __filter(_r => _r instanceof HttpResponse),\r\n      __map((_r) => {\r\n        return _r as __StrictHttpResponse<null>;\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * @param id undefined\r\n   */\r\n  deleteApiMachineDeleteId(id: number): __Observable<null> {\r\n    return this.deleteApiMachineDeleteIdResponse(id).pipe(\r\n      __map(_r => _r.body as null)\r\n    );\r\n  }\r\n}\r\n\r\nmodule MachineService {\r\n\r\n  /**\r\n   * Parameters for postApiMachineAssignWorkerToCurrentActivity\r\n   */\r\n  export interface PostApiMachineAssignWorkerToCurrentActivityParams {\r\n    workerId?: number;\r\n    machineId?: number;\r\n  }\r\n}\r\n\r\nexport { MachineService }\r\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpResponse, HttpHeaders } from '@angular/common/http';\nimport { BaseService as __BaseService } from '../base-service';\nimport { ApiConfiguration as __Configuration } from '../api-configuration';\nimport { StrictHttpResponse as __StrictHttpResponse } from '../strict-http-response';\nimport { Observable as __Observable } from 'rxjs';\nimport { map as __map, filter as __filter } from 'rxjs/operators';\n\nimport { PlcMessage } from '../models/plc-message';\n@Injectable({\n  providedIn: 'root',\n})\nclass PlcMessageService extends __BaseService {\n  static readonly getApiPlcMessagePath = '/api/PlcMessage';\n  static readonly getApiPlcMessageGetLogsPath = '/api/PlcMessage/GetLogs';\n\n  constructor(\n    config: __Configuration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * @return Success\n   */\n  getApiPlcMessageResponse(): __Observable<__StrictHttpResponse<Array<PlcMessage>>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    let req = new HttpRequest<any>(\n      'GET',\n      this.rootUrl + `/api/PlcMessage`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<Array<PlcMessage>>;\n      })\n    );\n  }\n  /**\n   * @return Success\n   */\n  getApiPlcMessage(): __Observable<Array<PlcMessage>> {\n    return this.getApiPlcMessageResponse().pipe(\n      __map(_r => _r.body as Array<PlcMessage>)\n    );\n  }\n  getApiPlcMessageGetLogsResponse(): __Observable<__StrictHttpResponse<null>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    let req = new HttpRequest<any>(\n      'GET',\n      this.rootUrl + `/api/PlcMessage/GetLogs`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<null>;\n      })\n    );\n  }  getApiPlcMessageGetLogs(): __Observable<null> {\n    return this.getApiPlcMessageGetLogsResponse().pipe(\n      __map(_r => _r.body as null)\n    );\n  }\n}\n\nmodule PlcMessageService {\n}\n\nexport { PlcMessageService }\n","/* tslint:disable */\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpRequest, HttpResponse, HttpHeaders } from '@angular/common/http';\r\nimport { BaseService as __BaseService } from '../base-service';\r\nimport { ApiConfiguration as __Configuration } from '../api-configuration';\r\nimport { StrictHttpResponse as __StrictHttpResponse } from '../strict-http-response';\r\nimport { Observable as __Observable } from 'rxjs';\r\nimport { map as __map, filter as __filter } from 'rxjs/operators';\r\n\r\nimport { SattlementReasonDTOs } from '../models/sattlement-reason-dtos';\r\nimport { SattlementReasonViewModel } from '../models/sattlement-reason-view-model';\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nclass ReasonService extends __BaseService {\r\n  static readonly getApiReasonSattlementReasonsPath = '/api/Reason/SattlementReasons';\r\n  static readonly getApiReasonGetSattlementReasonsCountPath = '/api/Reason/GetSattlementReasonsCount';\r\n  static readonly postApiReasonAddOrUpdatePath = '/api/Reason/addOrUpdate';\r\n  static readonly getApiReasonGetSattlementReasonPath = '/api/Reason/GetSattlementReason';\r\n  static readonly deleteApiReasonDeleteIdPath = '/api/Reason/delete/{id}';\r\n\r\n  constructor(\r\n    config: __Configuration,\r\n    http: HttpClient\r\n  ) {\r\n    super(config, http);\r\n  }\r\n\r\n  /**\r\n   * @param options undefined\r\n   * @return Success\r\n   */\r\n  getApiReasonSattlementReasonsResponse(options?: any): __Observable<__StrictHttpResponse<Array<SattlementReasonDTOs>>> {\r\n    let __params = this.newParams();\r\n    let __headers = new HttpHeaders();\r\n    let __body: any = null;\r\n    if (options != null) __params = __params.set('options', options.toString());\r\n    let req = new HttpRequest<any>(\r\n      'GET',\r\n      this.rootUrl + `/api/Reason/SattlementReasons`,\r\n      __body,\r\n      {\r\n        headers: __headers,\r\n        params: __params,\r\n        responseType: 'json'\r\n      });\r\n\r\n    return this.http.request<any>(req).pipe(\r\n      __filter(_r => _r instanceof HttpResponse),\r\n      __map((_r) => {\r\n        return _r as __StrictHttpResponse<Array<SattlementReasonDTOs>>;\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * @param options undefined\r\n   * @return Success\r\n   */\r\n  getApiReasonSattlementReasons(options?: any): __Observable<Array<SattlementReasonDTOs>> {\r\n    return this.getApiReasonSattlementReasonsResponse(options).pipe(\r\n      __map(_r => _r.body as Array<SattlementReasonDTOs>)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param options undefined\r\n   * @return Success\r\n   */\r\n  getApiReasonGetSattlementReasonsCountResponse(options?: any): __Observable<__StrictHttpResponse<number>> {\r\n    let __params = this.newParams();\r\n    let __headers = new HttpHeaders();\r\n    let __body: any = null;\r\n    if (options != null) __params = __params.set('options', options.toString());\r\n    let req = new HttpRequest<any>(\r\n      'GET',\r\n      this.rootUrl + `/api/Reason/GetSattlementReasonsCount`,\r\n      __body,\r\n      {\r\n        headers: __headers,\r\n        params: __params,\r\n        responseType: 'text'\r\n      });\r\n\r\n    return this.http.request<any>(req).pipe(\r\n      __filter(_r => _r instanceof HttpResponse),\r\n      __map((_r) => {\r\n        return (_r as HttpResponse<any>).clone({ body: parseFloat((_r as HttpResponse<any>).body as string) }) as __StrictHttpResponse<number>\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * @param options undefined\r\n   * @return Success\r\n   */\r\n  getApiReasonGetSattlementReasonsCount(options?: any): __Observable<number> {\r\n    return this.getApiReasonGetSattlementReasonsCountResponse(options).pipe(\r\n      __map(_r => _r.body as number)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param body undefined\r\n   */\r\n  postApiReasonAddOrUpdateResponse(body?: SattlementReasonViewModel): __Observable<__StrictHttpResponse<null>> {\r\n    let __params = this.newParams();\r\n    let __headers = new HttpHeaders();\r\n    let __body: any = null;\r\n    __body = body;\r\n    let req = new HttpRequest<any>(\r\n      'POST',\r\n      this.rootUrl + `/api/Reason/addOrUpdate`,\r\n      __body,\r\n      {\r\n        headers: __headers,\r\n        params: __params,\r\n        responseType: 'json'\r\n      });\r\n\r\n    return this.http.request<any>(req).pipe(\r\n      __filter(_r => _r instanceof HttpResponse),\r\n      __map((_r) => {\r\n        return _r as __StrictHttpResponse<null>;\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * @param body undefined\r\n   */\r\n  postApiReasonAddOrUpdate(body?: SattlementReasonViewModel): __Observable<null> {\r\n    return this.postApiReasonAddOrUpdateResponse(body).pipe(\r\n      __map(_r => _r.body as null)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param id undefined\r\n   * @return Success\r\n   */\r\n  getApiReasonGetSattlementReasonResponse(id?: number): __Observable<__StrictHttpResponse<SattlementReasonViewModel>> {\r\n    let __params = this.newParams();\r\n    let __headers = new HttpHeaders();\r\n    let __body: any = null;\r\n    if (id != null) __params = __params.set('id', id.toString());\r\n    let req = new HttpRequest<any>(\r\n      'GET',\r\n      this.rootUrl + `/api/Reason/GetSattlementReason`,\r\n      __body,\r\n      {\r\n        headers: __headers,\r\n        params: __params,\r\n        responseType: 'json'\r\n      });\r\n\r\n    return this.http.request<any>(req).pipe(\r\n      __filter(_r => _r instanceof HttpResponse),\r\n      __map((_r) => {\r\n        return _r as __StrictHttpResponse<SattlementReasonViewModel>;\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * @param id undefined\r\n   * @return Success\r\n   */\r\n  getApiReasonGetSattlementReason(id?: number): __Observable<SattlementReasonViewModel> {\r\n    return this.getApiReasonGetSattlementReasonResponse(id).pipe(\r\n      __map(_r => _r.body as SattlementReasonViewModel)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param id undefined\r\n   */\r\n  deleteApiReasonDeleteIdResponse(id: number): __Observable<__StrictHttpResponse<null>> {\r\n    let __params = this.newParams();\r\n    let __headers = new HttpHeaders();\r\n    let __body: any = null;\r\n\r\n    let req = new HttpRequest<any>(\r\n      'DELETE',\r\n      this.rootUrl + `/api/Reason/delete/${encodeURIComponent(id)}`,\r\n      __body,\r\n      {\r\n        headers: __headers,\r\n        params: __params,\r\n        responseType: 'json'\r\n      });\r\n\r\n    return this.http.request<any>(req).pipe(\r\n      __filter(_r => _r instanceof HttpResponse),\r\n      __map((_r) => {\r\n        return _r as __StrictHttpResponse<null>;\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * @param id undefined\r\n   */\r\n  deleteApiReasonDeleteId(id: number): __Observable<null> {\r\n    return this.deleteApiReasonDeleteIdResponse(id).pipe(\r\n      __map(_r => _r.body as null)\r\n    );\r\n  }\r\n}\r\n\r\nmodule ReasonService {\r\n}\r\n\r\nexport { ReasonService }\r\n","/* tslint:disable */\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpRequest, HttpResponse, HttpHeaders } from '@angular/common/http';\r\nimport { BaseService as __BaseService } from '../base-service';\r\nimport { ApiConfiguration as __Configuration } from '../api-configuration';\r\nimport { StrictHttpResponse as __StrictHttpResponse } from '../strict-http-response';\r\nimport { Observable as __Observable } from 'rxjs';\r\nimport { map as __map, filter as __filter } from 'rxjs/operators';\r\n\r\nimport { StatusDTOs } from '../models/status-dtos';\r\nimport { StatusViewModel } from '../models/status-view-model';\r\nimport { AdvancedStatusDTOs } from '../models/advanced-status-dtos';\r\nimport { AdvancedStatusViewModel } from '../models/advanced-status-view-model';\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nclass StatusService extends __BaseService {\r\n  static readonly getApiStatusStatusesPath = '/api/Status/Statuses';\r\n  static readonly getApiStatusGetStatusesCountPath = '/api/Status/GetStatusesCount';\r\n  static readonly postApiStatusAddOrUpdatePath = '/api/Status/addOrUpdate';\r\n  static readonly getApiStatusGetStatusPath = '/api/Status/GetStatus';\r\n  static readonly deleteApiStatusDeleteIdPath = '/api/Status/delete/{id}';\r\n  static readonly getApiStatusAdvancedStatusesPath = '/api/Status/AdvancedStatuses';\r\n  static readonly getApiStatusGetAdvancedStatusesCountPath = '/api/Status/GetAdvancedStatusesCount';\r\n  static readonly postApiStatusAddOrUpdateAdvancedPath = '/api/Status/addOrUpdateAdvanced';\r\n  static readonly getApiStatusGetAdvancedStatusPath = '/api/Status/GetAdvancedStatus';\r\n  static readonly deleteApiStatusDeleteAdvancedIdPath = '/api/Status/deleteAdvanced/{id}';\r\n\r\n  constructor(\r\n    config: __Configuration,\r\n    http: HttpClient\r\n  ) {\r\n    super(config, http);\r\n  }\r\n\r\n  /**\r\n   * @param options undefined\r\n   * @return Success\r\n   */\r\n  getApiStatusStatusesResponse(options?: any): __Observable<__StrictHttpResponse<Array<StatusDTOs>>> {\r\n    let __params = this.newParams();\r\n    let __headers = new HttpHeaders();\r\n    let __body: any = null;\r\n    if (options != null) __params = __params.set('options', options.toString());\r\n    let req = new HttpRequest<any>(\r\n      'GET',\r\n      this.rootUrl + `/api/Status/Statuses`,\r\n      __body,\r\n      {\r\n        headers: __headers,\r\n        params: __params,\r\n        responseType: 'json'\r\n      });\r\n\r\n    return this.http.request<any>(req).pipe(\r\n      __filter(_r => _r instanceof HttpResponse),\r\n      __map((_r) => {\r\n        return _r as __StrictHttpResponse<Array<StatusDTOs>>;\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * @param options undefined\r\n   * @return Success\r\n   */\r\n  getApiStatusStatuses(options?: any): __Observable<Array<StatusDTOs>> {\r\n    return this.getApiStatusStatusesResponse(options).pipe(\r\n      __map(_r => _r.body as Array<StatusDTOs>)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param options undefined\r\n   * @return Success\r\n   */\r\n  getApiStatusGetStatusesCountResponse(options?: any): __Observable<__StrictHttpResponse<number>> {\r\n    let __params = this.newParams();\r\n    let __headers = new HttpHeaders();\r\n    let __body: any = null;\r\n    if (options != null) __params = __params.set('options', options.toString());\r\n    let req = new HttpRequest<any>(\r\n      'GET',\r\n      this.rootUrl + `/api/Status/GetStatusesCount`,\r\n      __body,\r\n      {\r\n        headers: __headers,\r\n        params: __params,\r\n        responseType: 'text'\r\n      });\r\n\r\n    return this.http.request<any>(req).pipe(\r\n      __filter(_r => _r instanceof HttpResponse),\r\n      __map((_r) => {\r\n        return (_r as HttpResponse<any>).clone({ body: parseFloat((_r as HttpResponse<any>).body as string) }) as __StrictHttpResponse<number>\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * @param options undefined\r\n   * @return Success\r\n   */\r\n  getApiStatusGetStatusesCount(options?: any): __Observable<number> {\r\n    return this.getApiStatusGetStatusesCountResponse(options).pipe(\r\n      __map(_r => _r.body as number)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param body undefined\r\n   */\r\n  postApiStatusAddOrUpdateResponse(body?: StatusViewModel): __Observable<__StrictHttpResponse<null>> {\r\n    let __params = this.newParams();\r\n    let __headers = new HttpHeaders();\r\n    let __body: any = null;\r\n    __body = body;\r\n    let req = new HttpRequest<any>(\r\n      'POST',\r\n      this.rootUrl + `/api/Status/addOrUpdate`,\r\n      __body,\r\n      {\r\n        headers: __headers,\r\n        params: __params,\r\n        responseType: 'json'\r\n      });\r\n\r\n    return this.http.request<any>(req).pipe(\r\n      __filter(_r => _r instanceof HttpResponse),\r\n      __map((_r) => {\r\n        return _r as __StrictHttpResponse<null>;\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * @param body undefined\r\n   */\r\n  postApiStatusAddOrUpdate(body?: StatusViewModel): __Observable<null> {\r\n    return this.postApiStatusAddOrUpdateResponse(body).pipe(\r\n      __map(_r => _r.body as null)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param id undefined\r\n   * @return Success\r\n   */\r\n  getApiStatusGetStatusResponse(id?: number): __Observable<__StrictHttpResponse<StatusViewModel>> {\r\n    let __params = this.newParams();\r\n    let __headers = new HttpHeaders();\r\n    let __body: any = null;\r\n    if (id != null) __params = __params.set('id', id.toString());\r\n    let req = new HttpRequest<any>(\r\n      'GET',\r\n      this.rootUrl + `/api/Status/GetStatus`,\r\n      __body,\r\n      {\r\n        headers: __headers,\r\n        params: __params,\r\n        responseType: 'json'\r\n      });\r\n\r\n    return this.http.request<any>(req).pipe(\r\n      __filter(_r => _r instanceof HttpResponse),\r\n      __map((_r) => {\r\n        return _r as __StrictHttpResponse<StatusViewModel>;\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * @param id undefined\r\n   * @return Success\r\n   */\r\n  getApiStatusGetStatus(id?: number): __Observable<StatusViewModel> {\r\n    return this.getApiStatusGetStatusResponse(id).pipe(\r\n      __map(_r => _r.body as StatusViewModel)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param id undefined\r\n   */\r\n  deleteApiStatusDeleteIdResponse(id: number): __Observable<__StrictHttpResponse<null>> {\r\n    let __params = this.newParams();\r\n    let __headers = new HttpHeaders();\r\n    let __body: any = null;\r\n\r\n    let req = new HttpRequest<any>(\r\n      'DELETE',\r\n      this.rootUrl + `/api/Status/delete/${encodeURIComponent(id)}`,\r\n      __body,\r\n      {\r\n        headers: __headers,\r\n        params: __params,\r\n        responseType: 'json'\r\n      });\r\n\r\n    return this.http.request<any>(req).pipe(\r\n      __filter(_r => _r instanceof HttpResponse),\r\n      __map((_r) => {\r\n        return _r as __StrictHttpResponse<null>;\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * @param id undefined\r\n   */\r\n  deleteApiStatusDeleteId(id: number): __Observable<null> {\r\n    return this.deleteApiStatusDeleteIdResponse(id).pipe(\r\n      __map(_r => _r.body as null)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param options undefined\r\n   * @return Success\r\n   */\r\n  getApiStatusAdvancedStatusesResponse(options?: any): __Observable<__StrictHttpResponse<Array<AdvancedStatusDTOs>>> {\r\n    let __params = this.newParams();\r\n    let __headers = new HttpHeaders();\r\n    let __body: any = null;\r\n    if (options != null) __params = __params.set('options', options.toString());\r\n    let req = new HttpRequest<any>(\r\n      'GET',\r\n      this.rootUrl + `/api/Status/AdvancedStatuses`,\r\n      __body,\r\n      {\r\n        headers: __headers,\r\n        params: __params,\r\n        responseType: 'json'\r\n      });\r\n\r\n    return this.http.request<any>(req).pipe(\r\n      __filter(_r => _r instanceof HttpResponse),\r\n      __map((_r) => {\r\n        return _r as __StrictHttpResponse<Array<AdvancedStatusDTOs>>;\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * @param options undefined\r\n   * @return Success\r\n   */\r\n  getApiStatusAdvancedStatuses(options?: any): __Observable<Array<AdvancedStatusDTOs>> {\r\n    return this.getApiStatusAdvancedStatusesResponse(options).pipe(\r\n      __map(_r => _r.body as Array<AdvancedStatusDTOs>)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param options undefined\r\n   * @return Success\r\n   */\r\n  getApiStatusGetAdvancedStatusesCountResponse(options?: any): __Observable<__StrictHttpResponse<number>> {\r\n    let __params = this.newParams();\r\n    let __headers = new HttpHeaders();\r\n    let __body: any = null;\r\n    if (options != null) __params = __params.set('options', options.toString());\r\n    let req = new HttpRequest<any>(\r\n      'GET',\r\n      this.rootUrl + `/api/Status/GetAdvancedStatusesCount`,\r\n      __body,\r\n      {\r\n        headers: __headers,\r\n        params: __params,\r\n        responseType: 'text'\r\n      });\r\n\r\n    return this.http.request<any>(req).pipe(\r\n      __filter(_r => _r instanceof HttpResponse),\r\n      __map((_r) => {\r\n        return (_r as HttpResponse<any>).clone({ body: parseFloat((_r as HttpResponse<any>).body as string) }) as __StrictHttpResponse<number>\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * @param options undefined\r\n   * @return Success\r\n   */\r\n  getApiStatusGetAdvancedStatusesCount(options?: any): __Observable<number> {\r\n    return this.getApiStatusGetAdvancedStatusesCountResponse(options).pipe(\r\n      __map(_r => _r.body as number)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param body undefined\r\n   */\r\n  postApiStatusAddOrUpdateAdvancedResponse(body?: AdvancedStatusViewModel): __Observable<__StrictHttpResponse<null>> {\r\n    let __params = this.newParams();\r\n    let __headers = new HttpHeaders();\r\n    let __body: any = null;\r\n    __body = body;\r\n    let req = new HttpRequest<any>(\r\n      'POST',\r\n      this.rootUrl + `/api/Status/addOrUpdateAdvanced`,\r\n      __body,\r\n      {\r\n        headers: __headers,\r\n        params: __params,\r\n        responseType: 'json'\r\n      });\r\n\r\n    return this.http.request<any>(req).pipe(\r\n      __filter(_r => _r instanceof HttpResponse),\r\n      __map((_r) => {\r\n        return _r as __StrictHttpResponse<null>;\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * @param body undefined\r\n   */\r\n  postApiStatusAddOrUpdateAdvanced(body?: AdvancedStatusViewModel): __Observable<null> {\r\n    return this.postApiStatusAddOrUpdateAdvancedResponse(body).pipe(\r\n      __map(_r => _r.body as null)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param id undefined\r\n   * @return Success\r\n   */\r\n  getApiStatusGetAdvancedStatusResponse(id?: number): __Observable<__StrictHttpResponse<AdvancedStatusViewModel>> {\r\n    let __params = this.newParams();\r\n    let __headers = new HttpHeaders();\r\n    let __body: any = null;\r\n    if (id != null) __params = __params.set('id', id.toString());\r\n    let req = new HttpRequest<any>(\r\n      'GET',\r\n      this.rootUrl + `/api/Status/GetAdvancedStatus`,\r\n      __body,\r\n      {\r\n        headers: __headers,\r\n        params: __params,\r\n        responseType: 'json'\r\n      });\r\n\r\n    return this.http.request<any>(req).pipe(\r\n      __filter(_r => _r instanceof HttpResponse),\r\n      __map((_r) => {\r\n        return _r as __StrictHttpResponse<AdvancedStatusViewModel>;\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * @param id undefined\r\n   * @return Success\r\n   */\r\n  getApiStatusGetAdvancedStatus(id?: number): __Observable<AdvancedStatusViewModel> {\r\n    return this.getApiStatusGetAdvancedStatusResponse(id).pipe(\r\n      __map(_r => _r.body as AdvancedStatusViewModel)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param id undefined\r\n   */\r\n  deleteApiStatusDeleteAdvancedIdResponse(id: number): __Observable<__StrictHttpResponse<null>> {\r\n    let __params = this.newParams();\r\n    let __headers = new HttpHeaders();\r\n    let __body: any = null;\r\n\r\n    let req = new HttpRequest<any>(\r\n      'DELETE',\r\n      this.rootUrl + `/api/Status/deleteAdvanced/${encodeURIComponent(id)}`,\r\n      __body,\r\n      {\r\n        headers: __headers,\r\n        params: __params,\r\n        responseType: 'json'\r\n      });\r\n\r\n    return this.http.request<any>(req).pipe(\r\n      __filter(_r => _r instanceof HttpResponse),\r\n      __map((_r) => {\r\n        return _r as __StrictHttpResponse<null>;\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * @param id undefined\r\n   */\r\n  deleteApiStatusDeleteAdvancedId(id: number): __Observable<null> {\r\n    return this.deleteApiStatusDeleteAdvancedIdResponse(id).pipe(\r\n      __map(_r => _r.body as null)\r\n    );\r\n  }\r\n}\r\n\r\nmodule StatusService {\r\n}\r\n\r\nexport { StatusService }\r\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpResponse, HttpHeaders } from '@angular/common/http';\nimport { BaseService as __BaseService } from '../base-service';\nimport { ApiConfiguration as __Configuration } from '../api-configuration';\nimport { StrictHttpResponse as __StrictHttpResponse } from '../strict-http-response';\nimport { Observable as __Observable } from 'rxjs';\nimport { map as __map, filter as __filter } from 'rxjs/operators';\n\nimport { WeatherForecast } from '../models/weather-forecast';\n@Injectable({\n  providedIn: 'root',\n})\nclass WeatherForecastService extends __BaseService {\n  static readonly getApiWeatherForecastPath = '/api/WeatherForecast';\n  static readonly getApiWeatherForecastGetLogsPath = '/api/WeatherForecast/GetLogs';\n\n  constructor(\n    config: __Configuration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * @return Success\n   */\n  getApiWeatherForecastResponse(): __Observable<__StrictHttpResponse<Array<WeatherForecast>>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    let req = new HttpRequest<any>(\n      'GET',\n      this.rootUrl + `/api/WeatherForecast`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<Array<WeatherForecast>>;\n      })\n    );\n  }\n  /**\n   * @return Success\n   */\n  getApiWeatherForecast(): __Observable<Array<WeatherForecast>> {\n    return this.getApiWeatherForecastResponse().pipe(\n      __map(_r => _r.body as Array<WeatherForecast>)\n    );\n  }\n  getApiWeatherForecastGetLogsResponse(): __Observable<__StrictHttpResponse<null>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    let req = new HttpRequest<any>(\n      'GET',\n      this.rootUrl + `/api/WeatherForecast/GetLogs`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<null>;\n      })\n    );\n  }  getApiWeatherForecastGetLogs(): __Observable<null> {\n    return this.getApiWeatherForecastGetLogsResponse().pipe(\n      __map(_r => _r.body as null)\n    );\n  }\n}\n\nmodule WeatherForecastService {\n}\n\nexport { WeatherForecastService }\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpResponse, HttpHeaders } from '@angular/common/http';\nimport { BaseService as __BaseService } from '../base-service';\nimport { ApiConfiguration as __Configuration } from '../api-configuration';\nimport { StrictHttpResponse as __StrictHttpResponse } from '../strict-http-response';\nimport { Observable as __Observable } from 'rxjs';\nimport { map as __map, filter as __filter } from 'rxjs/operators';\n\nimport { WorkOrderRoutingItemViewModel } from '../models/work-order-routing-item-view-model';\nimport { WorkLogTransferStatusResult } from '../models/work-log-transfer-status-result';\n@Injectable({\n  providedIn: 'root',\n})\nclass WorkOrderService extends __BaseService {\n  static readonly postApiWorkOrderSearchWorkOrderRoutingsPath = '/api/WorkOrder/SearchWorkOrderRoutings';\n  static readonly postApiWorkOrderGetWorkOrderRoutingListPath = '/api/WorkOrder/GetWorkOrderRoutingList';\n  static readonly postApiWorkOrderGetWorkLogTransferStatusPath = '/api/WorkOrder/GetWorkLogTransferStatus';\n\n  constructor(\n    config: __Configuration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * @param params The `WorkOrderService.PostApiWorkOrderSearchWorkOrderRoutingsParams` containing the following parameters:\n   *\n   * - `search`:\n   *\n   * - `machineId`:\n   *\n   * @return Success\n   */\n  postApiWorkOrderSearchWorkOrderRoutingsResponse(params: WorkOrderService.PostApiWorkOrderSearchWorkOrderRoutingsParams): __Observable<__StrictHttpResponse<Array<WorkOrderRoutingItemViewModel>>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    if (params.search != null) __params = __params.set('search', params.search.toString());\n    if (params.machineId != null) __params = __params.set('machineId', params.machineId.toString());\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/api/WorkOrder/SearchWorkOrderRoutings`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<Array<WorkOrderRoutingItemViewModel>>;\n      })\n    );\n  }\n  /**\n   * @param params The `WorkOrderService.PostApiWorkOrderSearchWorkOrderRoutingsParams` containing the following parameters:\n   *\n   * - `search`:\n   *\n   * - `machineId`:\n   *\n   * @return Success\n   */\n  postApiWorkOrderSearchWorkOrderRoutings(params: WorkOrderService.PostApiWorkOrderSearchWorkOrderRoutingsParams): __Observable<Array<WorkOrderRoutingItemViewModel>> {\n    return this.postApiWorkOrderSearchWorkOrderRoutingsResponse(params).pipe(\n      __map(_r => _r.body as Array<WorkOrderRoutingItemViewModel>)\n    );\n  }\n\n  /**\n   * @param machineId undefined\n   * @return Success\n   */\n  postApiWorkOrderGetWorkOrderRoutingListResponse(machineId?: number): __Observable<__StrictHttpResponse<Array<WorkOrderRoutingItemViewModel>>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    if (machineId != null) __params = __params.set('machineId', machineId.toString());\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/api/WorkOrder/GetWorkOrderRoutingList`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<Array<WorkOrderRoutingItemViewModel>>;\n      })\n    );\n  }\n  /**\n   * @param machineId undefined\n   * @return Success\n   */\n  postApiWorkOrderGetWorkOrderRoutingList(machineId?: number): __Observable<Array<WorkOrderRoutingItemViewModel>> {\n    return this.postApiWorkOrderGetWorkOrderRoutingListResponse(machineId).pipe(\n      __map(_r => _r.body as Array<WorkOrderRoutingItemViewModel>)\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return Success\n   */\n  postApiWorkOrderGetWorkLogTransferStatusResponse(body?: Array<number>): __Observable<__StrictHttpResponse<Array<WorkLogTransferStatusResult>>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/api/WorkOrder/GetWorkLogTransferStatus`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<Array<WorkLogTransferStatusResult>>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return Success\n   */\n  postApiWorkOrderGetWorkLogTransferStatus(body?: Array<number>): __Observable<Array<WorkLogTransferStatusResult>> {\n    return this.postApiWorkOrderGetWorkLogTransferStatusResponse(body).pipe(\n      __map(_r => _r.body as Array<WorkLogTransferStatusResult>)\n    );\n  }\n}\n\nmodule WorkOrderService {\n\n  /**\n   * Parameters for postApiWorkOrderSearchWorkOrderRoutings\n   */\n  export interface PostApiWorkOrderSearchWorkOrderRoutingsParams {\n    search?: string;\n    machineId?: number;\n  }\n}\n\nexport { WorkOrderService }\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AuthGuard, LoginPanelComponent } from 'dsr-toolkit';\r\nimport { machineRoutes } from './areas/machine/machine-routing.module';\r\nimport { MACHINE_STATE_URL } from './areas/machine/machine.module';\r\n\r\nconst routes: Routes = [\r\n  // {\r\n  //   path: MACHINE_STATE_URL, loadChildren: () =>\r\n  //     import('./areas/machine/machine.module')\r\n  //       // .then(m => m.AdministrationModule), canActivate: [AuthGuard]\r\n  //       .then(m => m.MachineModule), canActivate: []\r\n  // },\r\n  {\r\n    path: MACHINE_STATE_URL, children: machineRoutes\r\n  },\r\n  // {\r\n  //   path: WORK_ORDER_URL, loadChildren: () =>\r\n  //     import('./areas/work-order/work-order.module')\r\n  //       // .then(m => m.WorkOrderModule), canActivate: [AuthGuard]\r\n  //       .then(m => m.WorkOrderModule), canActivate: []\r\n  // },\r\n  // {\r\n  //   path: PART_NUMBER_URL, loadChildren: () =>\r\n  //     import('./areas/part-number/part-number.module')\r\n  //       // .then(m => m.PartNumberModule), canActivate: [AuthGuard]\r\n  //       .then(m => m.PartNumberModule), canActivate: []\r\n  // },\r\n  { path: 'login', component: LoginPanelComponent },\r\n  { path: '**', redirectTo: MACHINE_STATE_URL }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'PT-terminal-panel';\r\n}\r\n","<app-layout class=\"mat-app-background mat-body\">\r\n  <router-outlet></router-outlet>\r\n</app-layout>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { APP_INITIALIZER, Injector, NgModule } from '@angular/core';\r\n\r\nimport { LOCATION_INITIALIZED, registerLocaleData } from '@angular/common';\r\nimport { LOCALE_ID } from '@angular/core';\r\nimport localePl from '@angular/common/locales/pl';\r\nimport localeUk from '@angular/common/locales/uk';\r\nimport localeEn from '@angular/common/locales/en-GB';\r\nregisterLocaleData(localePl);\r\nregisterLocaleData(localeUk);\r\nregisterLocaleData(localeEn);\r\n\r\nimport { TranslateModule, TranslateLoader, TranslateService, TranslateCompiler } from '@ngx-translate/core';\r\nimport { TranslateMessageFormatCompiler } from 'ngx-translate-messageformat-compiler';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { HttpClient, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { DsrToolkitModule, LanguageService } from 'dsr-toolkit';\r\nimport { PTCommonModule } from './common/PT-common.module';\r\nimport { LayoutModule } from './layout/layout.module';\r\n// tslint:disable-next-line: typedef\r\nexport function appInitializerFactory(translate: TranslateService, injector: Injector, languageService: LanguageService) {\r\n  return () => new Promise<any>((resolve: any) => {\r\n    const locationInitialized = injector.get(LOCATION_INITIALIZED, Promise.resolve(null));\r\n    locationInitialized.then(() => {\r\n      const langToSet = translate.getBrowserLang();\r\n      translate.setDefaultLang('pl');\r\n      languageService.setCurrent(langToSet);\r\n      translate.use(langToSet).subscribe(() => {\r\n        // tslint:disable-next-line: no-console\r\n        console.info(`Successfully initialized '${langToSet}' language.'`);\r\n      }, err => {\r\n        console.error(`Problem with '${langToSet}' language initialization.'`);\r\n      }, () => {\r\n        resolve(null);\r\n      });\r\n    });\r\n  });\r\n}\r\n\r\nexport function HttpLoaderFactory(http: HttpClient): TranslateHttpLoader {\r\n  return new TranslateHttpLoader(http);\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    DsrToolkitModule,\r\n    LayoutModule,\r\n    TranslateModule.forRoot({\r\n      compiler: {\r\n        provide: TranslateCompiler,\r\n        useClass: TranslateMessageFormatCompiler\r\n      },\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: HttpLoaderFactory,\r\n        deps: [HttpClient]\r\n      },\r\n      isolate: false\r\n    }),\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: appInitializerFactory,\r\n      deps: [TranslateService, Injector, LanguageService],\r\n      multi: true\r\n    },\r\n    LanguageService,\r\n    {\r\n      provide: LOCALE_ID,\r\n      deps: [LanguageService],\r\n      useFactory: languageService => languageService.getCurrent()\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { MachineStatusModel } from '../models/machine-status.model';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'app-form-machine-status-card-list',\r\n  templateUrl: './form-machine-status-card-list.component.html',\r\n  styleUrls: ['./form-machine-status-card-list.component.scss']\r\n})\r\nexport class FormMachineStatusCardListComponent implements OnInit {\r\n\r\n  @Input() statuses: MachineStatusModel[] = [];\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.statuses = this.statuses?.sort((a, b) => moment(a.startTime).valueOf() - moment(b.startTime).valueOf());\r\n  }\r\n\r\n}\r\n","<mat-card class=\"machine-status-card\" *ngFor=\"let machineStatus of statuses\">\r\n  <mat-card-header>\r\n    <mat-card-title style=\"align-items: center; display: flex; font-family: 'Roboto Mono';\">\r\n      <div *ngIf=\"machineStatus.statusHexColor\" mat-card-avatar [style.background]=\"machineStatus.statusHexColor\"\r\n        style=\"display: inline-block; margin-right: 16px;\">\r\n      </div>\r\n      {{ machineStatus.status }}\r\n    </mat-card-title>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div style=\"display: flex;\">\r\n      <mat-icon>play_arrow</mat-icon> {{ machineStatus.startTime | dsrDate }}\r\n    </div>\r\n    <div style=\"display: flex;\">\r\n      <mat-icon>stop</mat-icon> {{ machineStatus.endTime | dsrDate }}\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MachineSelectComponent } from './machine-select/machine-select.component';\r\nimport { MachineStatusListComponent } from './machine-status-list/machine-status-list.component';\r\nimport { MachineStatusReasonFormComponent } from './machine-status-reason-form/machine-status-reason-form.component';\r\nimport { MachineStatusWorkOrderFormComponent } from './machine-status-work-order-form/machine-status-work-order-form.component';\r\nimport { MachineStatusWorkerFormComponent } from './machine-status-worker-form/machine-status-worker-form.component';\r\n\r\nexport const machineRoutes: Routes = [\r\n  { path: '', component: MachineSelectComponent },\r\n  { path: ':id/status', component: MachineStatusListComponent },\r\n  { path: ':id/status/reason', component: MachineStatusReasonFormComponent },\r\n  { path: ':id/status/workorder', component: MachineStatusWorkOrderFormComponent },\r\n  { path: ':id/status/worker', component: MachineStatusWorkerFormComponent },\r\n  { path: '**', redirectTo: '' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(machineRoutes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class MachineRoutingModule { }\r\n","import { ThisReceiver } from '@angular/compiler';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormArray, FormControl, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { DsrValidators, GeneralPromptDialogComponent, SelectItem, SelectItemInterface } from 'dsr-toolkit';\r\nimport { pairwise, startWith } from 'rxjs/operators';\r\nimport { MachineService } from 'src/app/api/services';\r\nimport { OperatorAuthenticationService } from 'src/app/common/services/operator-authentication.service';\r\nimport { MachineSelectGridConfiguration } from '../machine-select/machine-select-grid-configurations';\r\nimport { MachineSelectComponent } from '../machine-select/machine-select.component';\r\n\r\n@Component({\r\n  selector: 'PT-machine-select-admin-panel-dialog',\r\n  templateUrl: './machine-select-admin-panel-dialog.component.html',\r\n  styleUrls: ['./machine-select-admin-panel-dialog.component.scss']\r\n})\r\nexport class MachineSelectAdminPanelDialogComponent implements OnInit {\r\n\r\n  initialized = false;\r\n  logoutTimeoutFormControl: FormControl;\r\n  gridSelectFormControl: FormControl;\r\n  gridOptions: SelectItemInterface[] = [];\r\n  gridSlots: FormControl[];\r\n  availableMachines: SelectItemInterface[] = [];\r\n\r\n  get machineOptions(): SelectItemInterface[] {\r\n    return [new SelectItem(-1, \"-\")].concat(...this.availableMachines);\r\n  }\r\n\r\n  machinesConfiguration: { [config: string]: number[] } = {};\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any,\r\n    protected matDialogRef: MatDialogRef<GeneralPromptDialogComponent>,\r\n    private operatorAuthenticationService: OperatorAuthenticationService,\r\n    private machineService: MachineService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.machineService.getApiMachine().subscribe(result => {\r\n      this.availableMachines = result as SelectItemInterface[];\r\n      const logoutTimeoutValue = localStorage.getItem(MachineSelectComponent.LOGOUT_TIMEOUT_KEY);\r\n      const logoutTimeout = JSON.parse(logoutTimeoutValue ?? '0') as number;\r\n      this.logoutTimeoutFormControl = new FormControl(logoutTimeout, [Validators.required, Validators.min(0), DsrValidators.integer]);\r\n      this.generateGridOptions();\r\n      this.initialized = true;\r\n    })\r\n  }\r\n\r\n  generateGridOptions(): void {\r\n    const machinesConfigurationValue = localStorage.getItem(MachineSelectComponent.CONFIGURATION_KEY);\r\n    this.machinesConfiguration = JSON.parse(machinesConfigurationValue) as { [config: string]: number[] };\r\n\r\n    const currentGridValue = localStorage.getItem(MachineSelectComponent.CURRENT_GRID_KEY);\r\n    const currentGrid = JSON.parse(currentGridValue) as [number, number];\r\n\r\n    MachineSelectGridConfiguration.forEach((tuple) => {\r\n      var value = tuple[0] + '_' + tuple[1];\r\n      var text = tuple[0] + ' x ' + tuple[1];\r\n      this.gridOptions.push(new SelectItem(value, text));\r\n    });\r\n\r\n    this.gridSelectFormControl = new FormControl(currentGrid[0] + '_' + currentGrid[1]);\r\n    this.changeGridSlots(null);\r\n    this.gridSelectFormControl.valueChanges.pipe(startWith(this.gridSelectFormControl.value), pairwise()).subscribe(([prev, next]: [any, any]) => {\r\n      this.changeGridSlots(prev);\r\n    })\r\n  }\r\n\r\n  changeGridSlots(previousValue: any) {\r\n    // Save previous group temporarily\r\n    if (previousValue) {\r\n      this.gridSlots.forEach((value, index) => {\r\n        this.machinesConfiguration[previousValue][index] = value.value;\r\n      });\r\n    }\r\n\r\n    // Generate new grid\r\n    const controls: FormControl[] = [];\r\n    this.machinesConfiguration[this.gridSelectFormControl.value].forEach(value => {\r\n      controls.push(new FormControl(value));\r\n    })\r\n    this.gridSlots = controls;\r\n  }\r\n\r\n  getGridStyles() {\r\n    var currentGrid = this.gridSelectFormControl.value.split('_');\r\n    return {\r\n      'grid-template-rows': `repeat(${currentGrid[0]}, 1fr)`,\r\n      'grid-template-columns': `repeat(${currentGrid[1]}, 1fr)`\r\n    };\r\n  }\r\n\r\n  clickSave(): void {\r\n    // save grid selection\r\n    const currentGrid = this.gridSelectFormControl.value.split('_') as [number, number];\r\n    localStorage.setItem(MachineSelectComponent.CURRENT_GRID_KEY, JSON.stringify(currentGrid));\r\n\r\n    // save grids\r\n    this.gridSlots.forEach((value, index) => {\r\n      this.machinesConfiguration[this.gridSelectFormControl.value][index] = value.value;\r\n    });\r\n    localStorage.setItem(MachineSelectComponent.CONFIGURATION_KEY, JSON.stringify(this.machinesConfiguration));\r\n\r\n    // save timeoutValue\r\n    localStorage.setItem(MachineSelectComponent.LOGOUT_TIMEOUT_KEY, JSON.stringify(this.logoutTimeoutFormControl.value));\r\n    this.operatorAuthenticationService.changeTimeout(this.logoutTimeoutFormControl.value);\r\n\r\n    this.matDialogRef.close(true);\r\n  }\r\n\r\n  clickCancel(): void {\r\n    this.matDialogRef.close(false);\r\n  }\r\n}\r\n","<h2 mat-dialog-title>{{ 'machine.kiosk.settingsTitle' | translate }}</h2>\r\n<div mat-dialog-content *ngIf=\"initialized\" style=\"height: 100%;\">\r\n  <p style=\"display: flex;\">\r\n    <mat-form-field appearance=\"fill\" [style.flex]=\"1\" [style.margin-right.rem]=\"2\">\r\n      <mat-label>{{ 'machine.kiosk.logoutTimeout' | translate }}</mat-label>\r\n      <input matInput numericInput [formControl]=\"logoutTimeoutFormControl\" required>\r\n      <mat-error *ngIf=\"logoutTimeoutFormControl.errors?.required\">{{ \"common.required\" | translate }}</mat-error>\r\n      <mat-error *ngIf=\"logoutTimeoutFormControl.errors?.min\">{{ \"common.minValue\" | translate }}\r\n        {{ logoutTimeoutFormControl.value }}</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field appearance=\"fill\" [style.flex]=\"1\">\r\n      <mat-label>{{ 'machine.kiosk.gridSize' | translate }}</mat-label>\r\n      <mat-select [formControl]=\"gridSelectFormControl\" required>\r\n        <mat-option *ngFor=\"let option of gridOptions\" [value]=\"option.value\">{{option.text}}</mat-option>\r\n      </mat-select>\r\n      <mat-error *ngIf=\"gridSelectFormControl.errors?.required\">{{ \"common.required\" | translate }}\r\n      </mat-error>\r\n    </mat-form-field>\r\n  </p>\r\n  <div class=\"gridForm\" [ngStyle]=\"getGridStyles()\">\r\n    <div *ngFor=\"let gridControl of gridSlots; let i = index\" style=\"display: flex;\">\r\n      <dsr-select-field appearance=\"fill\" [style.flex]=\"1\" [allowClear]=\"false\" [items]=\"machineOptions\"\r\n        [(value)]=\"gridControl.value\" minWidth=\"0px\" label=\"{{ 'machine.kiosk.selectMachine' | translate }}\">\r\n      </dsr-select-field>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div mat-dialog-actions *ngIf=\"initialized\" align=\"end\" style=\"margin-bottom: -8px; margin-top: 8px;\">\r\n  <dsr-button [style.margin-right.px]=\"16\" appearance=\"dsrRoundNegativeOutline\" (dsrClick)=\"clickCancel()\">\r\n    {{ 'common.discard' | translate }}</dsr-button>\r\n  <dsr-button appearance=\"dsrRound\" (dsrClick)=\"clickSave()\"\r\n    [disabled]=\"gridSelectFormControl.invalid || logoutTimeoutFormControl.invalid\">\r\n    {{ 'common.save' | translate }}\r\n  </dsr-button>\r\n</div>\r\n","export const MachineSelectGridConfiguration: Array<[number, number]> = [\r\n  [1, 1],\r\n  [1, 2],\r\n  [2, 2],\r\n  [2, 3],\r\n  [2, 4],\r\n  [3, 3],\r\n  [3, 4],\r\n  [3, 5],\r\n  [4, 4],\r\n  [4, 6]\r\n]\r\n","import { AfterViewInit, Component, HostListener, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { NotificationService } from 'dsr-toolkit';\r\nimport { interval, Subject, Subscription } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { MachineDTOs, WorkerLoginResult, WorkLogTransferStatusResult } from 'src/app/api/models';\r\nimport { MachineService, WorkOrderService } from 'src/app/api/services';\r\nimport { LoaderService } from 'src/app/common/services/loader.service';\r\nimport { OperatorAuthenticationService } from 'src/app/common/services/operator-authentication.service';\r\nimport { SfcNavigatorService } from 'src/app/common/services/sfc-navigator.service';\r\nimport { alphaRipple } from 'src/app/common/utils/color-helper';\r\nimport { environment } from 'src/environments/environment';\r\nimport { MachineSelectAdminPanelDialogComponent } from '../machine-select-admin-panel-dialog/machine-select-admin-panel-dialog.component';\r\nimport { MachineModel } from '../models/machine.model';\r\nimport { MachineSelectGridConfiguration } from './machine-select-grid-configurations';\r\nimport { FocusRefreshService } from 'src/app/common/services/focus-refresh.service';\r\n\r\n@Component({\r\n  selector: 'app-machine-select',\r\n  templateUrl: './machine-select.component.html',\r\n  styleUrls: ['./machine-select.component.scss']\r\n})\r\nexport class MachineSelectComponent implements OnInit, OnDestroy, AfterViewInit {\r\n  public static CONFIGURATION_KEY: string = 'DSR_PT_MACHINES_SELECT_PANEL_CONFIGURATION';\r\n  public static CURRENT_GRID_KEY: string = 'DSR_PT_MACHINES_SELECT_PANEL_CURRENT_GRID';\r\n  public static LOGOUT_TIMEOUT_KEY: string = 'DSR_PT_LOGOUT_TIMEOUT';\r\n  machines: MachineModel[] = [];\r\n  machinesConfiguration: { [config: string]: number[] } = {};\r\n  machinesIntegrationStauts: WorkLogTransferStatusResult[] = [];\r\n  currentGrid: [number, number] = null;\r\n  loading = true;\r\n  isLandscape = true;\r\n  hidePassword = true;\r\n  loadingMachines = false;\r\n  loadingWorkLogStatus = false;\r\n  operatorLoginCode: string = \"\";\r\n  currentOperator: WorkerLoginResult = null;\r\n  workOrderTableDisplayedColumns: string[] = ['number', 'qtyOrdered', 'qtyCompleted', 'qtyToFix', 'qtyCompletedWithLogs', 'qtyRejected'];\r\n  partTableDisplayedColumns: string[] = ['partNumber', 'partDescription', 'partCustomCharacter01'];\r\n  private onDestroy$ = new Subject<void>();\r\n  private subscription: Subscription;\r\n  private sub:Subscription;\r\n  private workLogStatusSubscription: Subscription;\r\n  private blinker:any;\r\n  style = \"\"\r\n  loginInputFocus = true;\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private machineService: MachineService,\r\n    private workOrderService: WorkOrderService,\r\n    private loaderService: LoaderService,\r\n    private sfcNavigator: SfcNavigatorService,\r\n    private notificationService: NotificationService,\r\n    private operatorAuthenticationService: OperatorAuthenticationService,\r\n    private dialog: MatDialog,\r\n    private focuRefreshService: FocusRefreshService) {\r\n    this.loaderService.getLoading().subscribe((v) => {\r\n      setTimeout(() => this.loading = v);\r\n    });\r\n  }\r\n\r\n  isSmallGrid(): boolean {\r\n    return this.currentGrid[0] == 1;\r\n  }\r\n\r\n  isMediumGrid(): boolean {\r\n    return this.currentGrid[0] >= 3 || this.currentGrid[1] >= 4;\r\n  }\r\n\r\n  isBigGrid(): boolean {\r\n    return this.currentGrid[0] >= 4;\r\n  }\r\n\r\n  checkForWO()\r\n  {\r\n    console.log(this.machines)\r\n    if(this.machines.length==1)\r\n    {\r\n      if(this.machines[0].workOrderIconAnimation==2)\r\n      {\r\n        if(this.blinker==null)\r\n        {\r\n          this.blinker = interval(1000)\r\n        this.sub = this.blinker.pipe(takeUntil(this.onDestroy$)).subscribe(x=>{\r\n          if(this.style==\"\")\r\n          {\r\n            this.style=\"background-color: red;\"\r\n          }\r\n          else\r\n          {\r\n            this.style=\"\";\r\n          }\r\n        })\r\n        }\r\n      }\r\n      else\r\n      {\r\n        if(this.sub != null)\r\n          this.sub.unsubscribe()\r\n        this.blinker=null;\r\n        this.style=\"\"\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadingMachines = false;\r\n    this.loadMachinesConfiguration();\r\n    this.loadMachines();\r\n    this.getWorkLogTransferStatus();\r\n    const secondsCounter = interval(60000); // 10s\r\n    // const secondsCounter = interval(30000); // 30s\r\n    // const secondsCounter = interval(1000000000); // inf for debug\r\n    this.subscription = secondsCounter.pipe(takeUntil(this.onDestroy$)).subscribe(n =>{\r\n      if(!this.loadingMachines){\r\n        this.loadingMachines = true;\r\n        this.loadMachines();\r\n      }\r\n    }\r\n    );\r\n    this.focuRefreshService.focus.subscribe(x=>{\r\n      this.loginInputFocus=x;\r\n    })\r\n    const workLogTransferStatusCounter = interval(60000);\r\n    this.workLogStatusSubscription = workLogTransferStatusCounter.pipe(takeUntil(this.onDestroy$)).subscribe(n =>{\r\n      if(!this.loadingWorkLogStatus){\r\n        this.loadingWorkLogStatus = true;\r\n        this.getWorkLogTransferStatus();\r\n      }\r\n    }\r\n    );\r\n\r\n\r\n\r\n    this.operatorAuthenticationService.currentUser.subscribe(user => {\r\n        this.currentOperator = user;\r\n    });\r\n    this.operatorAuthenticationService.currentWorker.pipe(takeUntil(this.onDestroy$)).subscribe(worker => {\r\n      if(this.machines.length == 1){\r\n        this.machineService.postApiMachineAssignWorkerToCurrentActivity({workerId: worker.id, machineId: this.machines[0].id})\r\n        .subscribe(\r\n          (result)=>{\r\n            if (result == true)\r\n              this.notificationService.showSuccessTranslated('machine.workerAssignedSuccessfully', 'Ok', null, false, 4000);\r\n            else\r\n              this.notificationService.showInfoTranslated('machine.workerUnassignedSuccessfully', 'Ok', null, false, 4000);\r\n\r\n            this.loadMachines();\r\n          },\r\n          ()=>{},\r\n          ()=>{});\r\n      }\r\n\r\n    });\r\n  }\r\n  getWorkLogTransferStatus(): void {\r\n    var machineIds = this.machinesConfiguration[this.currentGridKey].filter(x => x > -1);\r\n    if (machineIds.length > 0) {\r\n      this.workOrderService.postApiWorkOrderGetWorkLogTransferStatus(machineIds).subscribe(\r\n        (result: WorkLogTransferStatusResult[]) => {\r\n          this.machinesIntegrationStauts = result;\r\n          this.machines.forEach((m) => {\r\n            m.itegrationStatus = this.machinesIntegrationStauts?.find(x => x.machineId == m.id)?.transferStatus\r\n\r\n          });\r\n        },\r\n        (error) => {\r\n          // TODO: catch error\r\n        },\r\n        () => { this.loadingWorkLogStatus = false;\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.onDestroy$.next();\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.isLandscape = window.innerWidth >= window.innerHeight;\r\n  }\r\n\r\n  @HostListener('window:resize', ['$event'])\r\n  onResize(event) {\r\n    this.isLandscape = event.target.innerWidth >= event.target.innerHeight;\r\n  }\r\n\r\n  get currentGridKey(): string {\r\n    return this.currentGrid[0] + '_' + this.currentGrid[1];\r\n  }\r\n\r\n  get machinesList(): MachineModel[] {\r\n    const result: MachineModel[] = [];\r\n    this.machinesConfiguration[this.currentGridKey].forEach((machineId) => {\r\n      var existingMachine = this.machines.find(m => m.id == machineId);\r\n      result.push(existingMachine ?? null);\r\n    });\r\n    // console.log(result);\r\n    return result;\r\n  }\r\n\r\n  getGridStyles() {\r\n    return {\r\n      'grid-template-rows': `repeat(${this.isLandscape ? this.currentGrid[0] : this.currentGrid[1]}, 1fr)`,\r\n      'grid-template-columns': `repeat(${this.isLandscape ? this.currentGrid[1] : this.currentGrid[0]}, 1fr)`\r\n    };\r\n  }\r\n\r\n  loadMachinesConfiguration(): void {\r\n    const value = localStorage.getItem(MachineSelectComponent.CONFIGURATION_KEY);\r\n    if (value) {\r\n      this.machinesConfiguration = JSON.parse(value) as { [config: string]: number[] };\r\n    }\r\n\r\n    let updateGrid = false;\r\n\r\n    MachineSelectGridConfiguration.forEach((tuple) => {\r\n      var key = tuple[0] + '_' + tuple[1];\r\n      if (!(key in this.machinesConfiguration)) {\r\n        this.machinesConfiguration[key] = Array<number>(tuple[0] * tuple[1]).fill(-1);\r\n        updateGrid = true;\r\n      }\r\n    });\r\n\r\n    if (updateGrid) {\r\n      localStorage.setItem(MachineSelectComponent.CONFIGURATION_KEY, JSON.stringify(this.machinesConfiguration));\r\n    }\r\n\r\n    const currentGrid = localStorage.getItem(MachineSelectComponent.CURRENT_GRID_KEY);\r\n    if (currentGrid) {\r\n      this.currentGrid = JSON.parse(currentGrid) as [number, number];\r\n    }\r\n\r\n    if (!currentGrid || !(this.currentGridKey in this.machinesConfiguration)) {\r\n      this.currentGrid = MachineSelectGridConfiguration[0];\r\n      localStorage.setItem(MachineSelectComponent.CURRENT_GRID_KEY, JSON.stringify(this.currentGrid));\r\n    }\r\n    console.log(this.currentGrid, this.currentGridKey);\r\n    console.log(this.machinesConfiguration);\r\n  }\r\n\r\n  loadMachines(): void {\r\n    var machineIds = this.machinesConfiguration[this.currentGridKey].filter(x => x > -1);\r\n    if (machineIds.length > 0) {\r\n      this.machineService.postApiMachine(machineIds).subscribe(\r\n        (result: MachineDTOs[]) => {\r\n          this.machines = result.map(m => {\r\n            return {\r\n              id: m.id,\r\n              code: m.code,\r\n              name: m.name,\r\n              status: m.status,\r\n              statusDetail: m.statusDetail,\r\n              statusHexColor: m.hexColor || '#ffffff',\r\n              products: !this.isBigGrid() ? m.workOrders?.map(p => p.partNumber + \" (\"+p.partUm+\") \"+ p.partDescription +\" \"+ p.partCustomCharacter01) : m.products,\r\n              workers: m.workers,\r\n              statusIconAnimation: m.statusIconAnimation,\r\n              workOrderIconAnimation: m.workOrderIconAnimation,\r\n              workerIconAnimation: m.workerIconAnimation,\r\n              workOrder: m.workOrders != null ? m.workOrders[0]?.number : [],\r\n              workOrders: m.workOrders,\r\n              itegrationStatus: this.machinesIntegrationStauts?.find(x => x.machineId == m.id)?.transferStatus,\r\n              attachmentUrl: m.attachmentUrl,\r\n              active: m.active\r\n            };\r\n          });\r\n        },\r\n        (error) => {\r\n          // TODO: catch error\r\n        },\r\n        () => { this.loadingMachines = false;\r\n          this.checkForWO();\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  alphaRipple(hexColor: string): string {\r\n    return hexColor ? alphaRipple(hexColor) : 'rgba(0,0,0,0)';\r\n  }\r\n\r\n  goToSfc(): void {\r\n    this.sfcNavigator.goToSfc();\r\n  }\r\n\r\n  goToAttachment(machine:any)\r\n  {\r\n    const url = environment.apiRootUrl + \"/api/Machine/GetOpenAttachment?machineId=\" + machine.id // wygląda na to że musi tak być trzeba będzie sprawdzać z API czy dobrze się wszystko wysyła\r\n    window.open(url,\"_blank\")\r\n  }\r\n\r\n  goToMachineStatus(machine: MachineModel): void {\r\n    if (machine) {\r\n      if (!machine.active) {\r\n        this.notificationService.showWarningTranslated('machine.inactive', 'Ok', null, false, 4000);\r\n      } else if (this.hasPermission(machine.id)) {\r\n        this.router.navigate([machine.id, 'status'], { state: { machine }, relativeTo: this.route });\r\n        this.operatorAuthenticationService.resetTimeout();\r\n      } else if (this.currentOperator != null) {\r\n        this.notificationService.showWarningTranslated('machine.accessDenied', 'Ok', null, false, 4000);\r\n      } else {\r\n        this.notificationService.showWarningTranslated('machine.loginFirst', 'Ok', null, false, 4000);\r\n      }\r\n    } else {\r\n      this.notificationService.showInfoTranslated('machine.assignMachine', 'Ok', null, false, 4000);\r\n    }\r\n  }\r\n\r\n  hasPermission(machineId: number) {\r\n    return this.currentOperator && this.currentOperator?.workerMachinePermissions.map(p => p.machineId).includes(machineId);\r\n  }\r\n\r\n  openAdminPanel(): void {\r\n    this.dialog.open(MachineSelectAdminPanelDialogComponent, {\r\n      height: '90vh',\r\n      width: '90vw',\r\n      data: {\r\n        // title: 'common.deleteMessage',\r\n        // message: 'common.deleteMessagePrompt',\r\n        // translateData: { count: records.length }\r\n      }\r\n    }).afterClosed().subscribe((result: boolean) => {\r\n      if (result) {\r\n        this.notificationService.showSuccessTranslated('common.savedSuccessfully', 'Ok', null, false, 4000);\r\n        this.subscription.unsubscribe();\r\n        this.loadMachinesConfiguration();\r\n        this.loadMachines();\r\n        const secondsCounter = interval(60000); // 10s\r\n        // const secondsCounter = interval(30000); // 30s\r\n        this.subscription = secondsCounter.pipe(takeUntil(this.onDestroy$)).subscribe(n =>\r\n          this.loadMachines()\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  onLogin(): void {\r\n    this.operatorAuthenticationService.login(this.operatorLoginCode);\r\n    this.operatorLoginCode = \"\";\r\n  }\r\n\r\n  togglePasswordVisibility(): void {\r\n    this.hidePassword = !this.hidePassword;\r\n  }\r\n}\r\n","<div class=\"header\">\r\n  <dsr-search-field appearance=\"dsrRoundBorder\" [(value)]=\"operatorLoginCode\" (enterPress)=\"onLogin()\" icon=\"login\"\r\n    [hideText]=\"hidePassword\" [prefixIcon]=\"hidePassword ? 'visibility_off' : 'visibility'\"\r\n    (prefixButtonClick)=\"togglePasswordVisibility()\" label=\"{{ 'machine.operatorCode' | translate }}\"\r\n    [style.margin-right.rem]=\"1\" minWidth=\"30vw\" [focus]=\"loginInputFocus\"></dsr-search-field>\r\n  <dsr-button appearance=\"dsrRound\" [style.margin-right.rem]=\"1\" (dsrClick)=\"onLogin()\"\r\n    [disabled]=\"!operatorLoginCode || operatorLoginCode.length == 0\">\r\n    {{ 'common.login' | translate }}</dsr-button>\r\n  <div [style.flex]=\"1\"></div>\r\n  <dsr-button appearance=\"dsrRound\" [style.margin-right.rem]=\"1\" (dsrClick)=\"openAdminPanel()\"\r\n    *ngIf=\"currentOperator?.isAdmin\">\r\n    {{ 'common.admin' | translate }}</dsr-button>\r\n  <!-- <PT-dsr-app-logo-button [appName]=\"'sfc'\" (click)=\"goToSfc()\"></PT-dsr-app-logo-button> -->\r\n</div>\r\n<mat-divider></mat-divider>\r\n<div class=\"content\" [ngStyle]=\"getGridStyles()\" [class.big-font]=\"isSmallGrid()\" >\r\n  <ng-container *ngFor=\"let machine of machinesList\">\r\n    <mat-card *ngIf=\"machine\" class=\"machine-card\" [class.machine-disabled-card]=\"!hasPermission(machine.id) || !machine.active\"\r\n      (click)=\"goToMachineStatus(machine)\" matRipple [matRippleColor]=\"alphaRipple(machine?.statusHexColor)\" [style]=\"style\">\r\n      <div class=\"notification-icons\">\r\n        <div [ngStyle]=\"!isBigGrid() ? {'display': 'flex', 'justify-content': 'right'} : {'display': 'grid', 'justify-content': 'right'}\">\r\n          <div style=\"display: flex;\"\r\n          [style.color] = \"machine.statusIconAnimation == 2 || machine.statusIconAnimation == 4 ? 'red' : 'green'\"\r\n          [style.visibility]=\"machine.statusIconAnimation > 0 ? 'visible' : 'hidden'\"\r\n            [class.blink]=\"machine.statusIconAnimation == 3 || machine.statusIconAnimation == 4\">\r\n            <mat-icon class=\"material-icons-outlined\">flag</mat-icon>\r\n          </div>\r\n          <div style=\"display: flex;\"\r\n          [style.color] = \"machine.workOrderIconAnimation == 2 || machine.workOrderIconAnimation == 4 ? 'red' : 'green'\"\r\n          [style.visibility]=\"machine.workOrderIconAnimation > 0 ? 'visible' : 'hidden'\"\r\n            [class.blink]=\"machine.workOrderIconAnimation == 4 || machine.workOrderIconAnimation == 3\">\r\n            <mat-icon class=\"material-icons-outlined\">settings</mat-icon>\r\n          </div>\r\n          <div style=\"display: flex;\"\r\n          [style.color] = \"machine.workerIconAnimation == 2 || machine.workerIconAnimation == 4 ? 'red' : 'green'\"\r\n          [style.visibility]=\"machine.workerIconAnimation > 0 ? 'visible' : 'hidden'\"\r\n            [class.blink]=\"machine.workerIconAnimation == 3 || machine.workerIconAnimation == 4\">\r\n            <mat-icon class=\"material-icons-outlined\">engineering</mat-icon>\r\n          </div>\r\n          <div [style.visibility]=\"machine.itegrationStatus > 0 ? 'visible' : 'hidden'\"\r\n            [ngStyle]=\"machine.itegrationStatus == 2 ? {'color':'red'} : {'color':'green'}\">\r\n            <mat-icon class=\"material-icons-outlined\">sync_alt</mat-icon>\r\n          </div>\r\n        </div>\r\n        <div [style.visibility]=\"machine.attachmentUrl.length > 0 && !isMediumGrid() ? 'visible' : 'hidden'\">\r\n          <dsr-button (dsrClick)=\"goToAttachment(machine);\" (click)=\"$event.stopPropagation()\" style=\"size: 10px;\">{{'machine.attachment' | translate}}</dsr-button>\r\n        </div>\r\n\r\n      </div>\r\n      <mat-card-header>\r\n        <mat-card-title class=\"machine-card-title\">\r\n          <div *ngIf=\"machine.statusHexColor\" mat-card-avatar [style.background]=\"machine.statusHexColor\"\r\n            class=\"machine-card-title-status\"></div>{{ machine.code }}\r\n        </mat-card-title>\r\n        <mat-card-subtitle class=\"machine-card-subtitle\">{{ machine.name }}\r\n          <span *ngIf=\"machine.status\" style=\"font-family: 'Roboto Mono';\">[{{ machine.status }}]</span>\r\n          <span *ngIf=\"machine.statusIconAnimation != 1\" style=\"font-family: 'Roboto Mono';\">[{{ machine.statusDetail }}]</span>\r\n        </mat-card-subtitle>\r\n      </mat-card-header>\r\n      <mat-card-content *ngIf=\"isBigGrid()\">\r\n        <p  class=\"details-paragraph details-paragraph-small\" >\r\n          <!-- <span style=\"font-weight: 500;\">{{ 'machine.products' | translate }} </span> -->\r\n          <span *ngIf=\"machine.products?.length > 0\">({{machine.products.length}})</span>\r\n          <span *ngIf=\"machine.products?.length > 0\">: {{machine.products.join(', ')}}</span>\r\n        </p>\r\n\r\n      </mat-card-content>\r\n      <mat-card-content class=\"machine-card-content\" *ngIf=\"!isBigGrid()\">\r\n        <p class=\"details-paragraph\" style=\"margin-bottom: 4px;\">\r\n          <span style=\"font-weight: 500;\">{{ 'machine.workers' | translate }} </span>\r\n          <span *ngIf=\"machine.workers?.length > 0\" style=\"font-weight: 500;\">({{machine.workers.length}})</span>\r\n          <span *ngIf=\"machine.workers?.length > 0\">: {{machine.workers.join(', ')}}</span>\r\n        </p>\r\n        <p *ngIf=\"isMediumGrid()\" class=\"details-paragraph\" style=\"margin-bottom: 4px;\">\r\n          <span style=\"font-weight: 500;\">{{ 'machine.products' | translate }} </span>\r\n          <span *ngIf=\"machine.products?.length > 0\" style=\"font-weight: 500;\">({{machine.products.length}})</span>\r\n          <span *ngIf=\"machine.products?.length > 0\">: {{machine.products.join(', ')}}</span>\r\n        </p>\r\n        <ng-container *ngIf=\"!isMediumGrid()\">\r\n          <p class=\"details-paragraph\" style=\"margin-bottom: 4px; \" >\r\n            <span style=\"font-weight: 500;\">{{ 'machine.products' | translate }}:</span>\r\n          </p>\r\n          <table mat-table [dataSource]=\"machine.workOrders\" class=\"mat-elevation-z8\">\r\n            <ng-container matColumnDef=\"partNumber\">\r\n              <th mat-header-cell *matHeaderCellDef> {{'machine.parts.partNumber' | translate}} </th>\r\n              <td mat-cell *matCellDef=\"let element\"> {{element.partNumber}} </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"partDescription\">\r\n              <th mat-header-cell *matHeaderCellDef> {{'machine.parts.partDescription' | translate}} </th>\r\n              <td mat-cell *matCellDef=\"let element\"> {{element.partDescription}} </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"partCustomCharacter01\">\r\n              <th mat-header-cell *matHeaderCellDef> {{'machine.parts.partCustomCharacter01' | translate}} </th>\r\n              <td mat-cell *matCellDef=\"let element\"> {{element.partCustomCharacter01}} </td>\r\n            </ng-container>\r\n            <tr mat-header-row *matHeaderRowDef=\"partTableDisplayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: partTableDisplayedColumns;\"></tr>\r\n          </table>\r\n        </ng-container>\r\n        <span *ngIf=\"isMediumGrid()\">\r\n          <p class=\"details-paragraph\" style=\"margin-bottom: 4px;\">\r\n            <span style=\"font-weight: 500;\">{{ 'machine.workOrder' | translate }}</span>\r\n            <span *ngIf=\"machine.workOrders[0]\">: {{machine.workOrder}}</span>\r\n          </p>\r\n          <p class=\"details-paragraph\" style=\"margin-bottom: 4px;\">\r\n            <span style=\"font-weight: 500;\">{{ 'machine.workOrderQuantities' | translate }}:</span>\r\n          </p>\r\n          <p class=\"details-paragraph\" style=\"margin-bottom: 4px;\">\r\n            <span *ngIf=\"machine.workOrders?.length > 0\">{{machine.workOrders[0].qtyOrdered}}\r\n              / {{machine.workOrders[0].qtyCompleted}}\r\n              / {{machine.workOrders[0].qtyToFix}}\r\n              / {{machine.workOrders[0].qtyCompletedWithLogs}}\r\n              / {{machine.workOrders[0].qtyRejected}}\r\n            </span>\r\n          </p>\r\n        </span>\r\n        <ng-container *ngIf=\"!isMediumGrid()\">\r\n          <p class=\"details-paragraph\" style=\"margin-bottom: 4px;\">\r\n            <span style=\"font-weight: 500;\">{{ 'machine.workOrder' | translate }}:</span>\r\n          </p>\r\n          <table mat-table [dataSource]=\"machine.workOrders\" class=\"mat-elevation-z8\">\r\n            <ng-container matColumnDef=\"number\">\r\n              <th mat-header-cell *matHeaderCellDef> {{'machine.column.order' | translate}} </th>\r\n              <td mat-cell *matCellDef=\"let element\"> {{element.number}} </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"qtyOrdered\">\r\n              <th mat-header-cell *matHeaderCellDef> {{'machine.workOrders.qtyPlanned' | translate}} </th>\r\n              <td mat-cell *matCellDef=\"let element\"> {{element.qtyOrdered}} </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"qtyCompleted\">\r\n              <th mat-header-cell *matHeaderCellDef> {{'machine.workOrders.qtyCompleted' | translate}} </th>\r\n              <td mat-cell *matCellDef=\"let element\"> {{element.qtyCompleted}} </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"qtyToFix\">\r\n              <th mat-header-cell *matHeaderCellDef> {{'machine.workOrders.qtyToFix' | translate}} </th>\r\n              <td mat-cell *matCellDef=\"let element\"> {{element.qtyToFix}} </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"qtyCompletedWithLogs\">\r\n              <th mat-header-cell *matHeaderCellDef> {{'machine.workOrders.qtyCompletedWithLogs' | translate}} </th>\r\n              <td mat-cell *matCellDef=\"let element\"> {{element.qtyCompletedWithLogs}} </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"qtyRejected\">\r\n              <th mat-header-cell *matHeaderCellDef> {{'machine.workOrders.qtyMissing' | translate}} </th>\r\n              <td mat-cell *matCellDef=\"let element\"> {{element.qtyRejected}} </td>\r\n            </ng-container>\r\n            <tr mat-header-row *matHeaderRowDef=\"workOrderTableDisplayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: workOrderTableDisplayedColumns;\"></tr>\r\n          </table>\r\n        </ng-container>\r\n      </mat-card-content>\r\n    </mat-card>\r\n    <mat-card *ngIf=\"!machine\" class=\"machine-empty-card\" (click)=\"goToMachineStatus(null)\">\r\n      <mat-card-content style=\"display: flex; height: 100%\" class=\"scaled-icons-wrapper\">\r\n        <mat-icon class=\"material-icons-outlined\" style=\"margin: auto\">precision_manufacturing</mat-icon>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </ng-container>\r\n</div>\r\n","import { AfterViewInit, Component, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { SelectItem, SelectItemInterface } from 'dsr-toolkit';\r\nimport * as moment from 'moment';\r\nimport { MachineModel } from '../models/machine.model';\r\nimport { MachineStatusModel } from '../models/machine-status.model';\r\nimport { alphaRipple } from 'src/app/common/utils/color-helper';\r\nimport { MatRipple } from '@angular/material/core';\r\nimport { ShiftModel } from '../models/shift.model';\r\nimport { WorkOrderModel } from '../models/work-order.model';\r\nimport { ComponentStatusModel } from '../models/component-status.model';\r\nimport { MachineService } from 'src/app/api/services';\r\nimport { MachineActivityDTOs } from 'src/app/api/models';\r\nimport { LoaderService } from 'src/app/common/services/loader.service';\r\nimport { WorkerModel } from '../models/worker.model';\r\nimport { SfcNavigatorService } from 'src/app/common/services/sfc-navigator.service';\r\nimport { DisplayConfigurationService } from 'src/app/common/services/display-configuration.service';\r\nimport { OperatorAuthenticationService } from 'src/app/common/services/operator-authentication.service';\r\nimport { interval, Subject, Subscription } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-machine-status-list',\r\n  templateUrl: './machine-status-list.component.html',\r\n  styleUrls: ['./machine-status-list.component.scss']\r\n})\r\nexport class MachineStatusListComponent implements OnInit, AfterViewInit {\r\n  @ViewChildren(MatRipple) rippleList: QueryList<MatRipple>;\r\n\r\n  loading = true;\r\n  machineId: number;\r\n  machine: MachineModel = null;\r\n\r\n  subscription: Subscription;\r\n  private onDestroy$ = new Subject<void>();\r\n\r\n  dates: SelectItemInterface[] = [];\r\n  dateValue: string;\r\n\r\n  shifts: SelectItemInterface[] = [];\r\n  shiftValue: number;\r\n\r\n  dataSource: MachineStatusModel[] = [];\r\n\r\n  selected: number[] = [];\r\n\r\n  status: ComponentStatusModel = null;\r\n\r\n  machineProductionDisplayMethod: number = -1;\r\n\r\n  productionData: any = null;\r\n\r\n  initialized: boolean = false;\r\n  SHIFTS: ShiftModel[] = [\r\n    { id: 1, startTime: 360, endTime: 840 },\r\n    { id: 2, startTime: 840, endTime: 1320 },\r\n    { id: 3, startTime: 1320, endTime: 360 },\r\n  ];\r\n\r\n  changeShiftDisabled = false;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private machineService: MachineService,\r\n    private loaderService: LoaderService,\r\n    private sfcNavigator: SfcNavigatorService,\r\n    private displayConfigurationService: DisplayConfigurationService,\r\n    private operatorAuthenticationService: OperatorAuthenticationService) {\r\n    if (!this.operatorAuthenticationService.isLoggedIn) {\r\n      this.goToMachineSelect();\r\n    }\r\n    this.changeShiftDisabled = this.operatorAuthenticationService.currentUserValue.role == \"operatorPlus\";\r\n    this.machineId = parseInt(this.route.snapshot.paramMap.get('id'), 10);\r\n    const tempStatus = this.router.getCurrentNavigation().extras.state;\r\n    if (tempStatus !== undefined && 'machine' in tempStatus) {\r\n      if ('selected' in tempStatus) {\r\n        this.status = tempStatus as ComponentStatusModel;\r\n      } else {\r\n        this.machine = tempStatus.machine;\r\n      }\r\n    }\r\n    // this.loaderService.getLoading().subscribe((v) => {\r\n    //   setTimeout(() => this.loading = v);\r\n    // });\r\n  }\r\n\r\n  goToSfc(): void {\r\n    this.sfcNavigator.goToSfc();\r\n  }\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    this.machineProductionDisplayMethod = await this.displayConfigurationService.getMachineProductionDisplayMethod(this.machineId);\r\n    this.loadProductionData();\r\n\r\n    const secondsCounter = interval(60000); // 10s\r\n    // const secondsCounter = interval(30000); // 30s\r\n    // const secondsCounter = interval(1000000000); // inf for debug\r\n    this.subscription = secondsCounter.pipe(takeUntil(this.onDestroy$)).subscribe(n =>{\r\n      if(!this.loading){\r\n        this.loading = true;\r\n        this.loadProductionData();\r\n        this.loadData();\r\n      }\r\n    }\r\n    );\r\n    for (let i = 0; i < 30; i++) {\r\n      const date = moment().subtract(i, 'days').startOf('day');\r\n      if (i === 0) {\r\n        this.dateValue = date.format('YYYY-MM-DD');\r\n      }\r\n      this.dates.push(new SelectItem(date.format('YYYY-MM-DD'), date.format('DD-MM-YYYY')));\r\n    }\r\n    var shiftConfig = this.displayConfigurationService.getMachineShiftsConfiguration(this.machineId);\r\n    shiftConfig.then((result) => {\r\n      this.SHIFTS = [];\r\n      result.shifts.forEach( s => this.SHIFTS.push({ id: s.id, startTime: s.startTime, endTime: s.endTime }))\r\n      this.setUpShifts();\r\n      this.initialized = true;\r\n    });\r\n\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.onDestroy$.next();\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  loadProductionData(): void {\r\n    if (this.machineProductionDisplayMethod == 0) {\r\n      this.machineService.postApiMachineGetMachineProductionMethod1(this.machineId).subscribe((data) => {\r\n        this.productionData = data;\r\n        // qtyCompleted?: number;\r\n        // qtyRequired?: number;\r\n      })\r\n    }\r\n  }\r\n\r\n  setUpShifts(): void {\r\n    const today = moment();\r\n    const currDay = moment().startOf('day');\r\n    this.SHIFTS.forEach(shift => {\r\n      const shiftStart = currDay.clone().add(shift.startTime, 'minutes');\r\n      let shiftEnd = currDay.clone().add(shift.endTime, 'minutes');\r\n      if (shiftEnd < shiftStart) {\r\n        shiftEnd = shiftEnd.add(1, 'days'); // Next day\r\n      }\r\n      this.shifts.push(\r\n        new SelectItem(\r\n          shift.id,\r\n          `${shiftStart.format('HH:mm')} - ${shiftEnd.format('HH:mm')}`,\r\n          null,\r\n          true)\r\n      );\r\n      if (today.isBetween(shiftStart, shiftEnd)) {\r\n        this.shiftValue = shift.id;\r\n      }\r\n    });\r\n    this.activateShiftOptions();\r\n  }\r\n\r\n  activateShiftOptions(): void {\r\n    if(this.shiftValue == null){\r\n      this.shiftValue = 1;\r\n    }\r\n    const today = moment();\r\n    const selectedDate = moment(this.dateValue);\r\n    this.SHIFTS.forEach(shift => {\r\n      const shiftStart = selectedDate.clone().add(shift.startTime, 'minutes');\r\n      let shiftEnd = selectedDate.clone().add(shift.endTime, 'minutes');\r\n      if (shiftEnd < shiftStart) {\r\n        shiftEnd = shiftEnd.add(1, 'days'); // Next day\r\n      }\r\n      const selectItem = this.shifts.find(it => it.value === shift.id);\r\n      selectItem.active = today.valueOf() > shiftStart.valueOf();\r\n    });\r\n    if (!this.shifts.find(s => s.value === this.shiftValue).active) {\r\n      this.changeCurrentShiftValue();\r\n    }\r\n  }\r\n\r\n  changeCurrentShiftValue(): void {\r\n    const today = moment();\r\n    const selectedDate = moment(this.dateValue);\r\n    this.SHIFTS.forEach(shift => {\r\n      const shiftStart = selectedDate.clone().add(shift.startTime, 'minutes');\r\n      let shiftEnd = selectedDate.clone().add(shift.endTime, 'minutes');\r\n      if (shiftEnd < shiftStart) {\r\n        shiftEnd = shiftEnd.add(1, 'days'); // Next day\r\n      }\r\n      if (today.isBetween(shiftStart, shiftEnd)) {\r\n        this.shiftValue = shift.id;\r\n      }\r\n    });\r\n  }\r\n\r\n  async ngAfterViewInit(): Promise<void> {\r\n    while (!this.initialized) {\r\n      await new Promise(f => setTimeout(f, 100));\r\n    }\r\n    if (this.status) {\r\n      this.dateValue = this.status.dateValue;\r\n      this.shiftValue = this.status.shiftValue;\r\n      this.machine = this.status.machine;\r\n      this.selected = this.status.selected.map(row => row.id);\r\n      this.loadData();\r\n    } else if (!this.machine) {\r\n      this.machineService.GetMachine(this.machineId).subscribe(\r\n        (m) => {\r\n          this.machine = { id: m.id, code: m.code, name: m.name, status: m.status, statusHexColor: m.hexColor || '#ffffff' };\r\n          this.loadData();\r\n        },\r\n        (error) => {\r\n\r\n        },\r\n        () => {\r\n\r\n        }\r\n      );\r\n    } else {\r\n      this.loadData();\r\n    }\r\n  }\r\n\r\n  resetData(): void {\r\n    if (this.initialized && !this.changeShiftDisabled) {\r\n      this.activateShiftOptions();\r\n      this.dataSource = [];\r\n      this.selected = [];\r\n      this.loadData();\r\n    }\r\n  }\r\n\r\n  loadData(): void {\r\n    this.loading = true;\r\n    this.loaderService.setGlobalLoading(true);\r\n    const data = { dayOfActivity: this.dateValue, machineId: this.machineId, shift: this.shiftValue };\r\n    // console.log('loadData', data);\r\n    this.machineService.postApiMachineGetMachineActivity(data).subscribe(\r\n      (result: MachineActivityDTOs[]) => {\r\n        const tempList = result.map(m => {\r\n          return {\r\n            id: m.id,\r\n            status: m.status,\r\n            statusHexColor: m.statusHexColor || '#ffffff',\r\n            statusReason: m.statusReasons,\r\n            startTime: m.beginDate,\r\n            endTime: m.endDate,\r\n            orders: m.workOnRoutings.map(wor => ({\r\n              orderId: wor.number,\r\n              opNo: wor.operation,\r\n              partNo: wor.partNumber,\r\n              removable: wor.isUnassigningEnabled,\r\n              partDescription: wor.partDescription,\r\n              partDetails: wor.partDetails,\r\n             } as WorkOrderModel)),\r\n            workers: m.workers.map(w => ({ id: w.id, name: w.firstName, surname: w.lastName } as WorkerModel)),\r\n            isReasonRequired: m.statusReasonDetailRequired,\r\n            isOrderRequired: false,\r\n            isWorkerRequired: false\r\n          } as MachineStatusModel;\r\n        });\r\n        this.dataSource = tempList.sort((a, b) => {\r\n          if (a.startTime !== b.startTime) {\r\n            return moment(b.startTime).valueOf() - moment(a.startTime).valueOf();\r\n          }\r\n          if (a.endTime !== b.endTime) {\r\n            return moment(b.endTime).valueOf() - moment(a.endTime).valueOf();\r\n          }\r\n          return b.id - a.id;\r\n        });\r\n        setTimeout(() => {\r\n          this.selected.forEach(id => this.triggerRiggle(id));\r\n          this.loaderService.setGlobalLoading(false);\r\n          this.loading = false;\r\n        });\r\n      },\r\n      (error) => {\r\n        // TODO: catch error\r\n        this.loaderService.setGlobalLoading(false);\r\n        this.loading = false;\r\n      },\r\n      () => {\r\n      }\r\n    );\r\n  }\r\n\r\n  getTime(row: MachineStatusModel): string {\r\n    const shift = this.SHIFTS.find(s => s.id === this.shiftValue);\r\n\r\n    const currentDay = moment(this.dateValue).startOf('day');\r\n    const shiftStart = currentDay.clone().add(shift.startTime, 'minutes');\r\n    let shiftEnd = currentDay.clone().add(shift.endTime, 'minutes');\r\n    if (shiftEnd < shiftStart) {\r\n      shiftEnd = shiftEnd.add(1, 'days'); // Next day\r\n    }\r\n\r\n    const startDate = moment(row.startTime);\r\n    let result = '';\r\n    if (startDate < shiftStart) {\r\n      result += `*${moment().startOf('day').add(shift.startTime, 'minutes').format('HH:mm')}`;\r\n    } else {\r\n      result += `${startDate.format('HH:mm')}`;\r\n    }\r\n\r\n    result += ' - ';\r\n\r\n    if (row.endTime) {\r\n      const endDate = moment(row.endTime);\r\n      if (endDate > shiftEnd) {\r\n        result += `*${moment().startOf('day').add(shift.endTime, 'minutes').format('HH:mm')}`;\r\n      } else {\r\n        result += `${endDate.format('HH:mm')}`;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private triggerRiggle(id: number): void {\r\n    const rowIndex = this.dataSource.findIndex((row: MachineStatusModel) => row.id === id);\r\n    const matRipple = this.rippleList.toArray()[rowIndex];\r\n    matRipple.launch({\r\n      centered: true,\r\n      persistent: true\r\n    });\r\n  }\r\n\r\n  toggleRow(row: MachineStatusModel, event: MouseEvent): void {\r\n    const rowIndex = this.dataSource.indexOf(row, 0);\r\n    const matRipple = this.rippleList.toArray()[rowIndex];\r\n    const id = row.id;\r\n    if (this.selected.includes(id)) {\r\n      const selectedIdx = this.selected.indexOf(id, 0);\r\n      if (selectedIdx > -1) {\r\n        this.selected.splice(selectedIdx, 1);\r\n        matRipple.fadeOutAll();\r\n      }\r\n    } else {\r\n      this.selected.push(id);\r\n      this.triggerRiggle(id);\r\n    }\r\n    event.stopPropagation();\r\n  }\r\n\r\n  alphaRipple(hexColor: string): string {\r\n    return alphaRipple(hexColor, 0.5);\r\n  }\r\n\r\n  goToMachineSelect(): void {\r\n    this.operatorAuthenticationService.resetTimeout();\r\n    this.router.navigate(['..', '..'], { relativeTo: this.route });\r\n  }\r\n\r\n  isAssignDetailsActive(): boolean {\r\n    let result = false;\r\n    if (this.selected.length > 0) {\r\n      result = true;\r\n      const firstRow = this.dataSource.find(row => row.id === this.selected[0]);\r\n      const statusReasonValue = firstRow?.statusReason || null;\r\n      this.selected.forEach(id => {\r\n        const currRow = this.dataSource.find(row => row.id === id);\r\n        const currStatusReason = currRow?.statusReason || null;\r\n        if (currStatusReason !== statusReasonValue) {\r\n          result = false;\r\n        }\r\n      });\r\n    }\r\n    return result;\r\n  }\r\n\r\n  isAssignWorkOrderActive(): boolean {\r\n    let result = false;\r\n    if (this.selected.length > 0) {\r\n      result = true;\r\n      const firstRow = this.dataSource.find(row => row.id === this.selected[0]);\r\n      const orders = firstRow?.orders;\r\n      this.selected.forEach(id => {\r\n        const currRow = this.dataSource.find(row => row.id === id);\r\n        if (currRow?.orders?.length !== orders?.length) {\r\n          result = false;\r\n        } else {\r\n          currRow?.orders?.forEach(order => {\r\n            if (!orders.find(o => o.orderId === order?.orderId && o.opNo === order?.opNo)) {\r\n              result = false;\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n    return result;\r\n  }\r\n\r\n  isAssignWorkerActive(): boolean {\r\n    let result = false;\r\n    if (this.selected.length > 0) {\r\n      result = true;\r\n      const firstRow = this.dataSource.find(row => row.id === this.selected[0]);\r\n      const workers = firstRow?.workers;\r\n      this.selected.forEach(id => {\r\n        const currRow = this.dataSource.find(row => row.id === id);\r\n        if (currRow?.workers?.length !== workers?.length) {\r\n          result = false;\r\n        } else {\r\n          currRow?.workers?.forEach(worker => {\r\n            if (!workers.find(w => w.id === worker.id)) {\r\n              result = false;\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private getCurrentStatus(): ComponentStatusModel {\r\n    return {\r\n      machine: this.machine,\r\n      shiftValue: this.shiftValue,\r\n      dateValue: this.dateValue,\r\n      selected: this.selected.map(id => this.dataSource.find((row: MachineStatusModel) => row.id === id))\r\n    };\r\n  }\r\n\r\n  goToReasonForm(): void {\r\n    this.operatorAuthenticationService.resetTimeout();\r\n    this.router.navigate(['reason'], { state: this.getCurrentStatus(), relativeTo: this.route });\r\n  }\r\n\r\n  goToWorkOrderForm(): void {\r\n    this.operatorAuthenticationService.resetTimeout();\r\n    this.router.navigate(['workorder'], { state: this.getCurrentStatus(), relativeTo: this.route });\r\n  }\r\n\r\n  goToWorkerForm(): void {\r\n    this.operatorAuthenticationService.resetTimeout();\r\n    this.router.navigate(['worker'], { state: this.getCurrentStatus(), relativeTo: this.route });\r\n  }\r\n\r\n}\r\n","<div class=\"header\">\r\n  <h1 class=\"mat-headline\" style=\"margin: auto;\" [style.margin-right.px]=\"16\">{{ machine?.code }}</h1>\r\n  <dsr-select-field [items]=\"dates\" [(value)]=\"dateValue\" (valueChange)=\"resetData()\" [style.flex]=\"1\" [disabled]=\"changeShiftDisabled\"\r\n    [style.margin-right.px]=\"16\" [allowClear]=\"false\" icon=\"today\"></dsr-select-field>\r\n  <dsr-select-field [items]=\"shifts\" [(value)]=\"shiftValue\" (valueChange)=\"resetData()\" [style.flex]=\"1\" [disabled]=\"changeShiftDisabled\"\r\n    [style.margin-right.px]=\"16\" [allowClear]=\"false\" icon=\"engineering\"></dsr-select-field>\r\n  <!-- <dsr-button appearance=\"dsrRound\" [style.margin-left.px]=\"16\" (dsrClick)=\"goToSfc()\">\r\n    {{ 'common.goBackToSfc' | translate }}</dsr-button> -->\r\n  <!-- <PT-dsr-app-logo-button [style.margin-left.px]=\"16\" [appName]=\"'sfc'\" (click)=\"goToSfc()\"></PT-dsr-app-logo-button> -->\r\n</div>\r\n<mat-divider></mat-divider>\r\n<div class=\"content\">\r\n  <div style=\"flex: 1; display: flex; flex-flow: column;\">\r\n    <div class=\"grid-container\">\r\n      <ng-container *ngIf=\"dataSource?.length > 0\">\r\n        <!-- Header -->\r\n        <div></div>\r\n        <h3 class=\"mat-h3 grid-cell\">{{ \"machine.column.time\" | translate }}</h3>\r\n        <h3 class=\"mat-h3 grid-cell\">{{ \"machine.column.status\" | translate }}</h3>\r\n        <h3 class=\"mat-h3 grid-cell\">{{ \"machine.column.order\" | translate }}</h3>\r\n        <!-- <h3 class=\"mat-h3 grid-cell\">{{ \"machine.column.operation\" | translate }}</h3> -->\r\n        <h3 class=\"mat-h3 grid-cell\">{{ \"machine.column.part\" | translate }}</h3>\r\n        <h3 class=\"mat-h3 grid-cell\">{{ \"machine.column.worker\" | translate }}</h3>\r\n        <!-- Rows -->\r\n        <ng-container *ngFor=\"let row of dataSource; let i = index\">\r\n          <div class=\"ripple-row\" [style.grid-row]=\"i + 2\" [class.active]=\"selected.includes(row.id)\"\r\n            (click)=\"toggleRow(row, $event)\" matRipple [matRippleColor]=\"alphaRipple(row.statusHexColor)\"\r\n            [matRippleTrigger]=\"rippleTrigger\"></div>\r\n          <div class=\"grid-cell\" [style.grid-row]=\"i + 2\" style=\"grid-column: 1;\" (click)=\"toggleRow(row, $event)\">\r\n            <div class=\"status-dot\" [class.active]=\"selected.includes(row.id)\" [style.background]=\"row.statusHexColor\">\r\n            </div>\r\n          </div>\r\n          <div class=\"grid-cell\" [style.grid-row]=\"i + 2\" style=\"grid-column: 2;\" (click)=\"toggleRow(row, $event)\">\r\n            {{ getTime(row) }}</div>\r\n          <div class=\"grid-cell\" [style.grid-row]=\"i + 2\" style=\"grid-column: 3;\" (click)=\"toggleRow(row, $event)\">\r\n            <span style=\"font-family: 'Roboto Mono';\">[{{ row.status }}]</span> {{ row?.statusReason }}\r\n            <ng-container *ngIf=\"row?.isReasonRequired; then missingField\">\r\n            </ng-container>\r\n          </div>\r\n          <div class=\"grid-cell\" [style.grid-row]=\"i + 2\" style=\"grid-column: 4;\" (click)=\"toggleRow(row, $event)\">\r\n            <ng-container *ngIf=\"row.orders?.length > 0;\">\r\n              <div *ngFor=\"let order of row.orders;\">\r\n                {{ order.orderId }}\r\n              </div>\r\n            </ng-container>\r\n            <ng-container *ngIf=\"row?.isOrderRequired; then missingField\"></ng-container>\r\n          </div>\r\n          <!-- <div class=\"grid-cell\" [style.grid-row]=\"i + 2\" style=\"grid-column: 4;\" (click)=\"toggleRow(row, $event)\">\r\n            <ng-container *ngIf=\"row.orders?.length > 0;\">\r\n              <div *ngFor=\"let order of row.orders;\">\r\n                {{ order.opNo }}\r\n              </div>\r\n            </ng-container>\r\n            <ng-container *ngIf=\"row?.isOrderRequired; then missingField\"></ng-container>\r\n          </div> -->\r\n          <div class=\"grid-cell\" [style.grid-row]=\"i + 2\" style=\"grid-column: 5;\" (click)=\"toggleRow(row, $event)\">\r\n            <ng-container *ngIf=\"row.orders?.length > 0;\">\r\n              <div *ngFor=\"let order of row.orders;\">\r\n                {{ order.partDescription }}\r\n              </div>\r\n            </ng-container>\r\n            <ng-container *ngIf=\"row?.isOrderRequired; then missingField\"></ng-container>\r\n          </div>\r\n          <div class=\"grid-cell\" [style.grid-row]=\"i + 2\" style=\"grid-column: 6;\" (click)=\"toggleRow(row, $event)\">\r\n            <ng-container *ngIf=\"row.workers?.length > 0;\">\r\n              <div *ngFor=\"let worker of row.workers;\">\r\n                <div style=\"margin-right: 16px;\">{{ worker.name }} {{ worker.surname }}</div>\r\n              </div>\r\n            </ng-container>\r\n            <ng-container *ngIf=\"row?.isWorkerRequired; then missingField\"></ng-container>\r\n          </div>\r\n        </ng-container>\r\n      </ng-container>\r\n      <ng-container *ngIf=\"!loading && dataSource.length == 0\">\r\n        <div class=\"full-container-wrapper\">\r\n          <h1 class=\"mat-headline\" style=\"margin: 0;\">{{ 'machine.noRecords' | translate }}</h1>\r\n        </div>\r\n      </ng-container>\r\n    </div>\r\n  </div>\r\n  <div class=\"side-panel\">\r\n    <!-- <h1 class=\"mat-headline\" style=\"margin: auto;\">{{ machine?.code }}</h1> -->\r\n    <h2 class=\"mat-title\" style=\"margin: auto;\">{{ machine?.name }}</h2>\r\n    <ng-container *ngIf=\"machineProductionDisplayMethod == 0\">\r\n      <div style=\"margin: auto;\">{{ 'machine.qtyRequired' | translate }}: {{ productionData?.qtyRequired ?? '-' }}</div>\r\n      <div style=\"margin: auto;\">{{ 'machine.qtyCompleted' | translate }}: {{ productionData?.qtyCompleted ?? '-' }}</div>\r\n      <div style=\"margin: auto;\">{{ 'machine.qtyMissing' | translate }}: {{ productionData?.qtyMissing ?? '-' }}</div>\r\n      <div style=\"margin: auto;\">{{ 'machine.qtyCompletedWithLogs' | translate }}: {{ productionData?.qtyCompletedWithLogs ?? '-' }}</div>\r\n      <div style=\"margin: auto;\">{{ 'machine.qtyToFix' | translate }}: {{ productionData?.qtyToFix ?? '-' }}</div>\r\n    </ng-container>\r\n    <div class=\"spacer\"></div>\r\n    <div *ngIf=\"dataSource?.length > 0\" class=\"amount-div\" [style.margin-bottom.px]=\"16\">\r\n      {{ 'machine.selectedRows' | translate }}: {{ this.selected?.length || 0 }}</div>\r\n    <dsr-button appearance=\"dsrRoundNegativeOutline\" style=\"width:100%\" [style.margin-bottom.px]=\"16\"\r\n      (dsrClick)=\"goToMachineSelect()\">\r\n      {{ 'machine.changeMachine' | translate }}\r\n    </dsr-button>\r\n    <dsr-button appearance=\"dsrRound\" style=\"width:100%\" [style.margin-bottom.px]=\"16\"\r\n      [disabled]=\"!isAssignDetailsActive()\" (dsrClick)=\"goToReasonForm()\">\r\n      {{ 'machine.assignStatusReason' | translate }}</dsr-button>\r\n    <dsr-button appearance=\"dsrRound\" style=\"width:100%\" [style.margin-bottom.px]=\"16\"\r\n      [disabled]=\"!isAssignWorkOrderActive()\" (dsrClick)=\"goToWorkOrderForm()\">\r\n      {{ 'machine.assignWorkOrder' | translate }}</dsr-button>\r\n    <dsr-button appearance=\"dsrRound\" style=\"width:100%\" [disabled]=\"!isAssignWorkerActive()\"\r\n      (dsrClick)=\"goToWorkerForm()\">\r\n      {{ 'machine.assignWorker' | translate }}</dsr-button>\r\n  </div>\r\n  <div #rippleTrigger style=\"display: none;\"></div>\r\n</div>\r\n<ng-template #missingField>\r\n  <div class=\"missing-field-wrapper\">\r\n    <mat-icon class=\"material-icons-outlined\">feedback</mat-icon>\r\n    <!-- <mat-icon class=\"material-icons-outlined\">assignment_late</mat-icon> -->\r\n  </div>\r\n</ng-template>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { NotificationService, SelectItem, SelectItemInterface } from 'dsr-toolkit';\r\nimport { SetStatusReasonModel } from 'src/app/api/models/set-status-reason-model';\r\nimport { MachineService } from 'src/app/api/services';\r\nimport { LoaderService } from 'src/app/common/services/loader.service';\r\nimport { OperatorAuthenticationService } from 'src/app/common/services/operator-authentication.service';\r\nimport { SfcNavigatorService } from 'src/app/common/services/sfc-navigator.service';\r\nimport { ComponentStatusModel } from '../models/component-status.model';\r\n\r\n@Component({\r\n  selector: 'app-machine-status-reason-form',\r\n  templateUrl: './machine-status-reason-form.component.html',\r\n  styleUrls: ['./machine-status-reason-form.component.scss']\r\n})\r\nexport class MachineStatusReasonFormComponent implements OnInit {\r\n  loading = true;\r\n  status: ComponentStatusModel = null;\r\n  selectedValue: number = null;\r\n  statusReasonValues: SelectItemInterface[] = [];\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private machineService: MachineService,\r\n    private loaderService: LoaderService,\r\n    private notificationService: NotificationService,\r\n    private sfcNavigator: SfcNavigatorService,\r\n    private operatorAuthenticationService: OperatorAuthenticationService) {\r\n    this.status = this.router.getCurrentNavigation().extras.state as ComponentStatusModel;\r\n    if (this.status == null || !this.operatorAuthenticationService.isLoggedIn) {\r\n      this.goToMachineStatus();\r\n    }\r\n    this.loaderService.getLoading().subscribe((v) => {\r\n      setTimeout(() => this.loading = v);\r\n    });\r\n  }\r\n\r\n  goToSfc(): void {\r\n    this.sfcNavigator.goToSfc();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    var test = this.status.selected.map((x) => x.id);\r\n    this.machineService.postApiMachineGetStatusReasons(test).subscribe(\r\n      (result) => {\r\n        this.statusReasonValues = result.map((dictItem) => new SelectItem(dictItem.id, dictItem.key, dictItem.name));\r\n        this.statusReasonValues.sort((a,b)=>a.text.localeCompare(b.text));\r\n        if (this.status.selected?.length > 0) {\r\n          const reasonName = this.status.selected[0].statusReason;\r\n          if (reasonName) {\r\n            this.selectedValue = this.statusReasonValues.find(sr => sr.details === reasonName).value as number;\r\n            // console.log(reasonName);\r\n            // console.log(this.statusReasonValues, this.statusReasonValues.find(sr => sr.details === reasonName), this.selectedValue);\r\n          }\r\n        }\r\n      },\r\n      (error) => {\r\n        // TODO: Catch error\r\n      },\r\n      () => {\r\n      }\r\n    );\r\n  }\r\n\r\n  goToMachineStatus(): void {\r\n    this.operatorAuthenticationService.resetTimeout();\r\n    this.router.navigate(['..'], { state: this.status, relativeTo: this.route });\r\n  }\r\n\r\n  changeSelectedStatus(reason: SelectItemInterface)\r\n  {\r\n    this.selectedValue=reason.value as number;\r\n    this.save();\r\n  }\r\n\r\n  save(): void {\r\n    const data: SetStatusReasonModel = {\r\n      machineActivityIds: this.status.selected.map(m => m.id),\r\n      statusReasonId: this.selectedValue\r\n    };\r\n    this.machineService.postApiMachineSetStatusReason(data).subscribe(\r\n      () => {\r\n        this.status.selected = [];\r\n        this.notificationService.showSuccessTranslated('common.savedSuccessfully', 'Ok', null, false, 4000);\r\n      },\r\n      () => {},\r\n      () => this.goToMachineStatus()\r\n    );\r\n  }\r\n}\r\n","<div class=\"header\">\r\n  <h1 class=\"mat-headline\" style=\"margin: auto;\">{{ 'machine.assignStatusReason' | translate }}</h1>\r\n  <div [style.flex]=\"1\"></div>\r\n  <dsr-button appearance=\"dsrRound\" style=\"visibility: hidden;\"></dsr-button>\r\n  <!-- <PT-dsr-app-logo-button [style.margin-left.rem]=\"1\" [appName]=\"'sfc'\" (click)=\"goToSfc()\"></PT-dsr-app-logo-button> -->\r\n</div>\r\n<mat-divider></mat-divider>\r\n<div class=\"content\">\r\n  <div class=\"list-container\">\r\n    <div class=\"statuses-list-wrapper\">\r\n      <h2 class=\"mat-title\" style=\"margin: auto;\">{{ 'machine.selectedStatuses' | translate }}</h2>\r\n      <app-form-machine-status-card-list [statuses]=\"status.selected\"></app-form-machine-status-card-list>\r\n    </div>\r\n    <mat-divider [vertical]=\"true\" style=\"margin: 1rem;\"></mat-divider>\r\n    <div style=\"flex: 1\">\r\n      <!-- <dsr-select-field *ngIf=\"statusReasonValues?.length > 0\" icon=\"flag\" [allowClear]=\"false\" [items]=\"statusReasonValues\" [(value)]=\"selectedValue\"\r\n        [autocomplete]=\"true\" [focus]=\"true\">\r\n      </dsr-select-field> -->\r\n      <dsr-button *ngFor=\"let reason of statusReasonValues\"\r\n      style=\"display: inline-block; width: 20vw;  padding: 5px;\" (dsrClick)=\"changeSelectedStatus(reason)\">\r\n        {{reason.text}}\r\n      </dsr-button>\r\n    </div>\r\n  </div>\r\n  <div class=\"side-panel\">\r\n    <h1 class=\"mat-headline\" style=\"margin: auto;\">{{ status.machine?.code }}</h1>\r\n    <h2 class=\"mat-title\" style=\"margin: auto;\">{{ status.machine?.name }}</h2>\r\n    <div class=\"spacer\"></div>\r\n    <dsr-button appearance=\"dsrRoundNegativeOutline\" style=\"width:100%\" [style.margin-bottom.px]=\"16\"\r\n      (dsrClick)=\"goToMachineStatus()\">\r\n      {{ 'common.discard' | translate }}\r\n    </dsr-button>\r\n    <!-- <dsr-button appearance=\"dsrRound\" style=\"width:100%\" (dsrClick)=\"save()\" [disabled]=\"selectedValue === null\">\r\n      {{ 'common.save' | translate }}</dsr-button> -->\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { NotificationService, SelectItem, SelectItemInterface, ServerSelectSearchFieldComponent, GeneralPromptDialogComponent } from 'dsr-toolkit';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { AssignWorkOnRoutingsViewModel, WorkOnRoutingsDTOs, WorkOrderRoutingItemViewModel } from 'src/app/api/models';\r\nimport { MachineService, WorkOrderService } from 'src/app/api/services';\r\nimport { DisplayConfigurationService } from 'src/app/common/services/display-configuration.service';\r\nimport { LoaderService } from 'src/app/common/services/loader.service';\r\nimport { OperatorAuthenticationService } from 'src/app/common/services/operator-authentication.service';\r\nimport { SfcNavigatorService } from 'src/app/common/services/sfc-navigator.service';\r\nimport { ComponentStatusModel } from '../models/component-status.model';\r\nimport { WorkOrderModel } from '../models/work-order.model';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { SelectWorkOrderPanelDialogComponent } from './select-work-order-panel-dialog/select-work-order-panel-dialog.component';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-machine-status-work-order-form',\r\n  templateUrl: './machine-status-work-order-form.component.html',\r\n  styleUrls: ['./machine-status-work-order-form.component.scss']\r\n})\r\nexport class MachineStatusWorkOrderFormComponent implements OnInit {\r\n  loading = true;\r\n  status: ComponentStatusModel = null;\r\n  inputValue = '';\r\n  itemValue = null;\r\n  workOrders: WorkOrderModel[] = [];\r\n  workOrderAssigningMethod: number = 0;\r\n  assignedWorkOrderLimit: number = 0;\r\n  unassigningWorkOrderEnabled = false;\r\n  isCurrentActivity = false;\r\n  @ViewChild(ServerSelectSearchFieldComponent) selectCmpnt: ServerSelectSearchFieldComponent = null;\r\n\r\n  constructor(\r\n    private translate: TranslateService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private machineService: MachineService,\r\n    private loaderService: LoaderService,\r\n    private sfcNavigator: SfcNavigatorService,\r\n    private displayConfigurationService: DisplayConfigurationService,\r\n    private notificationService: NotificationService,\r\n    private workOrderService: WorkOrderService,\r\n    private operatorAuthenticationService: OperatorAuthenticationService,\r\n    private dialog: MatDialog) {\r\n    this.status = this.router.getCurrentNavigation().extras.state as ComponentStatusModel;\r\n    if (this.status == null || !this.operatorAuthenticationService.isLoggedIn) {\r\n      this.goToMachineStatus();\r\n    }\r\n    this.loaderService.getLoading().subscribe((v) => {\r\n      setTimeout(() => this.loading = v);\r\n    });\r\n  }\r\n\r\n  goToSfc(): void {\r\n    this.sfcNavigator.goToSfc();\r\n  }\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    if (this.status.selected?.length > 0) {\r\n      const workOrders = this.status.selected[0].orders;\r\n      if (workOrders?.length > 0) {\r\n        this.workOrders = workOrders;\r\n      }\r\n    }\r\n    this.workOrderAssigningMethod = await this.displayConfigurationService.getMachineWorkOrderAssigningMethod(this.status.machine.id);\r\n    this.assignedWorkOrderLimit = await this.displayConfigurationService.getAssignedWorkOrderLimit(this.status.machine.id);\r\n    this.unassigningWorkOrderEnabled = await this.displayConfigurationService.getUnassigningWorkOrderEnabled(this.status.machine.id);\r\n    this.isCurrentActivity = this.status.selected.some(a => a.endTime == null);\r\n    if(this.workOrderAssigningMethod == 2 && !(this.workOrders.length>0)){\r\n      this.openSelectWorkOrderPanel();\r\n    }\r\n  }\r\n\r\n  goToMachineStatus(): void {\r\n    this.operatorAuthenticationService.resetTimeout();\r\n    this.router.navigate(['..'], { state: this.status, relativeTo: this.route });\r\n  }\r\n\r\n  searchFn = this.search.bind(this);\r\n\r\n  search(search: string): Observable<WorkOrderRoutingItemViewModel[]> {\r\n    return this.workOrderService\r\n      .postApiWorkOrderSearchWorkOrderRoutings({\r\n        search: search,\r\n        machineId: this.status.machine.id\r\n      })\r\n      .pipe(map((items) => {\r\n        return items.map(i => i as SelectItem)\r\n      }));\r\n  }\r\n\r\n  submitItem(wor: WorkOrderRoutingItemViewModel): void {\r\n    // console.log('submitItem value', wor);\r\n    console.log('submitItem before', this.itemValue);\r\n    if (wor != null) {\r\n\r\n\r\n      // this.itemValue = null;\r\n      // setTimeout(() => {\r\n      //   this.selectCmpnt.clearValue();\r\n      console.log('submitItem after', this.itemValue);\r\n      // });\r\n\r\n      const wo: WorkOrderModel = { \r\n        id: wor.value, \r\n        orderId: wor.woNumber, \r\n        opNo: wor.opNo, \r\n        partNo: wor.partNumber, \r\n        removable: true, \r\n        partDescription: wor.partDescription,\r\n        partDetails: wor.partDetails };\r\n      const existingWoIdx = this.workOrders.findIndex(ewo => ewo.id === wo.id);\r\n      if (existingWoIdx > -1) {\r\n        this.workOrders.splice(existingWoIdx, 1);\r\n      } else {\r\n        var existingWo = this.workOrders.findIndex(ewo => ewo.opNo == wo.opNo && ewo.orderId == wo.orderId);\r\n        if(existingWo == -1)  this.workOrders.push(wo);\r\n      }\r\n      setTimeout(() => {\r\n        this.selectCmpnt.selectRef.resetValues();\r\n      });\r\n      setTimeout(() => {\r\n        this.selectCmpnt.openSelect();\r\n      }, 200);\r\n      // this.selectCmpnt.openSelect();\r\n      // console.log(this.selectCmpnt.selectRef.getMatSelectRef());\r\n      // this.selectCmpnt.selectRef.getMatSelectRef().close();\r\n      // this.selectCmpnt.selectRef.getMatSelectRef().focus();\r\n      // this.selectCmpnt.selectRef.getMatSelectRef().open();\r\n      // this.selectRef.getMatSelectRef()open().;)\r\n    }\r\n\r\n\r\n  }\r\n\r\n  removeWO(woId: number, removable: boolean): void {\r\n    if(removable){\r\n      const existingWoIdx = this.workOrders.findIndex(ewo => ewo.id === woId);\r\n      if (existingWoIdx > -1) {\r\n        this.workOrders.splice(existingWoIdx, 1);\r\n      }\r\n      this.selectCmpnt.selectRef.resetValues();\r\n      this.selectCmpnt.openSelect();\r\n    }\r\n    else{\r\n      this.dialog.open(GeneralPromptDialogComponent, {\r\n        data: {\r\n          title: 'machine.removeWorkOrderMessage'\r\n        }\r\n      }).afterClosed().subscribe((result: boolean) => {\r\n        if (result) {\r\n          this.machineService.postApiMachineCreateNewMachineActivity(this.status.machine.id).subscribe(\r\n            (response) => {\r\n              this.notificationService.showSuccessTranslated('machine.addNewActivitySuccessful', 'Ok', null, false, 4000);\r\n              this.status.selected = [];\r\n              this.goToMachineStatus();\r\n            },\r\n            (error) => {\r\n\r\n            },\r\n            () => {\r\n            }\r\n          );\r\n\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  submitText(value: string): void {\r\n    this.inputValue = '';\r\n    this.machineService.postApiMachineValidateWorkOnRouting(value).subscribe(\r\n      (response) => {\r\n        const wo: WorkOrderModel = { orderId: response.number, opNo: response.operation };\r\n        const existingWoIdx = this.workOrders.findIndex(ewo => ewo.orderId === wo.orderId && ewo.opNo === wo.opNo);\r\n        if (existingWoIdx > -1) {\r\n          this.workOrders.splice(existingWoIdx, 1);\r\n        } else {\r\n          this.workOrders.push(wo);\r\n        }\r\n      },\r\n      (error) => {\r\n\r\n      },\r\n      () => {\r\n      }\r\n    );\r\n  }\r\n\r\n  save(): void {\r\n    if(this.workOrders.length > this.assignedWorkOrderLimit){\r\n      this.notificationService.showWarningTranslated('machine.workOrderLimit', 'Ok', null, false, 4000);\r\n      return;\r\n    }\r\n    const data: AssignWorkOnRoutingsViewModel = {\r\n      machineActivityIds: this.status.selected.map(m => m.id),\r\n      workOnRoutings: this.workOrders.map(wo => ({ number: wo.orderId, operation: wo.opNo, routingId: wo.id } as WorkOnRoutingsDTOs))\r\n    };\r\n    this.machineService.postApiMachineAssignWorkOrder(data).subscribe(\r\n      (response) => {\r\n        if(response != null && response.machineCode != null){\r\n          var message = this.translate.instant('machine.workOrderRoutingAssignNotAllowedExceptionMessage',\r\n            {workOrderNumber: response.wrokOrderNumber, machineCode: response.machineCode});\r\n          this.notificationService.showError(message, 'Ok', false, 8000);\r\n        }\r\n        else{\r\n          this.status.selected = [];\r\n          this.notificationService.showSuccessTranslated('common.savedSuccessfully', 'Ok', null, false, 4000);\r\n          this.goToMachineStatus()\r\n        }\r\n      },\r\n      () => {\r\n\r\n       },\r\n      () => {}\r\n    );\r\n  }\r\n\r\n  openSelectWorkOrderPanel(): void {\r\n    this.dialog.open(SelectWorkOrderPanelDialogComponent, {\r\n      width: '80vw',\r\n      data: {\r\n        machineId: this.status.machine.id\r\n      }\r\n    }).afterClosed().subscribe((result: WorkOrderRoutingItemViewModel) => {\r\n      if (result) {\r\n        this.submitItem(result)\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"header\">\r\n  <h1 class=\"mat-headline\" style=\"margin: auto;\">{{ 'machine.assignWorkOrder' | translate }}</h1>\r\n  <div [style.flex]=\"1\"></div>\r\n  <dsr-button appearance=\"dsrRound\" style=\"visibility: hidden;\"></dsr-button>\r\n  <!-- <PT-dsr-app-logo-button [style.margin-left.rem]=\"1\" [appName]=\"'sfc'\" (click)=\"goToSfc()\"></PT-dsr-app-logo-button> -->\r\n</div>\r\n<mat-divider></mat-divider>\r\n<div class=\"content\">\r\n  <div class=\"list-container\">\r\n    <div>\r\n      <h2 class=\"mat-title\" style=\"margin: auto;\">{{ 'machine.selectedStatuses' | translate }}</h2>\r\n      <app-form-machine-status-card-list [statuses]=\"status.selected\"></app-form-machine-status-card-list>\r\n    </div>\r\n    <mat-divider [vertical]=\"true\" style=\"margin: 1rem;\"></mat-divider>\r\n    <div style=\"flex: 1; display: flex; flex-flow: column;\">\r\n      <ng-container *ngIf=\"workOrderAssigningMethod == 0\">\r\n        <dsr-search-field icon=\"settings\" label=\"machine.selectWorkOrder\" placeholder=\"machine.selectWorkOrder\"\r\n          style.width=\"100%\" [(value)]=\"inputValue\" [debounceTime]=\"0\" [focus]=\"true\" [allowClear]=\"false\"\r\n          (enterPress)=\"submitText($event)\" [style.margin-bottom.px]=\"16\"></dsr-search-field>\r\n      </ng-container>\r\n      <ng-container *ngIf=\"workOrderAssigningMethod == 1\">\r\n        <!-- <dsr-server-select-search-field icon=\"settings\" label=\"machine.selectWorkOrder\"\r\n          placeholder=\"machine.selectWorkOrder\" style.width=\"100%\" [(item)]=\"itemValue\" [focus]=\"true\"\r\n          [allowClear]=\"false\" (itemChange)=\"submitItem($event)\" [style.margin-bottom.px]=\"16\" [searchFn]=\"searchFn\">\r\n        </dsr-server-select-search-field> -->\r\n        <dsr-server-select-search-field icon=\"settings\" label=\"machine.selectWorkOrder\"\r\n          placeholder=\"machine.selectWorkOrder\" style.width=\"100%\" [(item)]=\"itemValue\" [focus]=\"true\" [allowClear]=\"true\"\r\n          (itemChange)=\"submitItem($event)\" [style.margin-bottom.px]=\"16\" [searchFn]=\"searchFn\">\r\n        </dsr-server-select-search-field>\r\n      </ng-container>\r\n      <ng-container *ngIf=\"workOrderAssigningMethod == 2\">\r\n        <dsr-button [disabled]=\"(this.workOrders.length>=this.assignedWorkOrderLimit)\" appearance=\"dsrRound\" [style.margin-right.rem]=\"1\" (dsrClick)=\"openSelectWorkOrderPanel()\" >\r\n        {{ 'common.select' | translate }}</dsr-button>\r\n      </ng-container>\r\n      <div style=\"flex: 1; overflow-y: auto; padding-right: 8px; padding-left: 8px\">\r\n        <div *ngFor=\"let wo of workOrders\" class=\"ripple-row\">\r\n          <h1 class=\"mat-headline\" style=\"margin: auto 0; flex: 1; padding-right: 16px;\">{{ wo.orderId }}</h1>\r\n          <!-- <h2 class=\"mat-title\" style=\"margin: auto 0; flex: 1\">{{ wo.opNo }}</h2> -->\r\n          <ng-container *ngIf=\"workOrderAssigningMethod == 1 || 2\">\r\n            <h2 class=\"mat-title\" style=\"margin: auto 0; flex: 1; padding-right: 16px;\">{{ wo.partNo }}</h2>\r\n            <div style=\"padding-right: 36px;\">\r\n              <h2 class=\"part-description\" >{{ wo.partDescription }}</h2>\r\n              <h2 class=\"part-description\">{{ wo.partDetails }}</h2>\r\n            </div>\r\n            <div class=\"scaled-icons-wrapper\">\r\n              <button mat-button mat-icon-button aria-label=\"Clear\" color=\"accent\" [disabled] = \"!wo.removable && !isCurrentActivity\"\r\n              (click)=\"removeWO(wo.id, wo.removable)\">\r\n              <mat-icon>delete_outline</mat-icon>\r\n            </button>\r\n            </div>\r\n          </ng-container>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"side-panel\">\r\n    <h1 class=\"mat-headline\" style=\"margin: auto;\">{{ status.machine.code }}</h1>\r\n    <h2 class=\"mat-title\" style=\"margin: auto;\">{{ status.machine.name }}</h2>\r\n    <div class=\"spacer\"></div>\r\n    <dsr-button appearance=\"dsrRoundNegativeOutline\" style=\"width:100%\" [style.margin-bottom.px]=\"16\"\r\n      (dsrClick)=\"goToMachineStatus()\">\r\n      {{ 'common.discard' | translate }}\r\n    </dsr-button>\r\n    <dsr-button appearance=\"dsrRound\" style=\"width:100%\" (dsrClick)=\"save()\">\r\n      {{ 'common.save' | translate }}</dsr-button>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { WorkOrderService } from 'src/app/api/services';\r\nimport { WorkOrderRoutingItemViewModel } from 'src/app/api/models/work-order-routing-item-view-model';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { GeneralPromptDialogComponent } from 'dsr-toolkit';\r\n\r\n@Component({\r\n  selector: 'PT-select-work-order-panel-dialog',\r\n  templateUrl: './select-work-order-panel-dialog.component.html',\r\n  styleUrls: ['./select-work-order-panel-dialog.component.scss']\r\n})\r\nexport class SelectWorkOrderPanelDialogComponent implements OnInit {\r\n\r\n  workOrders: WorkOrderRoutingItemViewModel[] = [];\r\n  loading = false;\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any,\r\n  protected matDialogRef: MatDialogRef<GeneralPromptDialogComponent>,\r\n  private workOrderService: WorkOrderService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loading = true;\r\n    this.workOrderService.postApiWorkOrderGetWorkOrderRoutingList(this.data.machineId as number).subscribe(\r\n      (result: WorkOrderRoutingItemViewModel[]) => {\r\n        this.workOrders = result;\r\n      },\r\n      () => {  },\r\n      () => { this.loading = false; }\r\n    );\r\n  }\r\n\r\n  clickCancel(): void {\r\n    this.matDialogRef.close(null);\r\n  }\r\n\r\n  selectkWorkOrder(workOrder: WorkOrderRoutingItemViewModel): void {\r\n    this.matDialogRef.close(workOrder);\r\n  }\r\n\r\n}\r\n","<h2 mat-dialog-title>{{ 'machine.selectWorkOrderTitle' | translate }}</h2>\r\n<div mat-dialog-content style=\"height: 70%;\">\r\n  <div style=\"flex: 1; overflow-y: auto; padding-right: 8px; padding-left: 8px\">\r\n    <!-- <div class=\"ripple-row-header\">\r\n        <h2 class=\"mat-title\" style=\"margin: auto 0; flex: 1; padding-right: 16px;\">{{ \"machine.column.order\" | translate }}</h2>\r\n        <h2 class=\"mat-title\" style=\"margin: auto 0; flex: 1\">{{ \"machine.column.operation\" | translate }}</h2>\r\n        <h2 class=\"mat-title\" style=\"margin: auto 0; flex: 1\">{{ \"machine.column.product\" | translate }}</h2>\r\n    </div> -->\r\n    <div *ngFor=\"let wo of workOrders\" class=\"ripple-row\" (click)=\"selectkWorkOrder(wo)\" >\r\n      <h1 class=\"mat-title\" style=\"margin: auto 0; flex: 1; padding-right: 16px;\">{{ wo.woNumber }}</h1>\r\n      <h2 *ngIf=\"wo.beginDate\" class=\"mat-title\" style=\"margin: auto 0; flex: 1\">({{ wo.beginDate  | date:'shortTime'}})</h2>\r\n      <h2 class=\"mat-title\" style=\"margin: auto 0; flex: 1\">{{ wo.partNumber }}</h2>\r\n      <div>\r\n        <h2 class=\"part-description\" >{{ wo.partDescription }}</h2>\r\n        <h2 class=\"part-description\">{{ wo.partDetails }}</h2>\r\n      </div>\r\n    </div>\r\n    \r\n  </div>\r\n  <ng-container *ngIf=\"!loading && workOrders.length == 0\">\r\n    <div >\r\n      <h1 class=\"mat-headline\" style=\"margin: 0;\">{{ 'machine.noWokrOrders' | translate }}</h1>\r\n    </div>\r\n  </ng-container>\r\n</div>\r\n<div mat-dialog-actions align=\"end\" style=\"margin-bottom: 8px; margin-top: 8px;\">\r\n  <dsr-button [style.margin-right.px]=\"16\" appearance=\"dsrRoundNegativeOutline\" (dsrClick)=\"clickCancel()\">\r\n    {{ 'common.discard' | translate }}</dsr-button>\r\n</div>\r\n  ","import { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { NotificationService } from 'dsr-toolkit';\r\nimport { AssignWorkersModel } from 'src/app/api/models/assign-workers-model';\r\nimport { MachineService } from 'src/app/api/services';\r\nimport { LoaderService } from 'src/app/common/services/loader.service';\r\nimport { OperatorAuthenticationService } from 'src/app/common/services/operator-authentication.service';\r\nimport { SfcNavigatorService } from 'src/app/common/services/sfc-navigator.service';\r\nimport { ComponentStatusModel } from '../models/component-status.model';\r\nimport { WorkerModel } from '../models/worker.model';\r\n\r\n@Component({\r\n  selector: 'app-machine-status-worker-form',\r\n  templateUrl: './machine-status-worker-form.component.html',\r\n  styleUrls: ['./machine-status-worker-form.component.scss']\r\n})\r\nexport class MachineStatusWorkerFormComponent implements OnInit {\r\n  loading = true;\r\n  status: ComponentStatusModel = null;\r\n  inputValue = '';\r\n  workers: WorkerModel[] = [];\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private machineService: MachineService,\r\n    private loaderService: LoaderService,\r\n    private notificationService: NotificationService,\r\n    private sfcNavigator: SfcNavigatorService,\r\n    private operatorAuthenticationService: OperatorAuthenticationService) {\r\n    this.status = this.router.getCurrentNavigation().extras.state as ComponentStatusModel;\r\n    if (this.status == null || !this.operatorAuthenticationService.isLoggedIn) {\r\n      this.goToMachineStatus();\r\n    }\r\n    this.loaderService.getLoading().subscribe((v) => {\r\n      setTimeout(() => this.loading = v);\r\n    });\r\n  }\r\n\r\n  goToSfc(): void {\r\n    this.sfcNavigator.goToSfc();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.status.selected?.length > 0) {\r\n      const workers = this.status.selected[0].workers;\r\n      if (workers?.length > 0) {\r\n        this.workers = workers;\r\n      }\r\n    }\r\n  }\r\n\r\n  goToMachineStatus(): void {\r\n    this.operatorAuthenticationService.resetTimeout();\r\n    this.router.navigate(['..'], { state: this.status, relativeTo: this.route });\r\n  }\r\n\r\n  submit(value: string): void {\r\n    this.inputValue = '';\r\n    var user = this.operatorAuthenticationService.currentUserValue;\r\n\r\n    this.machineService.postApiMachineValidateWorker(value).subscribe(\r\n      (response) => {\r\n        if (user.role == \"operatorPlus\" && user.id != response.id){\r\n          this.notificationService.showWarningTranslated('machine.assigningOnlyYourself', 'Ok', null, false, 4000);\r\n          return;\r\n        }\r\n\r\n        const worker: WorkerModel = { id: response.id, name: response.firstName, surname: response.lastName };\r\n        const existingWorkerIdx = this.workers.findIndex(ewo => ewo.id === worker.id);\r\n        if (existingWorkerIdx > -1) {\r\n          this.workers.splice(existingWorkerIdx, 1);\r\n        } else {\r\n          this.workers.push(worker);\r\n        }\r\n      },\r\n      (error) => {\r\n        if(error.status == 403)\r\n          this.notificationService.showErrorTranslated('machine.inactiveWorker', 'Ok', null, false, 4000);\r\n\r\n      },\r\n      () => {\r\n      }\r\n    );\r\n  }\r\n  RemoveWorker(value: WorkerModel):void\r\n  {\r\n    const WorkerIdx = this.workers.findIndex(ewo => ewo.id === value.id);\r\n    this.workers.splice(WorkerIdx,1)\r\n  }\r\n  save(): void {\r\n    const data: AssignWorkersModel = {\r\n      machineActivityIds: this.status.selected.map(m => m.id),\r\n      workerIds: this.workers.map(w => w.id)\r\n    };\r\n    this.machineService.postApiMachineAssignWorker(data).subscribe(\r\n      () => {\r\n        this.status.selected = [];\r\n        this.notificationService.showSuccessTranslated('common.savedSuccessfully', 'Ok', null, false, 4000);\r\n      },\r\n      () => { },\r\n      () => this.goToMachineStatus()\r\n    );\r\n  }\r\n}\r\n","<div class=\"header\">\r\n  <h1 class=\"mat-headline\" style=\"margin: auto;\">{{ 'machine.assignWorker' | translate }}</h1>\r\n  <div [style.flex]=\"1\"></div>\r\n  <dsr-button appearance=\"dsrRound\" style=\"visibility: hidden;\"></dsr-button>\r\n  <!-- <PT-dsr-app-logo-button [style.margin-left.rem]=\"1\" [appName]=\"'sfc'\" (click)=\"goToSfc()\"></PT-dsr-app-logo-button> -->\r\n</div>\r\n<mat-divider></mat-divider>\r\n<div class=\"content\">\r\n  <div class=\"list-container\">\r\n    <div class=\"statuses-list-wrapper\">\r\n      <h2 class=\"mat-title\" style=\"margin: auto;\">{{ 'machine.selectedStatuses' | translate }}</h2>\r\n      <app-form-machine-status-card-list [statuses]=\"status.selected\"></app-form-machine-status-card-list>\r\n    </div>\r\n    <mat-divider [vertical]=\"true\" style=\"margin: 1rem;\"></mat-divider>\r\n    <div style=\"flex: 1\">\r\n      <dsr-search-field icon=\"engineering\" label=\"machine.selectWorker\" placeholder=\"machine.selectWorker\"\r\n        style.width=\"100%\" [(value)]=\"inputValue\" [debounceTime]=\"0\" [focus]=\"true\" [allowClear]=\"false\"\r\n        (enterPress)=\"submit($event)\"></dsr-search-field>\r\n      <div style=\"flex: 1; overflow-y: auto; padding-right: 8px; padding-left: 8px\">\r\n        <div *ngFor=\"let worker of workers\" class=\"ripple-row\">\r\n          <h1 class=\"mat-headline\" style=\"margin: auto 0; flex: 1\">{{ worker.name }} {{ worker.surname }}</h1>\r\n          <div class=\"scaled-icons-wrapper\">\r\n            <button mat-button mat-icon-button aria-label=\"Clear\" color=\"accent\"\r\n            (click)=\"RemoveWorker(worker)\">\r\n            <mat-icon>delete_outline</mat-icon>\r\n          </button>\r\n          </div>\r\n          <!-- <h2 class=\"mat-title\" style=\"margin: auto 0; flex: 1\">{{ worker.surname }}</h2> -->\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"side-panel\">\r\n    <h1 class=\"mat-headline\" style=\"margin: auto;\">{{ status.machine.code }}</h1>\r\n    <h2 class=\"mat-title\" style=\"margin: auto;\">{{ status.machine.name }}</h2>\r\n    <div class=\"spacer\"></div>\r\n    <dsr-button appearance=\"dsrRoundNegativeOutline\" style=\"width:100%\" [style.margin-bottom.px]=\"16\"\r\n      (dsrClick)=\"goToMachineStatus()\">\r\n      {{ 'common.discard' | translate }}\r\n    </dsr-button>\r\n    <dsr-button appearance=\"dsrRound\" style=\"width:100%\" (dsrClick)=\"save()\">\r\n      {{ 'common.save' | translate }}</dsr-button>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { PTCommonModule } from 'src/app/common/PT-common.module';\r\nimport { MachineRoutingModule } from './machine-routing.module';\r\nimport { MachineStatusListComponent } from './machine-status-list/machine-status-list.component';\r\nimport { MachineSelectComponent } from './machine-select/machine-select.component';\r\nimport { MachineStatusReasonFormComponent } from './machine-status-reason-form/machine-status-reason-form.component';\r\nimport { MachineStatusWorkOrderFormComponent } from './machine-status-work-order-form/machine-status-work-order-form.component';\r\nimport { MachineStatusWorkerFormComponent } from './machine-status-worker-form/machine-status-worker-form.component';\r\nimport { FormMachineStatusCardListComponent } from './form-machine-status-card-list/form-machine-status-card-list.component';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MachineSelectAdminPanelDialogComponent } from './machine-select-admin-panel-dialog/machine-select-admin-panel-dialog.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { SelectWorkOrderPanelDialogComponent } from './machine-status-work-order-form/select-work-order-panel-dialog/select-work-order-panel-dialog.component';\r\n\r\n\r\nexport const MACHINE_STATE_URL = 'machine';\r\n\r\n@NgModule({\r\n  declarations: [MachineSelectComponent, MachineStatusListComponent, MachineStatusReasonFormComponent, MachineStatusWorkOrderFormComponent, MachineStatusWorkerFormComponent, FormMachineStatusCardListComponent, MachineSelectAdminPanelDialogComponent, SelectWorkOrderPanelDialogComponent],\r\n  imports: [\r\n    CommonModule,\r\n    PTCommonModule,\r\n    MachineRoutingModule,\r\n    MatDividerModule,\r\n    MatCardModule,\r\n    MatRippleModule,\r\n    MatIconModule,\r\n    CdkTableModule,\r\n    MatTableModule,\r\n    MatButtonModule,\r\n    MatDialogModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatSelectModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n  ]\r\n})\r\nexport class MachineModule { }\r\n","import { Component, HostBinding, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'PT-dsr-app-logo-button',\r\n  templateUrl: './dsr-app-logo-button.component.html',\r\n  styleUrls: ['./dsr-app-logo-button.component.scss']\r\n})\r\nexport class DsrAppLogoButtonComponent implements OnInit {\r\n  @Input() appName: 'eam' | 'sfc' = 'sfc';\r\n  @HostBinding('style.background') backgroundColor = 'transparent';\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.backgroundColor = this.getAppColor();\r\n  }\r\n\r\n  private getIconFileName(): string {\r\n    switch(this.appName) {\r\n      case 'eam':\r\n        return 'eam_mini_logo.svg';\r\n      case 'sfc':\r\n        return 'sfc_mini_logo.svg';\r\n    }\r\n  }\r\n\r\n  private getAppColor(): string {\r\n    switch(this.appName) {\r\n      case 'eam':\r\n        return '#069779';\r\n      case 'sfc':\r\n        return '#009FDB';\r\n    }\r\n  }\r\n\r\n  getIconPath(): string {\r\n    return '/assets/' + this.getIconFileName();\r\n  }\r\n\r\n}\r\n","<div class=\"app-logo-wrapper\">\r\n  <img class=\"app-logo\" [src]=\"getIconPath()\">\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpResponse,\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { LoaderService } from '../services/loader.service';\r\n\r\n@Injectable()\r\nexport class LoaderInterceptor implements HttpInterceptor {\r\n  private requests: HttpRequest<any>[] = [];\r\n\r\n  constructor(private loaderService: LoaderService) { }\r\n\r\n  removeRequest(req: HttpRequest<any>): void {\r\n    const i = this.requests.indexOf(req);\r\n    if (i >= 0) {\r\n      this.requests.splice(i, 1);\r\n    }\r\n    this.loaderService.setHttpLoading(this.requests.length > 0);\r\n  }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n    this.requests.push(req);\r\n\r\n    // console.log('No of requests--->' + this.requests.length);\r\n\r\n    this.loaderService.setHttpLoading(true);\r\n    return new Observable(observer => {\r\n      const subscription = next.handle(req)\r\n        .subscribe(\r\n          event => {\r\n            if (event instanceof HttpResponse) {\r\n              this.removeRequest(req);\r\n              observer.next(event);\r\n            }\r\n          },\r\n          err => {\r\n            // alert('error' + err);\r\n            this.removeRequest(req);\r\n            observer.error(err);\r\n          },\r\n          () => {\r\n            this.removeRequest(req);\r\n            observer.complete();\r\n          });\r\n      // remove request from queue when cancelled\r\n      return () => {\r\n        this.removeRequest(req);\r\n        subscription.unsubscribe();\r\n      };\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TranslateMessageFormatCompiler } from 'ngx-translate-messageformat-compiler';\r\nimport { HttpClient, HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { DsrToolkitModule, HttpErrorInterceptor } from 'dsr-toolkit';\r\nimport { ApiModule } from '../api/api.module';\r\nimport { environment } from 'src/environments/environment';\r\nimport { LoaderInterceptor } from './interceptors/loader-interceptor.service';\r\nimport { LoaderService } from './services/loader.service';\r\nimport { SfcNavigatorService } from './services/sfc-navigator.service';\r\nimport { DisplayConfigurationService } from './services/display-configuration.service';\r\nimport { DsrAppLogoButtonComponent } from './components/dsr-app-logo-button/dsr-app-logo-button.component';\r\nimport { OperatorAuthenticationService } from './services/operator-authentication.service';\r\n\r\nexport function HttpLoaderFactory(http: HttpClient): TranslateHttpLoader {\r\n  return new TranslateHttpLoader(http);\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DsrAppLogoButtonComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    DsrToolkitModule,\r\n    HttpClientModule,\r\n    ApiModule.forRoot({ rootUrl: environment.apiRootUrl }),\r\n  ],\r\n  exports: [\r\n    DsrToolkitModule,\r\n    ApiModule,\r\n    DsrAppLogoButtonComponent\r\n  ],\r\n  providers: [\r\n    DisplayConfigurationService,\r\n    LoaderService,\r\n    SfcNavigatorService,\r\n    OperatorAuthenticationService,\r\n    { provide: HTTP_INTERCEPTORS, useClass: HttpErrorInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: LoaderInterceptor, multi: true }\r\n  ]\r\n})\r\nexport class PTCommonModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { MachineDisplayConfiguration } from 'src/app/api/models';\r\nimport { MachineService } from 'src/app/api/services';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DisplayConfigurationService {\r\n  private _cache: Map<number, MachineDisplayConfiguration> = new Map();\r\n  constructor(private machineService: MachineService) {}\r\n\r\n  private async getMachineDisplayConfiguration(machineId: number) {\r\n    if (!this._cache.has(machineId)) {\r\n      await this.machineService.postApiMachineGetMachineDisplayConfiguration(machineId)\r\n        .toPromise()\r\n        .then((config) => this._cache.set(machineId, config));\r\n    }\r\n    return this._cache.get(machineId);\r\n  }\r\n\r\n  async getMachineWorkOrderAssigningMethod(machineId: number) {\r\n    return (await this.getMachineDisplayConfiguration(machineId)).workOrderAssigningMethod;\r\n  }\r\n\r\n  async getMachineProductionDisplayMethod(machineId: number) {\r\n    return (await this.getMachineDisplayConfiguration(machineId)).productionDisplayMethod;\r\n  }\r\n\r\n  async getUnassigningWorkOrderEnabled(machineId: number) {\r\n    return (await this.getMachineDisplayConfiguration(machineId)).unassigningWorkOrderEnabled;\r\n  }\r\n\r\n  async getAssignedWorkOrderLimit(machineId: number) {\r\n    return (await this.getMachineDisplayConfiguration(machineId)).assignedWorkOrderLimit;\r\n  }\r\n\r\n  async getMachineShiftsConfiguration(machineId: number) {\r\n    return (await this.getMachineDisplayConfiguration(machineId)).machineShiftsConfiguration;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FocusRefreshService {\r\n\r\n  private focusSubject: BehaviorSubject<boolean>;\r\n  public focus : Observable<boolean>;\r\n  constructor() {\r\n    this.focusSubject = new BehaviorSubject<boolean>(false);\r\n    this.focus = this.focusSubject.asObservable();\r\n  }\r\n\r\n  public reFocus()\r\n  {\r\n    this.focusSubject.next(false);\r\n    setTimeout(()=> {this.focusSubject.next(true)})\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoaderService {\r\n  private isLoading: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n  private isHttpLoading: boolean;\r\n  private isGlobalLoading: boolean;\r\n  constructor() { }\r\n\r\n  private emit(): void {\r\n    this.isLoading.next(this.isHttpLoading || this.isGlobalLoading);\r\n  }\r\n\r\n  setGlobalLoading(isLoading: boolean): void {\r\n    this.isGlobalLoading = isLoading;\r\n    this.emit();\r\n  }\r\n\r\n  setHttpLoading(isLoading: boolean): void {\r\n    this.isHttpLoading = isLoading;\r\n    this.emit();\r\n  }\r\n\r\n  getLoading(): Observable<boolean> {\r\n    return this.isLoading.asObservable();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { WorkerLoginResult } from 'src/app/api/models';\r\nimport { AdministrationService } from 'src/app/api/services';\r\nimport { MachineSelectComponent } from 'src/app/areas/machine/machine-select/machine-select.component';\r\nimport { NotificationService } from 'dsr-toolkit';\r\nimport { FocusRefreshService } from './focus-refresh.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OperatorAuthenticationService {\r\n  private loggedUser: any = null;\r\n  private currentUserSubject: BehaviorSubject<WorkerLoginResult>;\r\n  private currentWorkerSubject: BehaviorSubject<WorkerLoginResult>;\r\n  public currentUser: Observable<WorkerLoginResult>;\r\n  public currentWorker: Observable<WorkerLoginResult>;\r\n\r\n  private timeoutValue: number = 0;\r\n  private timeLeft: number = 0;\r\n  private interval: any;\r\n\r\n  constructor(\r\n    private administrationService: AdministrationService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private notificationService: NotificationService,\r\n    private focusRefreshService: FocusRefreshService,\r\n  ) {\r\n    const logoutTimeoutValue = localStorage.getItem(MachineSelectComponent.LOGOUT_TIMEOUT_KEY);\r\n    this.changeTimeout(JSON.parse(logoutTimeoutValue ?? '0') as number);\r\n\r\n    this.currentUserSubject = new BehaviorSubject<WorkerLoginResult>(null);\r\n    this.currentUser = this.currentUserSubject.asObservable();\r\n\r\n    this.currentWorkerSubject = new BehaviorSubject<WorkerLoginResult>(null);\r\n    this.currentWorker = this.currentWorkerSubject.asObservable();\r\n  }\r\n\r\n  public get currentUserValue(): WorkerLoginResult {\r\n    return this.currentUserSubject.value;\r\n  }\r\n\r\n  public get secondsLeft(): number {\r\n    return this.timeLeft;\r\n  }\r\n\r\n  public get isLoggedIn(): boolean {\r\n    console.log('isLoggedIn', this.loggedUser, this.loggedUser != null)\r\n    return this.loggedUser != null;\r\n  }\r\n\r\n  public login(operatorLoginCode: string) {\r\n    this.administrationService.postApiAdministrationLoginWorker(operatorLoginCode).subscribe(user => {\r\n      if(user?.role != \"operator\"){\r\n        this.loggedUser = user;\r\n        this.resetTimeout();\r\n        console.log(this.loggedUser);\r\n        this.currentUserSubject.next(this.loggedUser);\r\n      }\r\n      else{\r\n        this.currentWorkerSubject.next(user);\r\n      }\r\n    },\r\n      error => {\r\n        console.log(error);\r\n        if(error.status == 401)\r\n          this.notificationService.showErrorTranslated('machine.loginFailed', 'Ok', null, false, 4000);\r\n        if(error.status == 403)\r\n          this.notificationService.showErrorTranslated('machine.inactiveWorker', 'Ok', null, false, 4000);\r\n      }\r\n    )\r\n  }\r\n\r\n  public logout() {\r\n    this.loggedUser = null;\r\n    this.resetTimeout();\r\n    this.currentUserSubject.next(this.loggedUser);\r\n    this.focusRefreshService.reFocus();\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  public resetTimeout() {\r\n    if (this.interval) {\r\n      clearInterval(this.interval);\r\n    }\r\n    this.timeLeft = this.timeoutValue;\r\n    if (this.loggedUser && this.timeoutValue > 0) {\r\n      this.interval = setInterval(() => {\r\n        if(this.timeLeft > 0) {\r\n          this.timeLeft--;\r\n        } else {\r\n          this.logout();\r\n        }\r\n      },1000);\r\n    }\r\n  }\r\n\r\n  public changeTimeout(timeout: number) {\r\n    if (timeout < 0) {\r\n      timeout = 0;\r\n    }\r\n    this.timeoutValue = timeout;\r\n    this.resetTimeout();\r\n  }\r\n}\r\n","import { DOCUMENT } from '@angular/common';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SfcNavigatorService {\r\n  constructor(@Inject(DOCUMENT) private document: Document) { }\r\n\r\n  goToSfc(): void {\r\n    this.document.location.href = environment.sfcTerminalUrl;\r\n  }\r\n}\r\n","function hexToRgb(hex: string): string {\r\n  const bigint = parseInt(hex.replace('#', ''), 16);\r\n  // tslint:disable-next-line: no-bitwise\r\n  const r = (bigint >> 16) & 255;\r\n  // tslint:disable-next-line: no-bitwise\r\n  const g = (bigint >> 8) & 255;\r\n  // tslint:disable-next-line: no-bitwise\r\n  const b = bigint & 255;\r\n  return r + ',' + g + ',' + b;\r\n}\r\n\r\nexport function alphaRipple(hexColor: string, alpha: number = 0.2): string {\r\n  return `rgba(${hexToRgb(hexColor)},${alpha})`;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule, MatPaginatorIntl } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\n\r\nimport { DsrToolkitModule } from 'dsr-toolkit';\r\nimport { AppRoutingModule } from '../app-routing.module';\r\nimport { PTCommonModule } from '../common/PT-common.module';\r\nimport { LayoutComponent } from './layout/layout.component';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { LoadingOverlayComponent } from './loading-overlay/loading-overlay.component';\r\nimport { LoadingOverlayService } from './loading-overlay/loading-overlay.service';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [LayoutComponent, NavbarComponent, LoadingOverlayComponent],\r\n  imports: [\r\n    CommonModule,\r\n    DsrToolkitModule,\r\n    PTCommonModule,\r\n    MatSelectModule,\r\n    MatFormFieldModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    DragDropModule,\r\n    MatSidenavModule,\r\n    MatTabsModule,\r\n    MatSlideToggleModule,\r\n    MatExpansionModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatMenuModule,\r\n    MatButtonToggleModule,\r\n    MatGridListModule,\r\n  ],\r\n  exports: [\r\n    LayoutComponent\r\n  ],\r\n  providers: [\r\n    LoadingOverlayService\r\n  ]\r\n})\r\nexport class LayoutModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { LoaderService } from 'src/app/common/services/loader.service';\r\nimport { LoadingOverlayRef } from '../loading-overlay/loading-overlay.ref';\r\nimport { LoadingOverlayService } from '../loading-overlay/loading-overlay.service';\r\n\r\n@Component({\r\n  selector: 'app-layout',\r\n  templateUrl: './layout.component.html',\r\n  styleUrls: ['./layout.component.scss']\r\n})\r\nexport class LayoutComponent implements OnInit {\r\n  loading: boolean;\r\n  overlayRef: LoadingOverlayRef = null;\r\n  constructor(private loaderService: LoaderService, private overlay: LoadingOverlayService) {\r\n    this.loaderService.getLoading().subscribe((v) => {\r\n      // console.log(v);\r\n      setTimeout(() => this.loading = v);\r\n      if (v && this.overlayRef === null) {\r\n        // console.log('open overlay');\r\n        this.overlayRef = overlay.open();\r\n        this.overlayRef.afterClosed().subscribe(() => this.overlayRef = null);\r\n      }\r\n      else if (!v) {\r\n        // console.log('close overlay');\r\n        this.overlayRef?.close();\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-navbar></app-navbar>\r\n<div class=\"layout-container\">\r\n  <mat-grid-list cols=\"1\" rowHeight=\"100%\">\r\n    <mat-grid-tile>\r\n      <div class=\"content-container\">\r\n        <ng-content></ng-content>\r\n      </div>\r\n    </mat-grid-tile>\r\n  </mat-grid-list>\r\n</div>\r\n","import { trigger, state, style, transition, animate, AnimationEvent } from '@angular/animations';\r\nimport { Component, EventEmitter, OnInit } from '@angular/core';\r\n\r\nconst ANIMATION_TIMINGS = '400ms cubic-bezier(0.25, 0.8, 0.25, 1)';\r\n\r\n@Component({\r\n  selector: 'app-loading-overlay',\r\n  templateUrl: './loading-overlay.component.html',\r\n  styleUrls: ['./loading-overlay.component.scss'],\r\n  animations: [\r\n    // trigger('fade', [\r\n    //   state('fadeOut', style({ opacity: 0 })),\r\n    //   state('fadeIn', style({ opacity: 1 })),\r\n    //   transition('* => *', animate(ANIMATION_TIMINGS))\r\n    // ]),\r\n    trigger('slideContent', [\r\n      state('void', style({ opacity: 0 })),\r\n      state('enter', style({ opacity: 1 })),\r\n      state('leave', style({ opacity: 0 })),\r\n      transition('* => *', animate(ANIMATION_TIMINGS)),\r\n    ])\r\n  ]\r\n})\r\nexport class LoadingOverlayComponent implements OnInit {\r\n\r\n  animationState: 'void' | 'enter' | 'leave' = 'enter';\r\n  animationStateChanged = new EventEmitter<AnimationEvent>();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  // onLoad(event: Event): void {\r\n  //   this.loading = false;\r\n  // }\r\n\r\n  onAnimationStart(event: AnimationEvent): void {\r\n    this.animationStateChanged.emit(event);\r\n  }\r\n\r\n  onAnimationDone(event: AnimationEvent): void {\r\n    this.animationStateChanged.emit(event);\r\n  }\r\n\r\n  startExitAnimation(): void {\r\n    this.animationState = 'leave';\r\n  }\r\n}\r\n","<div class=\"overlay-content\"\r\n  [@slideContent]=\"animationState\"\r\n  (@slideContent.start)=\"onAnimationStart($event)\"\r\n  (@slideContent.done)=\"onAnimationDone($event)\">\r\n  <div class=\"spinner-wrapper\">\r\n    <mat-spinner></mat-spinner>\r\n  </div>\r\n</div>\r\n","import { OverlayRef } from '@angular/cdk/overlay';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { filter, take } from 'rxjs/operators';\r\nimport { LoadingOverlayComponent } from './loading-overlay.component';\r\n\r\nexport class LoadingOverlayRef {\r\n\r\n  private _beforeClose = new Subject<void>();\r\n  private _afterClosed = new Subject<void>();\r\n\r\n  componentInstance: LoadingOverlayComponent;\r\n\r\n  constructor(private overlayRef: OverlayRef) { }\r\n\r\n  close(): void {\r\n    this.componentInstance.animationStateChanged.pipe(\r\n      filter(event => event.phaseName === 'start'),\r\n      take(1)\r\n    ).subscribe(() => {\r\n      this._beforeClose.next();\r\n      this._beforeClose.complete();\r\n      this.overlayRef.detachBackdrop();\r\n    });\r\n\r\n    this.componentInstance.animationStateChanged.pipe(\r\n      filter(event => event.phaseName === 'done' && event.toState === 'leave'),\r\n      take(1)\r\n    ).subscribe(() => {\r\n      this.overlayRef.dispose();\r\n      this._afterClosed.next();\r\n      this._afterClosed.complete();\r\n      // this.overlayRef.detachBackdrop();\r\n\r\n      // tslint:disable-next-line: no-non-null-assertion\r\n      this.componentInstance = null!;\r\n    });\r\n\r\n    this.componentInstance.startExitAnimation();\r\n  }\r\n\r\n  afterClosed(): Observable<void> {\r\n    return this._afterClosed.asObservable();\r\n  }\r\n\r\n  beforeClose(): Observable<void> {\r\n    return this._beforeClose.asObservable();\r\n  }\r\n}\r\n","import { Overlay, OverlayConfig, OverlayRef } from '@angular/cdk/overlay';\r\nimport { ComponentPortal, PortalInjector } from '@angular/cdk/portal';\r\nimport { ComponentRef, Injectable, Injector } from '@angular/core';\r\nimport { LoadingOverlayComponent } from './loading-overlay.component';\r\nimport { LoadingOverlayRef } from './loading-overlay.ref';\r\n\r\n@Injectable()\r\nexport class LoadingOverlayService {\r\n\r\n  constructor(\r\n    private injector: Injector,\r\n    private overlay: Overlay) { }\r\n\r\n  open(): LoadingOverlayRef {\r\n    // Returns an OverlayRef which is a PortalHost\r\n    const overlayRef = this.createOverlay();\r\n\r\n    // Instantiate remote control\r\n    const dialogRef = new LoadingOverlayRef(overlayRef);\r\n\r\n    const overlayComponent = this.attachDialogContainer(overlayRef, dialogRef);\r\n\r\n    dialogRef.componentInstance = overlayComponent;\r\n\r\n    return dialogRef;\r\n  }\r\n\r\n  private createOverlay(): OverlayRef {\r\n    const overlayConfig = this.getOverlayConfig();\r\n    return this.overlay.create(overlayConfig);\r\n  }\r\n\r\n  private attachDialogContainer(overlayRef: OverlayRef, dialogRef: LoadingOverlayRef): LoadingOverlayComponent {\r\n    const injector = this.createInjector(dialogRef);\r\n\r\n    const containerPortal = new ComponentPortal(LoadingOverlayComponent, null, injector);\r\n    const containerRef: ComponentRef<LoadingOverlayComponent> = overlayRef.attach(containerPortal);\r\n\r\n    return containerRef.instance;\r\n  }\r\n\r\n  // tslint:disable-next-line: deprecation\r\n  private createInjector(dialogRef: LoadingOverlayRef): PortalInjector {\r\n    const injectionTokens = new WeakMap();\r\n\r\n    injectionTokens.set(LoadingOverlayRef, dialogRef);\r\n\r\n    // tslint:disable-next-line: deprecation\r\n    return new PortalInjector(this.injector, injectionTokens);\r\n  }\r\n\r\n  private getOverlayConfig(): OverlayConfig {\r\n    const positionStrategy = this.overlay.position()\r\n      .global()\r\n      .centerHorizontally()\r\n      .centerVertically();\r\n\r\n    const overlayConfig = new OverlayConfig({\r\n      hasBackdrop: true,\r\n      backdropClass: 'dark-backdrop',\r\n      scrollStrategy: this.overlay.scrollStrategies.block(),\r\n      positionStrategy\r\n    });\r\n\r\n    return overlayConfig;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { LanguageService } from 'dsr-toolkit';\r\nimport * as moment from 'moment';\r\nimport { Observable, Subscription, timer } from 'rxjs';\r\nimport { WorkerLoginResult } from 'src/app/api/models';\r\nimport { OperatorAuthenticationService } from 'src/app/common/services/operator-authentication.service';\r\nimport { AdministrationService } from 'src/app/api/services';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.scss']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  everySecond$: Observable<number> = timer(0, 1000);\r\n  subscriptions: Subscription[] = [];\r\n  currentTime: number;\r\n  currentLanguage: string;\r\n  currentOperator: WorkerLoginResult = null;\r\n  secondsToLogout: number = 0;\r\n  Header:string=\"\";\r\n  constructor(\r\n    private languageService: LanguageService,\r\n    private operatorAuthenticationService: OperatorAuthenticationService,\r\n    private administrationService: AdministrationService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.currentLanguage = this.languageService.getCurrent();\r\n    this.administrationService.getApiAdministrationGetCurrentTenantHeader().subscribe(val=> this.Header=val);\r\n    this.operatorAuthenticationService.currentUser.subscribe(worker => {\r\n      this.currentOperator = worker;\r\n    });\r\n    this.subscriptions.push(\r\n      this.everySecond$.subscribe(val => {\r\n        this.currentTime = Date.now();\r\n        this.secondsToLogout = this.operatorAuthenticationService.secondsLeft;\r\n      })\r\n    );\r\n  }\r\n\r\n  get secondsLeftParsed(): string {\r\n    const duration = moment.duration(this.secondsToLogout, 'seconds');\r\n    // const resultstring = moment.utc(duration.asMilliseconds()).format('HH:mm:ss');\r\n    const resultstring = moment.utc(duration.asMilliseconds()).format('mm:ss');\r\n    return resultstring;\r\n  }\r\n\r\n  logout() {\r\n    this.operatorAuthenticationService.logout();\r\n  }\r\n\r\n  // changeLanguage() {\r\n  //   this.languageService.setCurrent(this.currentLanguage);\r\n  //   // location.reload();\r\n  // }\r\n\r\n}\r\n","<!-- <mat-toolbar class=\"mat-elevation-z2\" color=\"primary\" style=\"border-bottom: 1px solid #FFFFFF;\"> -->\r\n<mat-toolbar class=\"mat-elevation-z2\" color=\"primary\">\r\n  <mat-toolbar-row>\r\n    <img class=\"app-logo\" src=\"/assets/PT_logo.svg\">\r\n    <div class=\"spacer\"></div>\r\n    <div class=\"spacer\">{{Header}}</div>\r\n    <span class=\"navbar-text\">{{ currentTime | date: \"E d \\u22C5 H:mm\" : undefined : currentLanguage }}</span>\r\n    <ng-container *ngIf=\"currentOperator\">\r\n      <span style=\"margin-left: 1rem; margin-right: 1rem\">|</span>\r\n      <span class=\"navbar-text\">{{ currentOperator.firstName }} {{ currentOperator.lastName }}</span>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"currentOperator && secondsToLogout > 0\">\r\n      <span style=\"margin-left: 1rem; margin-right: 1rem\">|</span>\r\n      <mat-icon class=\"material-icons-outlined\" style=\"margin-right: 0.5rem\">timer</mat-icon>\r\n      <span class=\"navbar-text\">{{ secondsLeftParsed }}</span>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"currentOperator\">\r\n      <dsr-button appearance=\"dsrRoundOutline\" [style.margin-left.rem]=\"1\" (dsrClick)=\"logout()\">\r\n        <mat-icon class=\"material-icons-outlined\" style=\"margin-left: -0.5rem; margin-right: 0.5rem;\">power_settings_new</mat-icon>\r\n        {{ 'common.logout' | translate }}\r\n      </dsr-button>\r\n    </ng-container>\r\n  </mat-toolbar-row>\r\n</mat-toolbar>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  // apiRootUrl: 'http://dsrws07.dsr.com.pl:9010',\r\n  apiRootUrl: 'http://localhost:60653',\r\n  sfcTerminalUrl: 'https://sfc-dev.4factory.com/terminal/'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","var map = {\n\t\"./af\": 6431,\n\t\"./af.js\": 6431,\n\t\"./ar\": 1286,\n\t\"./ar-dz\": 1616,\n\t\"./ar-dz.js\": 1616,\n\t\"./ar-kw\": 9759,\n\t\"./ar-kw.js\": 9759,\n\t\"./ar-ly\": 3160,\n\t\"./ar-ly.js\": 3160,\n\t\"./ar-ma\": 2551,\n\t\"./ar-ma.js\": 2551,\n\t\"./ar-sa\": 9989,\n\t\"./ar-sa.js\": 9989,\n\t\"./ar-tn\": 6962,\n\t\"./ar-tn.js\": 6962,\n\t\"./ar.js\": 1286,\n\t\"./az\": 5887,\n\t\"./az.js\": 5887,\n\t\"./be\": 4572,\n\t\"./be.js\": 4572,\n\t\"./bg\": 3276,\n\t\"./bg.js\": 3276,\n\t\"./bm\": 3344,\n\t\"./bm.js\": 3344,\n\t\"./bn\": 8985,\n\t\"./bn.js\": 8985,\n\t\"./bo\": 4391,\n\t\"./bo.js\": 4391,\n\t\"./br\": 6728,\n\t\"./br.js\": 6728,\n\t\"./bs\": 5536,\n\t\"./bs.js\": 5536,\n\t\"./ca\": 1043,\n\t\"./ca.js\": 1043,\n\t\"./cs\": 420,\n\t\"./cs.js\": 420,\n\t\"./cv\": 3513,\n\t\"./cv.js\": 3513,\n\t\"./cy\": 6771,\n\t\"./cy.js\": 6771,\n\t\"./da\": 7978,\n\t\"./da.js\": 7978,\n\t\"./de\": 6061,\n\t\"./de-at\": 5204,\n\t\"./de-at.js\": 5204,\n\t\"./de-ch\": 2653,\n\t\"./de-ch.js\": 2653,\n\t\"./de.js\": 6061,\n\t\"./dv\": 85,\n\t\"./dv.js\": 85,\n\t\"./el\": 8579,\n\t\"./el.js\": 8579,\n\t\"./en-au\": 5724,\n\t\"./en-au.js\": 5724,\n\t\"./en-ca\": 525,\n\t\"./en-ca.js\": 525,\n\t\"./en-gb\": 2847,\n\t\"./en-gb.js\": 2847,\n\t\"./en-ie\": 7216,\n\t\"./en-ie.js\": 7216,\n\t\"./en-il\": 9305,\n\t\"./en-il.js\": 9305,\n\t\"./en-in\": 3364,\n\t\"./en-in.js\": 3364,\n\t\"./en-nz\": 9130,\n\t\"./en-nz.js\": 9130,\n\t\"./en-sg\": 1161,\n\t\"./en-sg.js\": 1161,\n\t\"./eo\": 802,\n\t\"./eo.js\": 802,\n\t\"./es\": 328,\n\t\"./es-do\": 5551,\n\t\"./es-do.js\": 5551,\n\t\"./es-us\": 4790,\n\t\"./es-us.js\": 4790,\n\t\"./es.js\": 328,\n\t\"./et\": 6389,\n\t\"./et.js\": 6389,\n\t\"./eu\": 2961,\n\t\"./eu.js\": 2961,\n\t\"./fa\": 6151,\n\t\"./fa.js\": 6151,\n\t\"./fi\": 7997,\n\t\"./fi.js\": 7997,\n\t\"./fil\": 8898,\n\t\"./fil.js\": 8898,\n\t\"./fo\": 7779,\n\t\"./fo.js\": 7779,\n\t\"./fr\": 8174,\n\t\"./fr-ca\": 3287,\n\t\"./fr-ca.js\": 3287,\n\t\"./fr-ch\": 8867,\n\t\"./fr-ch.js\": 8867,\n\t\"./fr.js\": 8174,\n\t\"./fy\": 452,\n\t\"./fy.js\": 452,\n\t\"./ga\": 5014,\n\t\"./ga.js\": 5014,\n\t\"./gd\": 4127,\n\t\"./gd.js\": 4127,\n\t\"./gl\": 2124,\n\t\"./gl.js\": 2124,\n\t\"./gom-deva\": 6444,\n\t\"./gom-deva.js\": 6444,\n\t\"./gom-latn\": 7953,\n\t\"./gom-latn.js\": 7953,\n\t\"./gu\": 6604,\n\t\"./gu.js\": 6604,\n\t\"./he\": 1222,\n\t\"./he.js\": 1222,\n\t\"./hi\": 4235,\n\t\"./hi.js\": 4235,\n\t\"./hr\": 622,\n\t\"./hr.js\": 622,\n\t\"./hu\": 7735,\n\t\"./hu.js\": 7735,\n\t\"./hy-am\": 402,\n\t\"./hy-am.js\": 402,\n\t\"./id\": 9187,\n\t\"./id.js\": 9187,\n\t\"./is\": 536,\n\t\"./is.js\": 536,\n\t\"./it\": 5007,\n\t\"./it-ch\": 4667,\n\t\"./it-ch.js\": 4667,\n\t\"./it.js\": 5007,\n\t\"./ja\": 2093,\n\t\"./ja.js\": 2093,\n\t\"./jv\": 59,\n\t\"./jv.js\": 59,\n\t\"./ka\": 6870,\n\t\"./ka.js\": 6870,\n\t\"./kk\": 880,\n\t\"./kk.js\": 880,\n\t\"./km\": 1083,\n\t\"./km.js\": 1083,\n\t\"./kn\": 8785,\n\t\"./kn.js\": 8785,\n\t\"./ko\": 1721,\n\t\"./ko.js\": 1721,\n\t\"./ku\": 7851,\n\t\"./ku.js\": 7851,\n\t\"./ky\": 1727,\n\t\"./ky.js\": 1727,\n\t\"./lb\": 346,\n\t\"./lb.js\": 346,\n\t\"./lo\": 3002,\n\t\"./lo.js\": 3002,\n\t\"./lt\": 4035,\n\t\"./lt.js\": 4035,\n\t\"./lv\": 6927,\n\t\"./lv.js\": 6927,\n\t\"./me\": 5634,\n\t\"./me.js\": 5634,\n\t\"./mi\": 4173,\n\t\"./mi.js\": 4173,\n\t\"./mk\": 6320,\n\t\"./mk.js\": 6320,\n\t\"./ml\": 1705,\n\t\"./ml.js\": 1705,\n\t\"./mn\": 1062,\n\t\"./mn.js\": 1062,\n\t\"./mr\": 2805,\n\t\"./mr.js\": 2805,\n\t\"./ms\": 1341,\n\t\"./ms-my\": 9900,\n\t\"./ms-my.js\": 9900,\n\t\"./ms.js\": 1341,\n\t\"./mt\": 7734,\n\t\"./mt.js\": 7734,\n\t\"./my\": 9034,\n\t\"./my.js\": 9034,\n\t\"./nb\": 9324,\n\t\"./nb.js\": 9324,\n\t\"./ne\": 6495,\n\t\"./ne.js\": 6495,\n\t\"./nl\": 673,\n\t\"./nl-be\": 6272,\n\t\"./nl-be.js\": 6272,\n\t\"./nl.js\": 673,\n\t\"./nn\": 2486,\n\t\"./nn.js\": 2486,\n\t\"./oc-lnc\": 6219,\n\t\"./oc-lnc.js\": 6219,\n\t\"./pa-in\": 2829,\n\t\"./pa-in.js\": 2829,\n\t\"./pl\": 8444,\n\t\"./pl.js\": 8444,\n\t\"./pt\": 3170,\n\t\"./pt-br\": 6117,\n\t\"./pt-br.js\": 6117,\n\t\"./pt.js\": 3170,\n\t\"./ro\": 6587,\n\t\"./ro.js\": 6587,\n\t\"./ru\": 9264,\n\t\"./ru.js\": 9264,\n\t\"./sd\": 2135,\n\t\"./sd.js\": 2135,\n\t\"./se\": 5366,\n\t\"./se.js\": 5366,\n\t\"./si\": 3379,\n\t\"./si.js\": 3379,\n\t\"./sk\": 6143,\n\t\"./sk.js\": 6143,\n\t\"./sl\": 196,\n\t\"./sl.js\": 196,\n\t\"./sq\": 1082,\n\t\"./sq.js\": 1082,\n\t\"./sr\": 1621,\n\t\"./sr-cyrl\": 8963,\n\t\"./sr-cyrl.js\": 8963,\n\t\"./sr.js\": 1621,\n\t\"./ss\": 1404,\n\t\"./ss.js\": 1404,\n\t\"./sv\": 5685,\n\t\"./sv.js\": 5685,\n\t\"./sw\": 3872,\n\t\"./sw.js\": 3872,\n\t\"./ta\": 4106,\n\t\"./ta.js\": 4106,\n\t\"./te\": 9204,\n\t\"./te.js\": 9204,\n\t\"./tet\": 3692,\n\t\"./tet.js\": 3692,\n\t\"./tg\": 6361,\n\t\"./tg.js\": 6361,\n\t\"./th\": 1735,\n\t\"./th.js\": 1735,\n\t\"./tk\": 1568,\n\t\"./tk.js\": 1568,\n\t\"./tl-ph\": 6129,\n\t\"./tl-ph.js\": 6129,\n\t\"./tlh\": 3759,\n\t\"./tlh.js\": 3759,\n\t\"./tr\": 1644,\n\t\"./tr.js\": 1644,\n\t\"./tzl\": 875,\n\t\"./tzl.js\": 875,\n\t\"./tzm\": 6878,\n\t\"./tzm-latn\": 1041,\n\t\"./tzm-latn.js\": 1041,\n\t\"./tzm.js\": 6878,\n\t\"./ug-cn\": 4357,\n\t\"./ug-cn.js\": 4357,\n\t\"./uk\": 4810,\n\t\"./uk.js\": 4810,\n\t\"./ur\": 6794,\n\t\"./ur.js\": 6794,\n\t\"./uz\": 8966,\n\t\"./uz-latn\": 7959,\n\t\"./uz-latn.js\": 7959,\n\t\"./uz.js\": 8966,\n\t\"./vi\": 5386,\n\t\"./vi.js\": 5386,\n\t\"./x-pseudo\": 3156,\n\t\"./x-pseudo.js\": 3156,\n\t\"./yo\": 8028,\n\t\"./yo.js\": 8028,\n\t\"./zh-cn\": 9330,\n\t\"./zh-cn.js\": 9330,\n\t\"./zh-hk\": 9380,\n\t\"./zh-hk.js\": 9380,\n\t\"./zh-mo\": 874,\n\t\"./zh-mo.js\": 874,\n\t\"./zh-tw\": 6508,\n\t\"./zh-tw.js\": 6508\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 6700;"],"names":[],"sourceRoot":"webpack:///"}